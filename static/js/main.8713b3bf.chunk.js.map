{"version":3,"sources":["static/svgicon/FrameIcon.svg","static/svgicon/SettingIcon.svg","components/ui/RadioButtons.tsx","components/ui/Checkbox.tsx","functions/cleaningData.tsx","components/redux/project/projectType.tsx","components/utulities/history.tsx","functions/axios.tsx","components/redux/project/projectReducer.tsx","components/redux/project/projectActions.tsx","components/forms/createProjectForm.tsx","components/ui/ConstantUi.tsx","components/Navbar.tsx","components/Body.tsx","static/svgicon/subprojectelement.svg","static/svgicon/bigprogressicon.svg","components/ui/CircleProgressContent.tsx","components/screens/Overview.tsx","static/svgicon/userDefault.svg","static/svgicon/iflogo.svg","static/svgicon/searchbutton.svg","static/svgicon/milestonetab.svg","static/svgicon/addicon.svg","components/forms/editprojectnameform.tsx","functions/process.tsx","static/svgicon/calendar.svg","components/ui/DatePicker.tsx","components/forms/datepickerForm.tsx","static/svgicon/discard.svg","static/svgicon/accept.svg","components/forms/descriptionProjectForm.tsx","static/svgicon/closemilestonetab.svg","static/svgicon/treeviewlogo.svg","static/svgicon/smallpointer.svg","static/svgicon/bigpointer.svg","static/svgicon/milestonepointer.svg","components/ui/LinearProgressBar.tsx","static/svgicon/clock.svg","static/svgicon/threedot.svg","components/ui/Draggable.tsx","components/forms/durationForm.tsx","components/forms/ProgressForm.tsx","components/ui/MilestoneEdit.tsx","components/ui/SquaredProgress.tsx","components/ui/TreeViewsMainContent.tsx","components/ui/TreeViewComponent.tsx","components/screens/ProjectDetails.tsx","components/base.tsx","reportWebVitals.ts","index.tsx"],"names":["FirstLogo","width","height","viewBox","fill","xmlns","cx","cy","r","fill-opacity","stroke","stroke-opacity","stroke-width","SecondLogo","LabelText","styled","span","Checkbox","props","FormControl","component","required","RadioGroup","value","onChange","setvalue","FormControlLabel","control","Radio","defaultChecked","icon","checkedIcon","color","label","calculateMilestonesPositioning","list","startdate","fullwidth","isexpired","fullwidthgray","diffenddatestartdate","projectstartdate","Date","fullWidth","Array","from","map","data","index","diffTimeMilestoneandProjectStartDate","startDate","Math","ceil","dateDifference","date1","date2","calculatedifference","round","dateDifference2","PercentageConvertation","roundedString","Number","toFixed","ConvertDateFormat","date","splitteddate","split","convertedformatdate","ConvertDateFormat2","calculateDatesPositioning","endDate","PlannedEndDate","timeDifferenceBetweenPlannedDateAndEndDate","progressOfProject","progressOfTime","ismilestones","enddate","diffstartdateplannedenddate","diffstartdateenddate","diffplannedandEnddate","fullWidthGray","progressofproject","secondlineWidth","firstline","progressprojecttime","CleanTypeOfData","projecttype","stringprojectname","backendDateConverter","dateVar","strtodate","activemonth","getMonth","dd","String","getDate","padStart","getFullYear","frontendDatePlus","duration","newdate","setDate","useContainerDimensions","myRef","getDimensions","current","offsetWidth","offsetHeight","React","useState","dimensions","setDimensions","useEffect","handleResize","window","addEventListener","removeEventListener","FETCH_ALL_PROJECTS_DATA_LOADING","FETCH_ALL_PROJECTS_DATA_SUCCEED","FETCH_ALL_PROJECTS_DATA_FAILURE","UPDATE_PROJECT_DATA_SUCCEED","UPDATE_PROJECT_DATA_FAILURE","ADD_MILESTONE_TO_PROJECT","CREATE_PROJECT","createBrowserHistory","myaxios","axios","create","baseURL","initialState","loading","projects","description","goal","goalAchievingProbability","id","isToplevel","isnamechanged","milestones","plannedEndDate","timeDifference","typeofproject","user","error","store","createStore","state","action","type","payload","console","log","composeWithDevTools","applyMiddleware","ReduxThunk","fetchProjectDataLoading","createProjectMilestoneSucceed","newmilestone","projectid","payloads","currentProjectIndex","getState","findIndex","project","slice","updateProjectUpdatedSucceed","key","ismilestone","milestoneid","findindexOfMilestone","milestone","preparedarr","mybuddy","forEach","milestoneupdate","update","$set","projectupdate","updateProjectUpdatedFailure","fetchProjects","dispatch","get","then","res","catch","err","UpdateSingleProjectOrMilestoneUpdate","a","put","main_project","message","createProjectMiddleWare","goalname","post","createdproject","history","push","createProjectMilestoneMiddleWare","main_project_id","newEndDate","dueDate","Form","form","CreateProjectRadioInputSubmitButton","div","CreateProjectRadioInputForms","setValue","useDispatch","useHistory","method","onSubmit","e","preventDefault","newvalue","today","mm","yyyy","getToday","event","target","Button","style","fontWeight","fontFamily","onClick","ActualClickHandle","UserLogoImage","img","LeaftAsideContent2Image","TopHeaderLeftBıgProgressIcon","p","small","medium","MilestoneCloseEditTabIcon","MilestoneAddButtonIcon","MilestoneTabIcon","SVG","ClockIconImage","MilestoneSearchTabIcon","MilestoneTreeViewIcon","FrameIconElement","SettingsIconElement","SaveIcon","DiscardIcon","BodyContainer","NavbarRoot","NavbarContainer","NavbarLinksContainer","NavbarLinksContainerItems","NavbarUserContainer","NavbarItem","CreateNewProjectButtonContainer","DropDownCreateMenuContainer","opened","DropDownHeaderContainer","DropDownMenuHeaderText","DropDownHintText","DropDownMenuBody","ProjectDetailsContainer","ismilestoneedit","Detail2","LeftAside","LeftAsideContentBox","LeftAsideUserContent","LeftAsideContent2","LeftAsideContent2TextBox","UserNameContainer","TopHeader","TopHeaderLeft","TopHeaderRight","TopHeaderTitleBox","ProjectGoalText","ProjectNameInputContainer","TopHeaderStatusBarContainer","ControlPanel","ControlPanelItemsContainer","DetailContent","DetailContentContainer","DescriptionBoxContainer","SaveDiscardContainer","DetailMilestonesRoot","DetailMilestoneContainer","MilestonesHeader","MilestoneHeaderText","MilestoneHeaderHintText","MilestoneAddButtonContainer","MilestonesBodyRoot","MilestonesWrapper","mouseOver","MilestoneLeftSide","ClockIconContainer","MilestoneGoalStaticsContainer","MilestoneGoalStatic","MilestoneGoalContent","MilestonesDateContentRoot","isEditTapOpened","MilestoneDateContentContanier","MilestoneDateContentLabel","MilestoneDateDataContent","MilestoneStatusBarsContentContainer","MilestoneEndThreeDotContainer","MilestoneEndThreeDotImage","ProjectOverviewWrapper","ProjectOverviewContentBox","ProjectOverviewHeaderBox","ProjectContentBox","ProgressBarContainer","MainProjectContainer","SubSubProjectBox","SubProjectGroup","SubSubProjectItem","HeaderTextContainer","GoalText","ProjectNameContainer","Navbar","DropDawnMenuContainerRef","useRef","CreateNewProjectButtonRef","handleClickOutside","contains","setCreateMenu","document","showCreateMenu","src","FrameIcon","context","ref","SettingsIcon","BodyComponent","children","CircleProgressContent","checkitout","mainone","treeView","Box","position","display","visibility","CircularProgress","smallSize","mediumSize","zIndex","thickness","variant","progressvalue","top","left","bottom","right","alignItems","justifyContent","BıgProgressIcon","textAlign","minHeight","minWidth","backgroundColor","borderRadius","fontSize","fontStyle","lineHeight","letterSpacing","OverviewProject","useSelector","LoadedData","onMouse","setOnMouse","onMouseEnter","onMouseLeave","SubProjectBoxIcon","SubmitButton","button","ProjectGoalLabel","isFocused","EditForm","projectnameinputref","editformref","defaultValue","activeProjectName","setActiveProjectName","SubmitButtonRef","isFocus","setisFocus","handleMilestoneNameSubmit","length","blur","charAt","toUpperCase","marginBottom","TextField","currentTarget","helperText","inputRef","InputLabelProps","shrink","issmall","onFocus","onBlur","click","name","placeholder","inputProps","maxLength","InputProps","disableUnderline","boxSizing","maxHeight","durationUpdate","durationNumber","callbackFunction","currentOneid","currentMilestones","currentDuration","arrfirst","getProject","find","actualStartDate","filter","currentMilestone","getchangedarr","elm","calculateProgressOfTime","getDateofFirst","ReadyToSend","element","willchangearr","arr","item","endResult","concat","one","two","result","Promise","all","promise","finally","getTotals","calculateGoalAchievingProbability","progress","dueDateUpdate","newDueDate","actualPlannedEndDate","newDueDatee","durationcalculated","calculatedProgressOfTime","project_id","callback","totalRelativeProgress","totalDuration","currentProjectProgressOfTime","promises1","currentMilestoneData","relativeProgress","responses","changeStartDateOfProject","newstartDate","activePlanendEndDate","getProjectMilestones","getProjectPlannedDate","promises","promises2","DatePickerContainer","DetailContentHeader","ProjectTypeContainer","ProjectTypeLabelText","ExactProjectText","CalendarIconComp","DatePicker","defaultStartData","ActiveStartDate","setActiveStartDate","setOnFocus","defaultPlannedEndData","ActivePlannedDate","setActivePlannedDate","getbutton","getElementsByClassName","setAttribute","CannotBeEqual","utils","DateFnsUtils","margin","format","allowKeyboardControl","readOnly","borderBottom","DialogProps","handleStartDate","KeyboardButtonProps","keyboardIcon","CalendarIcon","minDate","handleEndDate","DatePickerForm","actualprojectid","activeStartDate","datepickerformref","activeEndDate","setActiveEndDate","defaultStartDate","setDefaultStartDate","defaultEndDate","setDefaultEndDate","active","activePlannedEndDate","active2","handleSubmit","ActiveEndDateClean","ActiveStarDateClean","handleMilestoneDateSubmit","textarea","DescriptionBoxTextArea","activeDescriptionText","setActiveDescriptionText","processName","setProcessName","setSaveProps","InputBoxRef","handleDescriptionBoxSubmit","handleDescriptionForMilestone","typemilestone","flexDirection","flexBasis","cursor","multiline","rowsMax","IconButton","disabled","AcceptIcon","DiscardSvgIcon","MainContainerBody","MainContainerGrayArea","MainContainerTop","MainContainerBottom","MilestonesIcon","FirstLine","SecondLine","SmallPointerIcon","BigPointerIcon","PlannedAndDatePointer","LinearProgressBar","getLocationOnProgressBar","expression","isMilestoneEditTab","milestonestartdate","milestoneeduedate","milestoneprogress","milestoneprogressOfTime","Tooltip","title","SmallPointer","floor","BigPointer","MilestonePointer","DragComponent","characters","updateCharacters","orderHandle","newarray","oldarray","olditem","iseditTabCallbackFunction","useCallback","isEditTabOpened","getElementById","selectedTab","border","scrollTo","scrollPosition","WrapperComponent","goalachiveng","editTab","getMilestoneData","progressoftime","onMouseOverWrapper","onMouseLeaveWrapper","draggableId","provided","innerRef","draggableProps","dragHandleProps","ClockIcon","str","cutpoint","maxlimitlength","substring","threeDotImage","onDragEnd","destination","items","items2","splice","source","reorderedItem","droppableId","className","droppableProps","is_main_project","DurationForm","handleDurationEdit","padding","min","inputMode","Typography","marginLeft","ProgressForm","max","MilestoneEditContainer","isOpened","MilestoneEditHeader","MilestoneEditBody","MilestoneEditBottom","MilestoneEditStatusContainer","MilestoneEditCircleProgressContainer","MilestoneEditLinearProgressContanier","MilestoneEditDatasContainer","MilestoneEditDatasTop","MilestoneEditDatasBottom","MilestoneEditDataTopItem","MilestoneEditComponent","projectdata","firstTimeChange","SquaredProgressBarOutline","gap","SquarredProgressBarNumber","SquaredProgress","isSquarredMouseOver","setIsSquarredMouseOver","subprops","SquarredProgressContent","howmanygolden","misspart","i","parts","acceptedparts","flooredhowmnaygoldenbar","preparedstyleforborder","borderRight","borderTop","borderLeft","x","decimals","decimalPlaces","toString","tofixed","resultnumber","fullparts","difference","includes","generateSquaredOutline","progressValue","Element","gaps","stopPropagation","OpenEditMilestoneTab","closeDialog","goalAchievingValue","ProjectArea","maxheight","AllMilestonesPlusGaps","maxWidth","TreeViewMainContentComponent","mouseOverProjectArea","setMouseOverProjectArea","ProjectAreaWidthRef","AllMilestonesPlusGapsWidthRef","AllMilestonesPlusGapsWidth","AllMilestonesPlusGapsHeight","widthOfProjectArea","heightOfProjectArea","SquaredProgressCallBack","TreeViewComponent","classes","makeStyles","paper","background","overflowX","useStyles","TreeViewComponentContent","Dialog","open","onClose","close","paddingBottom","projectgoalachieveng","projectname","ProjectDetailPage","milestonesTab","setMilestonesTab","milestoneEditTab","setMilestoneEditTab","activeMilestoneData","setActiveMilestoneData","isCreatingNewMilestones","setisCreatingNewMilestones","TreeViewOpened","setTreeViewOpened","setSelectedTab","setScrollPosition","ChangeDraggerRef","dom","match","params","projectraw","getdata","isTreeview","insideTreeView","topposition","toppositionıofparent","getWrapperElement","HTMLElement","offsetTop","getdraggableDOm","getMilestoneDataInfo","activeMilestione","CloseTreeView","ProjectDetailContent","TreeViewSvgIcon","UserLogo","IfLogo","marginTop","SearchButtonSvg","MilestoneTabSvg","disableShrink","addMilestoneFunction","AddIcon","DraggerRef","CloseMilestonEditTabIcon","MilestoneEdit","goalachivevalue","NavbarComponent","useLocation","pathname","BaseApp","detailPage","setDetailPage","location","href","Body","exact","path","ProjectDetailPageProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8713b3bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/FrameIcon.dd425d1b.svg\";","export default __webpack_public_path__ + \"static/media/SettingIcon.b0058e6d.svg\";","import React from \"react\"\r\n\r\nexport interface FirstLogoProps {}\r\n\r\nconst FirstLogo: React.FC<FirstLogoProps> = () => {\r\n  return (\r\n    <svg\r\n      width=\"31\"\r\n      height=\"31\"\r\n      viewBox=\"0 0 31 31\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle cx=\"15.5\" cy=\"15.5\" r=\"15.5\" fill=\"#636380\" fill-opacity=\"0.1\" />\r\n      <circle\r\n        cx=\"15.5\"\r\n        cy=\"15.5\"\r\n        r=\"14.5\"\r\n        stroke=\"#F0F0FF\"\r\n        stroke-opacity=\"0.1\"\r\n        stroke-width=\"2\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\nexport interface SecondLogoProps {}\r\n\r\nconst SecondLogo: React.FC<SecondLogoProps> = () => {\r\n  return (\r\n    <svg\r\n      width=\"31\"\r\n      height=\"31\"\r\n      viewBox=\"0 0 31 31\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle cx=\"15.5\" cy=\"15.5\" r=\"15.5\" fill=\"#636380\" fill-opacity=\"0.1\" />\r\n      <circle\r\n        cx=\"15.5\"\r\n        cy=\"15.5\"\r\n        r=\"14.5\"\r\n        stroke=\"#F0F0FF\"\r\n        stroke-opacity=\"0.1\"\r\n        stroke-width=\"2\"\r\n      />\r\n      <circle cx=\"15.4999\" cy=\"15.5\" r=\"6.79825\" fill=\"#E4DC00\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport { FirstLogo, SecondLogo }\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Radio from \"@material-ui/core/Radio\"\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport { FirstLogo, SecondLogo } from \"./RadioButtons\"\r\n// Inspired by blueprintjs\r\n\r\nexport const LabelText = styled.span`\r\n  width: 98px;\r\n  color: rgba(240, 240, 255, 1);\r\n  height: 22px;\r\n  font-family: Aileron;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\ninterface CheckBoxProps {\r\n  setvalue: any\r\n  value: string\r\n}\r\n\r\nconst Checkbox: React.FC<CheckBoxProps> = props => {\r\n  return (\r\n    <FormControl component=\"fieldset\" required>\r\n      <RadioGroup value={props.value} onChange={props.setvalue}>\r\n        <FormControlLabel\r\n          value=\"S\"\r\n          control={\r\n            <Radio\r\n              defaultChecked\r\n              icon={<FirstLogo />}\r\n              checkedIcon={<SecondLogo />}\r\n              color=\"default\"\r\n            />\r\n          }\r\n          label={<LabelText>Step By Step</LabelText>}\r\n        />\r\n        <FormControlLabel\r\n          value=\"A\"\r\n          control={\r\n            <Radio\r\n              icon={<FirstLogo />}\r\n              checkedIcon={<SecondLogo />}\r\n              color=\"default\"\r\n            />\r\n          }\r\n          label={<LabelText>All at Once</LabelText>}\r\n        />\r\n        <FormControlLabel\r\n          value=\"C\"\r\n          control={\r\n            <Radio\r\n              icon={<FirstLogo />}\r\n              checkedIcon={<SecondLogo />}\r\n              color=\"default\"\r\n            />\r\n          }\r\n          label={<LabelText>Cycle Up</LabelText>}\r\n        />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default Checkbox\r\n","import { dateTimePickerDefaultProps } from \"@material-ui/pickers/constants/prop-types\"\r\nimport { differenceInBusinessDays } from \"date-fns\"\r\nimport React from \"react\"\r\nconst calculateMilestonesPositioning = (\r\n  list,\r\n  startdate,\r\n  fullwidth,\r\n  isexpired,\r\n  fullwidthgray,\r\n  diffenddatestartdate\r\n) => {\r\n  const projectstartdate: any = new Date(startdate)\r\n  let fullWidth = fullwidth\r\n\r\n  //expired\r\n  return Array.from(list).map((data: any, index: number) => {\r\n    if (isexpired) {\r\n      const milestoneStartDateDate: any = new Date(data.startDate)\r\n\r\n      const diffTimeMilestoneandProjectStartDate =\r\n        milestoneStartDateDate - projectstartdate\r\n      const diffMilestoneAndProjectStartDateDays = Math.ceil(\r\n        diffTimeMilestoneandProjectStartDate / (1000 * 60 * 60 * 24)\r\n      )\r\n      const positioning =\r\n        (diffMilestoneAndProjectStartDateDays / diffenddatestartdate) *\r\n        fullWidth\r\n      return positioning\r\n    } else {\r\n      const milestoneStartDateDate: any = new Date(data.startDate)\r\n\r\n      const diffTimeMilestoneandProjectStartDate =\r\n        milestoneStartDateDate - projectstartdate\r\n      const diffMilestoneAndProjectStartDateDays = Math.ceil(\r\n        diffTimeMilestoneandProjectStartDate / (1000 * 60 * 60 * 24)\r\n      )\r\n      const positioning =\r\n        (diffMilestoneAndProjectStartDateDays / diffenddatestartdate) *\r\n        fullWidth\r\n      return positioning\r\n    }\r\n  })\r\n\r\n  //not expired\r\n}\r\nexport const dateDifference = (date1: Date, date2: Date) => {\r\n  const datefirst: any = new Date(date1)\r\n  const datesecond: any = new Date(date2)\r\n  let calculatedifference = datefirst - datesecond\r\n  return Math.round(calculatedifference / (1000 * 60 * 60 * 24))\r\n}\r\nexport const dateDifference2 = (date1: Date, date2: Date) => {\r\n  const datefirst: any = new Date(date1)\r\n  const datesecond: any = new Date(date2)\r\n  let calculatedifference = datefirst - datesecond\r\n  return calculatedifference / (1000 * 60 * 60 * 24)\r\n}\r\nexport const PercentageConvertation = (value: number) => {\r\n  let num: number = Number(value) // The Number() only visualizes the type and is not needed\r\n  let roundedString: any = num.toFixed(2)\r\n  let rounded: number = Number(roundedString) // toFixed() returns a string (often suitable for printing already)\r\n  return rounded * 100\r\n}\r\nconst ConvertDateFormat = (date: string | any) => {\r\n  let splitteddate = date?.split(\"-\")\r\n  let convertedformatdate = \"\"\r\n  if (splitteddate) {\r\n    convertedformatdate =\r\n      splitteddate[1] + \"/\" + splitteddate[2] + \"/\" + splitteddate[0]\r\n  }\r\n  return convertedformatdate\r\n}\r\nexport const ConvertDateFormat2 = (date: string | any) => {\r\n  let splitteddate = date?.split(\"-\")\r\n  let convertedformatdate = \"\"\r\n  if (splitteddate) {\r\n    convertedformatdate =\r\n      splitteddate[2] + \"-\" + splitteddate[0] + \"-\" + splitteddate[1]\r\n  }\r\n  return new Date(convertedformatdate)\r\n}\r\n\r\nexport const calculateDatesPositioning = (\r\n  startDate: Date,\r\n  endDate: Date,\r\n  PlannedEndDate: Date,\r\n  timeDifferenceBetweenPlannedDateAndEndDate: number,\r\n  progressOfProject: number,\r\n  progressOfTime: number,\r\n  ismilestones: boolean\r\n) => {\r\n  let startdate: any = startDate\r\n  let enddate: any = endDate\r\n  let plannedenddate: any = PlannedEndDate\r\n  let diffstartdateplannedenddate = dateDifference(plannedenddate, startdate) //Planned and startdate days difference\r\n  let diffstartdateenddate = dateDifference(enddate, startdate) // end date and start date days difference\r\n  let diffplannedandEnddate = timeDifferenceBetweenPlannedDateAndEndDate //planned end date end date difference which come from backend\r\n  let fullWidthGray = 0\r\n  let fullWidth = 0\r\n  let progressprojecttime = 0\r\n  let progressofproject = 0\r\n  let secondlineWidth = 0\r\n  let firstline = 0\r\n  let isexpired: any = false\r\n  if (ismilestones) {\r\n    fullWidthGray = 100\r\n\r\n    fullWidth = 100\r\n    firstline = PercentageConvertation(progressOfTime)\r\n    secondlineWidth = fullWidth - firstline\r\n\r\n    progressofproject = PercentageConvertation(progressOfProject)\r\n    if (progressofproject > 100) {\r\n      progressofproject = 100\r\n    } else {\r\n    }\r\n\r\n    fullWidthGray = 100\r\n    return {\r\n      diffstartdateplannedenddate,\r\n      diffstartdateenddate,\r\n      diffplannedandEnddate,\r\n      fullWidthGray,\r\n      fullWidth,\r\n      progressofproject,\r\n      progressprojecttime,\r\n      secondlineWidth,\r\n      firstline,\r\n      isexpired\r\n    }\r\n  } else {\r\n    // console.log(\"lookoutherelater\", diffplannedandEnddate)\r\n    if (diffplannedandEnddate > 0) {\r\n      isexpired = false\r\n      // if not expired do something\r\n\r\n      fullWidthGray = 100\r\n      fullWidth = diffstartdateenddate / diffstartdateplannedenddate\r\n      fullWidth = PercentageConvertation(fullWidth)\r\n\r\n      firstline = (fullWidth / 100) * PercentageConvertation(progressOfTime)\r\n\r\n      secondlineWidth = fullWidth - firstline\r\n      // if (progressOfProject > 1) {\r\n      //   progressofproject = 100\r\n      // } else {\r\n      progressofproject =\r\n        (fullWidth / 100) * PercentageConvertation(progressOfProject)\r\n      // }\r\n\r\n      diffstartdateplannedenddate = 99\r\n    } else if (diffplannedandEnddate <= 0) {\r\n      //if date expired do something\r\n      isexpired = true\r\n      fullWidth = 100\r\n      firstline = PercentageConvertation(progressOfTime)\r\n      secondlineWidth = fullWidth - firstline\r\n\r\n      progressofproject = PercentageConvertation(progressOfProject)\r\n      if (progressofproject > 100) {\r\n        progressofproject = 100\r\n      } else {\r\n      }\r\n      diffstartdateplannedenddate =\r\n        (diffstartdateplannedenddate / diffstartdateenddate) * 100\r\n      fullWidthGray = diffstartdateplannedenddate\r\n    }\r\n\r\n    return {\r\n      diffstartdateplannedenddate,\r\n      diffstartdateenddate,\r\n      diffplannedandEnddate,\r\n      fullWidthGray,\r\n      fullWidth,\r\n      progressofproject,\r\n      progressprojecttime,\r\n      secondlineWidth,\r\n      firstline,\r\n      isexpired\r\n    }\r\n  }\r\n}\r\n\r\nconst CleanTypeOfData = (projecttype: string | undefined) => {\r\n  let stringprojectname = \"\"\r\n  if (projecttype === \"S\") {\r\n    stringprojectname = \"Step By Step\"\r\n  } else if (projecttype === \"All\") {\r\n    //pass\r\n  } else if (projecttype === \"Cyc\") {\r\n    //pass\r\n  }\r\n  return stringprojectname\r\n}\r\nconst Convertpercentage = (value: number | any | undefined) => {\r\n  let convertednumber = value * 10\r\n  let converted = Math.round(convertednumber)\r\n  return { converted }\r\n}\r\nconst Convertpercentageforbackend = (value: number | any | undefined) => {\r\n  let convertednumber = value / 100\r\n\r\n  return convertednumber\r\n}\r\n\r\nconst LinearProgressBarCleaningData = (value: number) => {\r\n  let fullwithPlannedEndDate = false\r\n  let fullwithEndDate = false\r\n  let timedifferancevalue = value\r\n  let percentageTimeDifference = Math.abs(Math.round(timedifferancevalue * 10))\r\n  let lenpercentageTimeDifference = Math.abs(\r\n    Math.round(percentageTimeDifference.toString().length)\r\n  )\r\n  let gettenpower = Math.pow(10, lenpercentageTimeDifference - 1)\r\n\r\n  if (percentageTimeDifference < 100) {\r\n    //pass\r\n  } else {\r\n    percentageTimeDifference = Math.abs(\r\n      Math.round((percentageTimeDifference / gettenpower) * 10)\r\n    )\r\n  }\r\n\r\n  if (value < 0) {\r\n    fullwithPlannedEndDate = false\r\n    fullwithEndDate = true\r\n  } else if (value > 0) {\r\n    fullwithPlannedEndDate = true\r\n    fullwithEndDate = false\r\n  }\r\n\r\n  return {\r\n    fullwithPlannedEndDate,\r\n    fullwithEndDate,\r\n    percentageTimeDifference\r\n  }\r\n}\r\nconst truncate = (str: string, cutpoint: number, maxlimitlength: number) => {\r\n  return str.length > maxlimitlength\r\n    ? `${str.substring(0, cutpoint) + \"...\"}`\r\n    : str\r\n}\r\nconst backendDateConverter = (date: string) => {\r\n  let stringDate = date\r\n  let dateVar = stringDate.split(\"-\")\r\n  let strtodate = new Date(dateVar[0] + \"/\" + dateVar[1] + \"/\" + dateVar[2])\r\n  let activemonth: any = strtodate?.getMonth()\r\n  let active: string = \"\"\r\n  let dd = String(strtodate?.getDate()).padStart(2, \"0\")\r\n  let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n\r\n  let yyyy = strtodate?.getFullYear()\r\n  active = mm + \"-\" + dd + \"-\" + yyyy\r\n\r\n  return active\r\n}\r\nconst frontendDatePlus = (date: string, duration: number) => {\r\n  let stringDate = date\r\n  let dateVar = stringDate.split(\"-\")\r\n  let newdate = new Date(dateVar[0] + \"/\" + dateVar[1] + \"/\" + dateVar[2])\r\n  newdate.setDate(newdate.getDate() + duration)\r\n  let activemonth: any = newdate?.getMonth()\r\n  let active: string = \"\"\r\n  let dd = String(newdate?.getDate()).padStart(2, \"0\")\r\n  let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n\r\n  let yyyy = newdate?.getFullYear()\r\n  active = mm + \"-\" + dd + \"-\" + yyyy\r\n  return active\r\n}\r\nconst frontendDatePlus2 = (date: string, duration: number) => {\r\n  let getduration = duration\r\n  let stringDate = date\r\n  let dateVar = stringDate.split(\"-\")\r\n  let newdate = new Date(dateVar[1] + \"/\" + dateVar[2] + \"/\" + dateVar[0])\r\n  let letsadd = new Date(newdate.setDate(newdate.getDate() + getduration))\r\n\r\n  let activemonth: any = newdate?.getMonth()\r\n  let active: string = \"\"\r\n  let dd = String(newdate?.getDate()).padStart(2, \"0\")\r\n  let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n\r\n  let yyyy = newdate?.getFullYear()\r\n  active = mm + \"-\" + dd + \"-\" + yyyy\r\n  return active\r\n}\r\nconst useContainerDimensions = myRef => {\r\n  const getDimensions = () => ({\r\n    width: myRef.current.offsetWidth,\r\n    height: myRef.current.offsetHeight\r\n  })\r\n\r\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 })\r\n\r\n  React.useEffect(() => {\r\n    const handleResize = () => {\r\n      setDimensions(getDimensions())\r\n    }\r\n\r\n    if (myRef.current) {\r\n      setDimensions(getDimensions())\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize)\r\n    }\r\n  }, [myRef])\r\n\r\n  return dimensions\r\n}\r\nconst getToday = () => {\r\n  let today: any = new Date()\r\n  let dd = String(today.getDate()).padStart(2, \"0\")\r\n  let mm = String(today.getMonth() + 1).padStart(2, \"0\") //January is 0!\r\n  let yyyy = today.getFullYear()\r\n\r\n  today = mm + \"-\" + dd + \"-\" + yyyy\r\n\r\n  return today\r\n}\r\n\r\nexport {\r\n  CleanTypeOfData,\r\n  Convertpercentage,\r\n  ConvertDateFormat,\r\n  LinearProgressBarCleaningData,\r\n  calculateMilestonesPositioning,\r\n  truncate,\r\n  backendDateConverter,\r\n  frontendDatePlus,\r\n  Convertpercentageforbackend,\r\n  frontendDatePlus2,\r\n  useContainerDimensions,\r\n  getToday\r\n}\r\n","export const FETCH_ALL_PROJECTS_DATA_LOADING = \"FETCH_PROJECTS_DATA_LOADING\"\r\nexport const FETCH_ALL_PROJECTS_DATA_SUCCEED = \"FETCH_PROJECTS_DATA_SUCCEED\"\r\nexport const FETCH_ALL_PROJECTS_DATA_FAILURE = \"FETCH_PROJECTS_DATA_FAILURE\"\r\nexport const FETCH_PROJECT_DATA_SUCCEED = \"FETCH_PROJECTS_DATA_SUCCEED\"\r\nexport const FETCH_PROJECT_DATA_FAILURE = \"FETCH_PROJECTS_DATA_FAILURE\"\r\nexport const UPDATE_PROJECT_DATA_SUCCEED = \"UPDATE_PROJECT_DATA_SUCCEED\"\r\nexport const UPDATE_PROJECT_DATA_FAILURE = \"UPDATE_PROJECT_DATA_FAILURE\"\r\nexport const UPDATE_PROJECT_DATA_MILESTONE_SUCCEED =\r\n  \"UPDATE_PROJECT_DATA_MILESTONE_SUCCEED\"\r\nexport const ADD_MILESTONE_TO_PROJECT = \"ADD_MILESTONE_TO_PROJECT\"\r\nexport const GET_TOTAL_UPDATE = \"GET_TOTAL_UPDATE\"\r\nexport const CREATE_PROJECT = \"CREATE_PROJECT\"\r\n","import { createBrowserHistory } from \"history\"\r\nexport default createBrowserHistory()\r\n","import axios from \"axios\"\r\n\r\nconst axiosConfig = {\r\n  baseURL: \"https://milestonebackendapp.herokuapp.com\"\r\n}\r\nconst myaxios = axios.create(axiosConfig)\r\nexport default myaxios\r\n","import { createStore, applyMiddleware } from \"redux\"\r\nimport ReduxThunk from \"redux-thunk\"\r\nimport {\r\n  FETCH_ALL_PROJECTS_DATA_LOADING,\r\n  FETCH_ALL_PROJECTS_DATA_FAILURE,\r\n  FETCH_ALL_PROJECTS_DATA_SUCCEED,\r\n  UPDATE_PROJECT_DATA_SUCCEED,\r\n  UPDATE_PROJECT_DATA_FAILURE,\r\n  UPDATE_PROJECT_DATA_MILESTONE_SUCCEED,\r\n  CREATE_PROJECT,\r\n  ADD_MILESTONE_TO_PROJECT\r\n} from \"./projectType\"\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\n\r\nexport interface ProjectsInterface {\r\n  description: string | null\r\n  endDate: string | null\r\n  goal: string | null\r\n  goalAchievingProbability: number\r\n  id: number\r\n  isToplevel: boolean\r\n  isnamechanged: boolean\r\n  milestones: []\r\n  plannedEndDate: string | null\r\n  progressOfProject: number\r\n  progressOfTime: number\r\n  startDate: string\r\n  timeDifference: number\r\n  typeofproject: string\r\n  user: string\r\n}\r\n\r\nexport interface RootState {\r\n  loading: boolean\r\n  projects: any[]\r\n  error: string\r\n}\r\nconst initialState: RootState = {\r\n  loading: false,\r\n  projects: [\r\n    {\r\n      description: \"\",\r\n      endDate: \"\",\r\n      goal: \"\",\r\n      goalAchievingProbability: 0,\r\n      id: 0,\r\n      isToplevel: false,\r\n      isnamechanged: false,\r\n      milestones: [],\r\n      plannedEndDate: \"\",\r\n      progressOfProject: 0,\r\n      progressOfTime: 0,\r\n      startDate: \"string\",\r\n      timeDifference: 0,\r\n      typeofproject: \"S\",\r\n      user: \"Fatih\"\r\n    }\r\n  ],\r\n  error: \"\"\r\n}\r\nconst projectGetReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL_PROJECTS_DATA_LOADING:\r\n      return { ...state, loading: true }\r\n    case FETCH_ALL_PROJECTS_DATA_SUCCEED:\r\n      return {\r\n        loading: false,\r\n        projects: action.payload,\r\n        error: \"\"\r\n      }\r\n    case FETCH_ALL_PROJECTS_DATA_FAILURE:\r\n      return {\r\n        loading: false,\r\n        projects: [],\r\n        error: action.payload\r\n      }\r\n\r\n    case UPDATE_PROJECT_DATA_SUCCEED:\r\n      return {\r\n        loading: false,\r\n        projects: action.payload,\r\n        error: \"\"\r\n      }\r\n    case UPDATE_PROJECT_DATA_FAILURE:\r\n      return {\r\n        loading: false,\r\n        projects: [...state.projects],\r\n        error: action.payload\r\n      }\r\n    case CREATE_PROJECT:\r\n      return {\r\n        loading: false,\r\n        projects: [...state.projects, action.payload],\r\n        error: \"\"\r\n      }\r\n    case ADD_MILESTONE_TO_PROJECT:\r\n      console.log(\"I ADDED NEW MILESTONE INTO PROJECT\")\r\n      return {\r\n        loading: false,\r\n        projects: action.payload,\r\n        error: \"\"\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst store = createStore(\r\n  projectGetReducer,\r\n  composeWithDevTools(applyMiddleware(ReduxThunk))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  FETCH_ALL_PROJECTS_DATA_LOADING,\r\n  FETCH_ALL_PROJECTS_DATA_FAILURE,\r\n  FETCH_ALL_PROJECTS_DATA_SUCCEED,\r\n  UPDATE_PROJECT_DATA_SUCCEED,\r\n  UPDATE_PROJECT_DATA_FAILURE,\r\n  UPDATE_PROJECT_DATA_MILESTONE_SUCCEED,\r\n  GET_TOTAL_UPDATE,\r\n  CREATE_PROJECT,\r\n  ADD_MILESTONE_TO_PROJECT\r\n} from \"./projectType\"\r\nimport update from \"immutability-helper\"\r\nimport history from \"../../utulities/history\"\r\n\r\nimport axios from \"../../../functions/axios\"\r\nimport store from \"./projectReducer\"\r\nimport { ArrowBackIosRounded } from \"@material-ui/icons\"\r\nimport {\r\n  backendDateConverter,\r\n  dateDifference,\r\n  getToday\r\n} from \"../../../functions/cleaningData\"\r\n\r\nexport const fetchProjectDataLoading = () => {\r\n  return {\r\n    type: FETCH_ALL_PROJECTS_DATA_LOADING\r\n  }\r\n}\r\nexport const fetchProjectDataSucceed = projects => {\r\n  return { type: FETCH_ALL_PROJECTS_DATA_SUCCEED, payload: projects }\r\n}\r\nexport const fetchProjectDataFailure = error => {\r\n  return {\r\n    type: FETCH_ALL_PROJECTS_DATA_FAILURE,\r\n    payload: error\r\n  }\r\n}\r\nexport const createProjectSucceed = createdproject => {\r\n  return {\r\n    type: CREATE_PROJECT,\r\n    payload: createdproject\r\n  }\r\n}\r\nexport const createProjectMilestoneSucceed = (newmilestone, projectid) => {\r\n  let payloads: any[] = []\r\n  const currentProjectIndex = store\r\n    .getState()\r\n    .projects.findIndex(project => project.id == projectid)\r\n\r\n  payloads = [\r\n    ...store.getState().projects.slice(0, currentProjectIndex), // everything before current post\r\n    {\r\n      ...store.getState().projects[currentProjectIndex],\r\n      milestones: [\r\n        ...store.getState().projects[currentProjectIndex].milestones,\r\n        newmilestone\r\n      ]\r\n    },\r\n    ...store.getState().projects.slice(currentProjectIndex + 1)\r\n  ]\r\n\r\n  return {\r\n    type: ADD_MILESTONE_TO_PROJECT,\r\n    payload: payloads\r\n  }\r\n}\r\n\r\nexport const updateProjectUpdatedSucceed = (\r\n  key,\r\n  projectid,\r\n  ismilestone: boolean,\r\n  milestoneid?\r\n) => {\r\n  // console.log(\"KANKA BEN BUNA BAŞLADIM\", store.getState().projects)\r\n  const index = store\r\n    .getState()\r\n    .projects.findIndex(project => project.id == projectid)\r\n\r\n  const findindexOfMilestone = store\r\n    .getState()\r\n    .projects[index].milestones.findIndex(\r\n      milestone => milestone.id == milestoneid\r\n    )\r\n\r\n  let preparedarr: any = [key]\r\n  let mybuddy: any = []\r\n  // const myproject = update(store.getState().projects, {\r\n  //   0: { milestones: { 0: { goal: { $set: \"naber\" } } } }\r\n  // })\r\n\r\n  if (ismilestone) {\r\n    const myproject = preparedarr.forEach(milestoneupdate => {\r\n      mybuddy = update(store.getState().projects, {\r\n        [index]: {\r\n          milestones: { [findindexOfMilestone]: { $set: milestoneupdate } }\r\n        }\r\n      })\r\n    })\r\n  } else {\r\n    const myproject = preparedarr.forEach(projectupdate => {\r\n      mybuddy = update(store.getState().projects, {\r\n        [index]: { $set: projectupdate }\r\n      })\r\n    })\r\n  }\r\n\r\n  return {\r\n    type: UPDATE_PROJECT_DATA_SUCCEED,\r\n    payload: mybuddy\r\n  }\r\n}\r\nexport const updateProjectUpdatedFailure = error => {\r\n  return {\r\n    type: UPDATE_PROJECT_DATA_FAILURE,\r\n    payload: error\r\n  }\r\n}\r\n\r\nexport const fetchProjects = () => {\r\n  return function (dispatch) {\r\n    dispatch(fetchProjectDataLoading())\r\n    axios\r\n      .get(`project/all/`)\r\n      .then(res => {\r\n        dispatch(fetchProjectDataSucceed(res.data))\r\n      })\r\n      .catch(err => dispatch(fetchProjectDataFailure(err)))\r\n  }\r\n}\r\nexport const UpdateSingleProjectOrMilestoneUpdate = (\r\n  projectid,\r\n  key: any[],\r\n  ismilestone?: boolean\r\n) => {\r\n  return async dispatch => {\r\n    // dispatch(fetchProjectDataLoading())\r\n    // console.log(\"LOOOOK DURATION\", key[0], projectid)\r\n    if (ismilestone) {\r\n      await axios\r\n        .put(`project/detail/milestones/${projectid}`, key[0])\r\n        .then(res => {\r\n          dispatch(\r\n            updateProjectUpdatedSucceed(\r\n              res.data,\r\n              res.data.main_project,\r\n              true,\r\n              projectid\r\n            )\r\n          )\r\n        })\r\n        .catch(err => {\r\n          dispatch(updateProjectUpdatedFailure(err.message))\r\n        })\r\n    } else {\r\n      await axios\r\n        .put(`project/detail/${projectid}`, key[0])\r\n        .then(res => {\r\n          dispatch(updateProjectUpdatedSucceed(res.data, projectid, false))\r\n        })\r\n        .catch(err => {\r\n          dispatch(updateProjectUpdatedFailure(err.message))\r\n        })\r\n    }\r\n\r\n    //   axios\r\n    //     .get(`project/detail/${projectid}`)\r\n    //     .then(res => {\r\n    //       dispatch(updateProjectUpdatedSucceed(res.data))\r\n    //     })\r\n    //     .catch(err => dispatch(updateProjectUpdatedFailure(err.message)))\r\n    // }\r\n  }\r\n}\r\n\r\nexport const createProjectMiddleWare = (\r\n  user,\r\n  typeofproject,\r\n  goalname,\r\n  startDate,\r\n  plannedEndDate\r\n) => {\r\n  return function (dispatch) {\r\n    dispatch(fetchProjectDataLoading())\r\n    axios\r\n      .post(\"project/all/\", {\r\n        user,\r\n        typeofproject,\r\n        goal: goalname,\r\n        startDate: startDate,\r\n        plannedEndDate: plannedEndDate\r\n      })\r\n      .then(res => {\r\n        dispatch(createProjectSucceed(res.data))\r\n        history.push(`/project/detail/${res.data.id}`)\r\n      })\r\n      .catch(err => dispatch(updateProjectUpdatedFailure(err.message)))\r\n  }\r\n}\r\nexport const createProjectMilestoneMiddleWare = (\r\n  main_project_id,\r\n  plannedEndDate\r\n) => {\r\n  return async dispatch => {\r\n    dispatch(fetchProjectDataLoading())\r\n    await axios\r\n      .post(\"project/milestones/create\", {\r\n        main_project: main_project_id\r\n      })\r\n      .then(res => {\r\n        let newEndDate = res.data.dueDate\r\n        // console.log(\"newEndDate\", newEndDate)\r\n        dispatch(createProjectMilestoneSucceed(res.data, res.data.main_project))\r\n        dispatch(\r\n          UpdateSingleProjectOrMilestoneUpdate(\r\n            main_project_id,\r\n            [\r\n              {\r\n                timeDifference: Math.round(\r\n                  dateDifference(\r\n                    new Date(String(plannedEndDate)),\r\n                    new Date(String(newEndDate))\r\n                  )\r\n                ),\r\n                endDate: backendDateConverter(newEndDate)\r\n              }\r\n            ],\r\n\r\n            false\r\n          )\r\n        )\r\n      })\r\n      .catch(err => dispatch(updateProjectUpdatedFailure(err.message)))\r\n  }\r\n}\r\n\r\n// export const getTotalUpdateForMilestone = projectid => {\r\n//   return function (dispatch) {\r\n//     let totalRelativeProgress = 0\r\n//     let totalDuration = 0\r\n//     let milestones = store\r\n//       .getState()\r\n//       .projects.find(project => project.id == projectid)\r\n//     console.log(\"MİLESTONESSS\", milestones)\r\n//     let currentMilestoneuser = milestones.user\r\n//     let curretMilestonetype = milestones.typeofproject\r\n//     let arr: any = milestones.milestones\r\n//     milestones.milestones.map((currentMilestoneData: any) => {\r\n//       totalDuration += currentMilestoneData.duration\r\n//     })\r\n//     console.log(\"MİLESTONESSS2\", milestones, arr, totalDuration)\r\n//     // await milestones.milestones.map((currentMilestoneData: any) => {\r\n//     //   totalRelativeProgress += currentMilestoneData.relativeProgress\r\n//     // })\r\n\r\n//     milestones.milestones.forEach((result, index) => {\r\n//       arr[index] = {\r\n//         id: result.id,\r\n//         relativeProgress: result.progress * (result.duration / totalDuration)\r\n//       }\r\n//     })\r\n//     console.log(\"MİLESTONESSS3\", milestones, arr)\r\n//     arr.forEach((result, index) => {\r\n//       dispatch(\r\n//         UpdateSingleProjectOrMilestoneUpdate(\r\n//           result.id,\r\n//           \"relativeProgress\",\r\n//           result.relativeProgress,\r\n//           true\r\n//         )\r\n//       )\r\n//     })\r\n\r\n//     arr.forEach((result, index) => {\r\n//       totalRelativeProgress += result.relativeProgress\r\n//     })\r\n//     dispatch(\r\n//       UpdateSingleProjectOrMilestoneUpdate(\r\n//         projectid,\r\n//         \"progressOfProject\",\r\n//         totalRelativeProgress\r\n//       )\r\n//     )\r\n//   }\r\n// }\r\n","import Checkbox from \"../ui/Checkbox\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport axios from \"../../functions/axios\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { getToday } from \"../../functions/cleaningData\"\r\nimport { createProjectMiddleWare } from \"../redux/project/projectActions\"\r\nimport { frontendDatePlus } from \"../../functions/cleaningData\"\r\nexport interface CreateProjectRadioInputFormsProps {\r\n  ActualClickHandle: any\r\n}\r\nconst Form = styled.form`\r\n  display: flex;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin-top: 52px;\r\n`\r\nconst CreateProjectRadioInputSubmitButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  background: rgba(99, 99, 128, 0.1);\r\n  align-self: flex-end;\r\n  width: 163px;\r\n  height: 43px;\r\n  border-radius: 5px;\r\n  fontweight: 400;\r\n  border: 3px solid #484862;\r\n`\r\n\r\nconst CreateProjectRadioInputForms: React.FC<CreateProjectRadioInputFormsProps> = props => {\r\n  const [value, setValue] = React.useState(\"S\")\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const handleChange = (event: any) => {\r\n    setValue(event.target.value)\r\n  }\r\n  const handleFormSubmit = (e: any) => {\r\n    e.preventDefault()\r\n    const name = \"Fatih\"\r\n    const goalname = \"\"\r\n    const newvalue = value\r\n    const today = getToday()\r\n    const plannedEndDate = frontendDatePlus(String(today), 7)\r\n\r\n    dispatch(\r\n      createProjectMiddleWare(name, newvalue, goalname, today, plannedEndDate)\r\n    )\r\n\r\n    // history.push(`/project/detail/${res.data.id}`)\r\n    // axios\r\n    //   .post(\"project/all/\", {\r\n    //     user: name,\r\n    //     typeofproject: newvalue,\r\n    //     goal: goalname,\r\n    //     startDate: today,\r\n    //     plannedEndDate: null\r\n    //   })\r\n    //   .then(res => {\r\n    //     history.push(`/project/detail/${res.data.id}`)\r\n    //   })\r\n    //   .catch(err => prompt(err))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form method=\"post\" onSubmit={handleFormSubmit}>\r\n        <Checkbox value={value} setvalue={handleChange} />\r\n        <CreateProjectRadioInputSubmitButton>\r\n          <Button\r\n            type=\"submit\"\r\n            style={{\r\n              color: \"white\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              fontWeight: \"inherit\",\r\n              fontFamily: \"Aileron\"\r\n            }}\r\n            onClick={props.ActualClickHandle}\r\n          >\r\n            Create Project\r\n          </Button>\r\n        </CreateProjectRadioInputSubmitButton>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\nexport default CreateProjectRadioInputForms\r\n","import React, { SVGProps } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport SVG from \"react-inlinesvg\"\r\n\r\n//ICONS\r\nexport const UserLogoImage = styled.img``\r\n\r\nexport const SearchButtonIcon = styled.img`\r\n  width: 42px;\r\n  cursor: pointer;\r\n  height: 32px;\r\n`\r\nexport const LeaftAsideContent2Image = styled.img``\r\n\r\nexport const MilestonesTabIcon = styled.img`\r\n  width: 33px;\r\n  height: 33px;\r\n  cursor: pointer;\r\n  color: green;\r\n  ::&svg {\r\n    fill: green;\r\n  }\r\n`\r\n\r\nexport const TopHeaderLeftBıgProgressIcon = styled.img<{\r\n  small?: boolean\r\n  medium?: boolean\r\n}>`\r\n  ${p =>\r\n    p.small\r\n      ? p.medium\r\n        ? \"height:70px;width:70px;\"\r\n        : \"height:48px;width:48px;\"\r\n      : \"height:auto;width:auto;\"}\r\n`\r\n\r\nexport const MilestoneCloseEditTabIcon = styled.img`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 40px;\r\n  max-width: 26px;\r\n  left: 0;\r\n  top: 60px;\r\n  cursor: pointer;\r\n`\r\n\r\nexport const MilestoneAddButtonIcon = styled.img`\r\n  height: 31px;\r\n  cursor: pointer;\r\n  width: 31px;\r\n`\r\n\r\nexport const MilestoneTabIcon = styled(SVG)<SVGProps<any>>`\r\n  width: 33px;\r\n  height: 33px;\r\n  cursor: pointer;\r\n  & path {\r\n    fill: ${({ color }) => color};\r\n  }\r\n`\r\nexport const ClockIconImage = styled.img`\r\n  height: 42px;\r\n  width: 42px;\r\n`\r\n\r\nexport const MilestoneSearchTabIcon = styled(SVG)<SVGProps<any>>`\r\n  width: 42px;\r\n  height: 32px;\r\n  cursor: pointer;\r\n  & path {\r\n    fill: ${({ color }) => color};\r\n  }\r\n`\r\nexport const MilestoneTreeViewIcon = styled(SVG)<SVGProps<any>>`\r\n  cursor: pointer;\r\n  max-width: 121px;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 65%;\r\n  max-height: 186px;\r\n  & path {\r\n    fill: ${({ color }) => color};\r\n  }\r\n`\r\nexport const ProgressBarImage = styled.img`\r\n  width: 70px;\r\n  height: 70px;\r\n`\r\nexport const FrameIconElement = styled.img`\r\n  width: 45px;\r\n  height: 45px;\r\n`\r\nexport const SettingsIconElement = styled.img`\r\n  width: 45px;\r\n  height: 45px;\r\n`\r\nexport const SaveIcon = styled.img`\r\n  cursor: pointer;\r\n`\r\nexport const DiscardIcon = styled.img`\r\n  cursor: pointer;\r\n`\r\n\r\n// Body\r\nexport const BodyContainer = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  height: 90vh;\r\n  width: 100%;\r\n  flex: 1;\r\n  flex-wrap: wrap;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px grey;\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(240, 240, 255, 1);\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 7px;\r\n    max-height: 11px;\r\n    border-radius: 5px;\r\n  }\r\n`\r\n//Navbar\r\n\r\nexport const NavbarRoot = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  width: 100%;\r\n  background: rgb(50, 50, 77, 1);\r\n  box-sizing: border-box;\r\n  min-width: 100%;\r\n  min-height: 60px;\r\n  border-bottom: 5px solid #636380;\r\n  padding: 20px 25px 20px 25px;\r\n`\r\n\r\nexport const NavbarContainer = styled.div`\r\n  display: flex;\r\n  flex: 4;\r\n`\r\nexport const NavbarLinksContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n\r\n  flex: 4;\r\n  align-items: center;\r\n  text-align: center;\r\n  flex-direction: row;\r\n`\r\nexport const NavbarLinksContainerItems = styled.div`\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  flex-direction: row;\r\n`\r\nexport const NavbarUserContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  position: relative;\r\n`\r\n\r\nexport const NavbarItem = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n`\r\nexport const CreateNewProjectButtonContainer = styled.div`\r\n  display: flex;\r\n  max-width: 163px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  max-height: 43px;\r\n  height: 100%;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  border-radius: 5px;\r\n  border: 3px solid #484862;\r\n  text-align: center;\r\n  justify-content: center;\r\n  color: white;\r\n  padding: 6px 2px 5px 2px;\r\n`\r\nexport const DropDownCreateMenuContainer = styled.div<{ opened: boolean }>`\r\n  min-width: 364px;\r\n  display: flex;\r\n  opacity: ${p => (p.opened ? \"1\" : \"0\")};\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\r\n    z-index 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  position: absolute;\r\n  min-height: 389px;\r\n  top: 47px;\r\n  z-index: ${p => (p.opened ? \"9999\" : \"-5555\")};\r\n  right: 145px;\r\n  background-color: rgba(50, 50, 77, 0.95);\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 3px solid rgba(240, 240, 255, 0.1);\r\n  border-radius: 5px;\r\n  padding-left: 25px;\r\n  padding-top: 34px;\r\n  padding-bottom: 20px;\r\n  padding-right: 21px;\r\n  box-sizing: border-box;\r\n  flex-direction: column;\r\n`\r\nexport const DropDownHeaderContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  height: 20%;\r\n`\r\nexport const DropDownMenuHeaderText = styled.div`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  display: flex;\r\n  line-height: 14.4px;\r\n  color: rgba(228, 220, 0, 1);\r\n  min-width: 99px;\r\n  max-height: 14px;\r\n  min-height: 14px;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\nexport const DropDownHintText = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  height: 100%;\r\n  min-width: 318px;\r\n  font-size: 18px;\r\n  min-height: 22px;\r\n  max-width: 318px;\r\n  max-height: 22px;\r\n  font-weight: 400;\r\n  color: rgba(240, 240, 255, 1);\r\n  line-height: 21.6px;\r\n`\r\nexport const DropDownMenuBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`\r\n// Project Details\r\nexport const ProjectDetailsContainer = styled.div<{ ismilestoneedit: boolean }>`\r\n  display: inline-grid;\r\n  width: 100%;\r\n  grid-template-columns: ${p =>\r\n    p.ismilestoneedit ? \"0.3fr 0.2fr 2.5fr 2.5fr\" : \"0.3fr 0.2fr 2.5fr 1fr\"};\r\n  grid-template-rows: 0.8fr 1.2fr 1fr;\r\n  gap: 4px 5px;\r\n  grid-template-areas: ${p =>\r\n    p.ismilestoneedit\r\n      ? `${'\"LeftAside TopHeader TopHeader TopHeader\"\\n\"LeftAside controlpanel Detail-Content  Detail-Content-2\"\\n\"LeftAside controlpanel Detail-Content Detail-Content-2\"'}`\r\n      : `${'\"LeftAside TopHeader TopHeader TopHeader\"\\n\"LeftAside controlpanel Detail-Content Detail-Content\"\\n\"LeftAside controlpanel Detail-Content Detail-Content\"'}`};\r\n`\r\nexport const Detail2 = styled.div`\r\n  grid-area: Detail-Content-2;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  padding: 45px 95px 55px 35px;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const Detail2ContentContainer = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n  flex-direction: column;\r\n`\r\nexport const LeftAside = styled.div`\r\n  grid-area: LeftAside;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  object-fit: cover;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const LeftAsideContentBox = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 40%;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`\r\nexport const LeftAsideUserContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 35%;\r\n`\r\nexport const LeftAsideContent2 = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-direction: row;\r\n`\r\nexport const LeftAsideContent2TextBox = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  color: rgba(228, 220, 0, 1);\r\n  text-align: left;\r\n`\r\n\r\nexport const UserNameContainer = styled.div`\r\n  display: flex;\r\n  max-width: 116px;\r\n  align-self: center;\r\n  color: rgba(240, 240, 255, 1);\r\n  width: 100%;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: center;\r\n  justify-content: center;\r\n  margin-top: 12px;\r\n`\r\nexport const TopHeader = styled.div`\r\n  grid-area: TopHeader;\r\n  border-radius: 5px;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 27px 90px 44px 51px;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const TopHeaderLeft = styled.div`\r\n  display: flex;\r\n`\r\nexport const TopHeaderRight = styled.div`\r\n  width: 80%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  max-height: 188px;\r\n`\r\nexport const TopHeaderTitleBox = styled.div`\r\n  display: flex;\r\n  height: 20%;\r\n  flex-direction: column;\r\n  max-width: 449px;\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 29px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\nexport const ProjectGoalText = styled.div`\r\n  color: rgba(240, 240, 255, 0.7);\r\n`\r\nexport const ProjectNameInputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: rgba(240, 240, 255, 0.7);\r\n  justify-content: space-between;\r\n`\r\nexport const EditPencilIcon = styled.img`\r\n  height: 50%;\r\n  z-index: 9999;\r\n  cursor: pointer;\r\n`\r\nexport const TopHeaderStatusBarContainer = styled.div<{ small?: boolean }>`\r\n  display: flex;\r\n  height: 35%;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\nexport const TopHeaderStatusBar = styled.img<{ small?: boolean }>`\r\n  ${p =>\r\n    p.small ? \"height:2.76px;width:106.94px;\" : \"height:auto;width:auto;\"}\r\n`\r\nexport const ControlPanel = styled.div`\r\n  grid-area: controlpanel;\r\n  border-radius: 5px;\r\n  padding: 48px 18px;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const ControlPanelItemsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 96px;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const DetailContent = styled.div`\r\n  grid-area: Detail-Content;\r\n  border-radius: 5px;\r\n  padding: 45px 95px 55px 35px;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const DetailContentContainer = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n  flex-direction: column;\r\n`\r\nexport const DescriptionBoxContainer = styled.div`\r\n  display: flex;\r\n  height: 65% !important;\r\n  border: 3px solid rgba(240, 240, 255, 0.1);\r\n  height: auto;\r\n  border-radius: 5px;\r\n`\r\nexport const SaveDiscardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n`\r\nexport const DetailMilestonesRoot = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-height: 728px;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\nexport const DetailMilestoneContainer = styled.div<{ width: number }>`\r\n  display: flex;\r\n  width: ${p => p.width}%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const MilestonesHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  font-family: Aileron;\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 29px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\nexport const MilestoneHeaderText = styled.div`\r\n  display: flex;\r\n  color: rgba(228, 220, 0, 1);\r\n`\r\nexport const MilestoneHeaderHintText = styled.div`\r\n  display: flex;\r\n  color: rgba(240, 240, 255, 0.7);\r\n`\r\nexport const MilestoneAddButtonContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 20px 0;\r\n  justify-content: flex-end;\r\n`\r\nexport const MilestonesBodyRoot = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 80%;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px grey;\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(240, 240, 255, 1);\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 7px;\r\n    max-height: 11px;\r\n    border-radius: 5px;\r\n  }\r\n`\r\nexport const MilestonesWrapper = styled.div<{ mouseOver?: boolean }>`\r\n  display: flex;\r\n  padding: 12px 0px 12px 0px;\r\n  height: 10%;\r\n  max-height: 10%;\r\n  border-radius: 5px;\r\n  border: ${p =>\r\n    p.mouseOver\r\n      ? \"3px solid rgba(228, 220, 0, 1)\"\r\n      : \"3px solid rgba(240, 240, 255, 0.1)\"};\r\n\r\n  max-width: 100%;\r\n  flex-basis: 100%;\r\n  justify-content: space-between;\r\n  background-color: #373752;\r\n  flex-direction: row;\r\n  flex-grow: 0;\r\n  margin-bottom: 11px;\r\n`\r\nexport const MilestoneLeftSide = styled.div`\r\n  display: flex;\r\n  flex-grow: 0;\r\n\r\n  flex-basis: 30%;\r\n  max-width: 30%;\r\n  min-width: 397.5px;\r\n\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n`\r\nexport const ClockIconContainer = styled.div`\r\n  display: flex;\r\n`\r\n\r\nexport const MilestoneGoalStaticsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nexport const MilestoneGoalStatic = styled.div`\r\n  display: flex;\r\n  font-family: Aileron;\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: rgba(228, 220, 0, 1);\r\n`\r\nexport const MilestoneGoalContent = styled.div`\r\n  display: flex;\r\n  font-family: Aileron;\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 29px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: rgba(240, 240, 255, 0.7);\r\n`\r\nexport const MilestonesDateContentRoot = styled.div<{\r\n  isEditTapOpened: boolean\r\n}>`\r\n  display: flex;\r\n  flex-grow: 0;\r\n  flex-basis: 30%;\r\n  max-width: 30%;\r\n  max-height: 50px;\r\n  justify-content: space-evenly;\r\n  flex-direction: row;\r\n  border-right: ${p =>\r\n    p.isEditTapOpened ? \"\" : \"4px solid rgba(240, 240, 255, 0.5);\"}\r\n  border-radius: 1px;\r\n`\r\nexport const MilestoneDateContentContanier = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-height: 44px;\r\n  flex-direction: column;\r\n`\r\nexport const MilestoneDateContentLabel = styled.div`\r\n  display: flex;\r\n  font-family: Aileron;\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: rgba(228, 220, 0, 1);\r\n`\r\nexport const MilestoneDateDataContent = styled.div`\r\n  display: flex;\r\n  color: rgba(240, 240, 255, 1);\r\n  font-family: Aileron;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\nexport const MilestoneStatusBarsContentContainer = styled.div`\r\n  display: flex;\r\n\r\n  flex-grow: 0;\r\n  flex-basis: 35%;\r\n  max-width: 35%;\r\n  max-height: 50px;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  flex-direction: row;\r\n`\r\nexport const MilestoneStatusBarContentItems = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-basis: 10%;\r\n  max-width: 10%;\r\n`\r\nexport const MilestoneEndThreeDotContainer = styled.div`\r\n  display: flex;\r\n  flex-grow: 0;\r\n  flex-basis: 3%;\r\n  border-left: 4px solid rgba(240, 240, 255, 0.5);\r\n  border-radius: 1px;\r\n  max-width: 3%;\r\n  justify-content: center;\r\n`\r\nexport const MilestoneEndThreeDotImage = styled.img`\r\n  height:30px\r\n  width:8px;\r\n`\r\n\r\n//\r\n\r\n// Overview\r\nexport const ProjectOverviewWrapper = styled.div<{ mouseOver?: boolean }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex: 1;\r\n  height: 100%;\r\n  max-height: 492px;\r\n  min-width: 947px;\r\n  margin-bottom: 5px;\r\n  cursor: pointer;\r\n  margin-right: 5px;\r\n  overflow-y: hidden;\r\n  max-width: 947px;\r\n  border: ${p => (p.mouseOver ? \"3px solid rgba(228, 220, 0, 1)\" : \"0px\")};\r\n\r\n  border-radius: 5px;\r\n\r\n  background: rgba(50, 50, 77, 1);\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(240, 240, 255, 1);\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 7px;\r\n    max-height: 11px;\r\n    border-radius: 5px;\r\n  }\r\n`\r\nexport const ProjectOverviewContentBox = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 27px 41px 69px 48px;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\nexport const ProjectOverviewHeaderBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  max-width: 440px;\r\n  justify-content: space-between;\r\n  flex: 1;\r\n`\r\nexport const ProjectContentBox = styled.div`\r\n  display: flex;\r\n  flex: 4;\r\n  flex-direction: row;\r\n`\r\nexport const ProgressBarContainer = styled.div`\r\n  display: flex;\r\n`\r\nexport const MainProjectContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: rgba(99, 99, 128, 0.1);\r\n  border: 3px solid rgba(240, 240, 255, 0.1);\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  min-width: 200px;\r\n  max-height: 52px;\r\n  max-width: 858px;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`\r\n\r\nexport const SubSubProjectBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n`\r\nexport const SubProjectGroup = styled.div`\r\n  display: flex;\r\n  width: 60px;\r\n  justify-content: space-between;\r\n  min-width: 30px;\r\n`\r\nexport const SubSubProjectItem = styled.img`\r\n  width: 28px;\r\n  height: 28px;\r\n`\r\nexport const HeaderTextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\nexport const GoalText = styled.div`\r\n  display: flex;\r\n  color: rgba(228, 220, 0, 1);\r\n\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\nexport const ProjectNameContainer = styled.div`\r\n  display: flex;\r\n  color: rgba(240, 240, 255, 1);\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\n","import React from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport FrameIcon from \"../static/svgicon/FrameIcon.svg\"\r\nimport SettingsIcon from \"../static/svgicon/SettingIcon.svg\"\r\nimport CreateProjectRadioInputForms from \"./forms/createProjectForm\"\r\nimport {\r\n  NavbarContainer,\r\n  NavbarItem,\r\n  NavbarLinksContainer,\r\n  NavbarLinksContainerItems,\r\n  NavbarRoot,\r\n  NavbarUserContainer,\r\n  CreateNewProjectButtonContainer,\r\n  DropDownCreateMenuContainer,\r\n  DropDownMenuHeaderText,\r\n  DropDownHeaderContainer,\r\n  DropDownHintText,\r\n  DropDownMenuBody,\r\n  FrameIconElement,\r\n  SettingsIconElement\r\n} from \"./ui/ConstantUi\"\r\n\r\nexport interface NavbarProps {\r\n  context?: string\r\n}\r\nconst Navbar: React.FC<NavbarProps> = props => {\r\n  const history = useHistory()\r\n  const DropDawnMenuContainerRef = React.useRef<any>(null)\r\n  const CreateNewProjectButtonRef = React.useRef<any>(null)\r\n  const ActualCreateProjectClickHandle = () => {\r\n    setCreateMenu(false)\r\n  }\r\n  const handleClickOutside = (e: any) => {\r\n    if (\r\n      !DropDawnMenuContainerRef.current?.contains(e.target) &&\r\n      !CreateNewProjectButtonRef.current?.contains(e.target)\r\n    ) {\r\n      setCreateMenu(false)\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside)\r\n    return () => document.removeEventListener(\"click\", handleClickOutside)\r\n  })\r\n  const [showCreateMenu, setCreateMenu] = React.useState(false)\r\n  return (\r\n    <NavbarRoot>\r\n      <NavbarContainer>\r\n        <NavbarLinksContainer>\r\n          <NavbarLinksContainerItems>\r\n            <NavbarItem>\r\n              <FrameIconElement src={FrameIcon}></FrameIconElement>\r\n            </NavbarItem>\r\n          </NavbarLinksContainerItems>\r\n        </NavbarLinksContainer>\r\n        <NavbarUserContainer>\r\n          <NavbarUserContainer>\r\n            {props.context ? (\r\n              <CreateNewProjectButtonContainer\r\n                ref={CreateNewProjectButtonRef}\r\n                onClick={() => {\r\n                  history.push(\"/project/all\")\r\n                }}\r\n              >\r\n                Projects\r\n              </CreateNewProjectButtonContainer>\r\n            ) : (\r\n              <CreateNewProjectButtonContainer\r\n                ref={CreateNewProjectButtonRef}\r\n                onClick={() => {\r\n                  setCreateMenu(!showCreateMenu)\r\n                }}\r\n              >\r\n                Create Project\r\n              </CreateNewProjectButtonContainer>\r\n            )}\r\n\r\n            <DropDownCreateMenuContainer\r\n              ref={DropDawnMenuContainerRef}\r\n              opened={showCreateMenu}\r\n            >\r\n              <DropDownHeaderContainer>\r\n                <DropDownMenuHeaderText>\r\n                  Create New Project\r\n                </DropDownMenuHeaderText>\r\n                <DropDownHintText>\r\n                  Select one of three possible project types\r\n                </DropDownHintText>\r\n              </DropDownHeaderContainer>\r\n              <DropDownMenuBody>\r\n                <CreateProjectRadioInputForms\r\n                  ActualClickHandle={ActualCreateProjectClickHandle}\r\n                ></CreateProjectRadioInputForms>\r\n              </DropDownMenuBody>\r\n            </DropDownCreateMenuContainer>\r\n            <SettingsIconElement src={SettingsIcon}></SettingsIconElement>\r\n          </NavbarUserContainer>\r\n        </NavbarUserContainer>\r\n      </NavbarContainer>\r\n    </NavbarRoot>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from \"react\"\r\nimport { BodyContainer, MilestoneTreeViewIcon } from \"./ui/ConstantUi\"\r\nexport interface BodyComponentProps {}\r\n\r\nconst BodyComponent: React.FC<BodyComponentProps> = props => {\r\n  return (\r\n    <BodyContainer id=\"body\">\r\n      <>{props.children}</>\r\n    </BodyContainer>\r\n  )\r\n}\r\n\r\nexport default BodyComponent\r\n","export default __webpack_public_path__ + \"static/media/subprojectelement.1d9b2985.svg\";","export default __webpack_public_path__ + \"static/media/bigprogressicon.686d5662.svg\";","import { Box, CircularProgress } from \"@material-ui/core\"\r\nimport React, { Component } from \"react\"\r\nimport { TopHeaderLeftBıgProgressIcon } from \"./ConstantUi\"\r\nimport BıgProgressIcon from \"../../static/svgicon/bigprogressicon.svg\"\r\nimport {\r\n  Convertpercentage,\r\n  PercentageConvertation\r\n} from \"../../functions/cleaningData\"\r\nimport { REFUSED } from \"dns\"\r\n\r\nexport interface CircleProgressContentProps {\r\n  smallSize?: boolean\r\n  progressvalue?: number | any\r\n  mediumSize?: boolean\r\n  treeView?: boolean\r\n  mainone?: boolean\r\n  edittab?: boolean\r\n}\r\n\r\nconst CircleProgressContent: React.FC<CircleProgressContentProps> = props => {\r\n  // React.useEffect(() => {\r\n  //   console.log(\r\n  //     \"checkhtah\",\r\n  //     props.progressvalue,\r\n  //     PercentageConvertation(props.progressvalue)\r\n  //   )\r\n  // }, [])\r\n  let checkitout: any = props.mainone || props.treeView\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\" visibility={\"visible\"}>\r\n      <CircularProgress\r\n        style={{\r\n          height: props.smallSize\r\n            ? props.mediumSize\r\n              ? \"70px\"\r\n              : \"48px\"\r\n            : \"188px\",\r\n          width: props.smallSize\r\n            ? props.mediumSize\r\n              ? \"70px\"\r\n              : \"48px\"\r\n            : \"188px\",\r\n          color: \"yellow\",\r\n          zIndex: 999\r\n        }}\r\n        thickness={5}\r\n        variant=\"determinate\"\r\n        value={\r\n          props.progressvalue >= 1\r\n            ? 100\r\n            : PercentageConvertation(props.progressvalue)\r\n        }\r\n      />\r\n      <Box\r\n        style={{\r\n          height: props.smallSize\r\n            ? props.mediumSize\r\n              ? \"70px\"\r\n              : \"48px\"\r\n            : \"188px\",\r\n          width: props.smallSize\r\n            ? props.mediumSize\r\n              ? \"70px\"\r\n              : \"48px\"\r\n            : \"188px\"\r\n        }}\r\n        top={0}\r\n        left={props.smallSize ? -1.5 : 0}\r\n        bottom={props.smallSize ? -3 : 0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <TopHeaderLeftBıgProgressIcon\r\n          small={props.smallSize}\r\n          medium={props.mediumSize}\r\n          src={BıgProgressIcon}\r\n        ></TopHeaderLeftBıgProgressIcon>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            textAlign: \"center\",\r\n            height: \"80%\",\r\n            width: \"80%\",\r\n            minHeight: \"80%\",\r\n            minWidth: \"80%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor:\r\n              props.smallSize || props.mediumSize ? \"#373752\" : \"#32324D\",\r\n            borderRadius: props.smallSize || props.mediumSize ? \"80%\" : \"50%\",\r\n            display: \"inline-flex\",\r\n            color: \"rgba(240, 240, 255, 1)\"\r\n          }}\r\n        >\r\n          {checkitout && (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                fontFamily: \"aileron\",\r\n                fontSize: props.treeView ? \"25px\" : \"50px\",\r\n                fontStyle: \"normal\",\r\n                fontWeight: 400,\r\n                lineHeight: \"86px\",\r\n                letterSpacing: \"0em\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              {props.progressvalue > 1\r\n                ? \">100\"\r\n                : PercentageConvertation(props.progressvalue) == 0\r\n                ? \" \"\r\n                : Math.ceil(PercentageConvertation(props.progressvalue))}\r\n              <div\r\n                style={{\r\n                  display: \"inline-flex\",\r\n                  fontFamily: \"aileron\",\r\n                  fontSize: props.treeView ? \"10px\" : \"36px\",\r\n                  fontStyle: \"normal\",\r\n                  fontWeight: 400,\r\n                  lineHeight: \"43px\",\r\n                  letterSpacing: \"0em\",\r\n                  textAlign: \"left\",\r\n                  alignItems: \"center\"\r\n                }}\r\n              >\r\n                {PercentageConvertation(props.progressvalue) == 0 ? \" \" : \"%\"}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CircleProgressContent\r\n","import React from \"react\"\r\nimport axios from \"../../functions/axios\"\r\nimport styled from \"styled-components\"\r\nimport ProgressBar from \"../../static/svgicon/progressbar.svg\"\r\nimport SubProjectBoxIcon from \"../../static/svgicon/subprojectelement.svg\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { JsxElement } from \"typescript\"\r\nimport {\r\n  GoalText,\r\n  HeaderTextContainer,\r\n  MainProjectContainer,\r\n  ProgressBarContainer,\r\n  ProgressBarImage,\r\n  ProjectContentBox,\r\n  ProjectNameContainer,\r\n  ProjectOverviewContentBox,\r\n  ProjectOverviewHeaderBox,\r\n  ProjectOverviewWrapper,\r\n  SubProjectGroup,\r\n  SubSubProjectBox,\r\n  SubSubProjectItem\r\n} from \"../ui/ConstantUi\"\r\nimport CircleProgressContent from \"../ui/CircleProgressContent\"\r\nimport { getTotals } from \"../../functions/process\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { fetchProjects } from \"../redux/project/projectActions\"\r\nimport { RootState } from \"../redux/project/projectReducer\"\r\nconst SubSubProjectGroupBox = styled.div``\r\ninterface OverviewProjectProps {\r\n  children: JsxElement[]\r\n}\r\ninterface LoadedDataProps {\r\n  data: any\r\n  key: number\r\n}\r\n\r\nconst OverviewProject: React.FC<OverviewProjectProps> = props => {\r\n  const loading = useSelector((state: RootState) => state.loading)\r\n  const projects = useSelector((state: RootState) => state.projects)\r\n\r\n  const history = useHistory()\r\n  const LoadedData = (props: LoadedDataProps) => {\r\n    const [onMouse, setOnMouse] = React.useState<boolean>(false)\r\n    return (\r\n      <ProjectOverviewWrapper\r\n        onMouseEnter={() => setOnMouse(true)}\r\n        onMouseLeave={() => {\r\n          setOnMouse(false)\r\n        }}\r\n        id={props.data.id}\r\n        mouseOver={onMouse}\r\n        key={props.key}\r\n        onClick={() => {\r\n          history.push(`/project/detail/${props.data.id}`)\r\n        }}\r\n      >\r\n        <ProjectOverviewContentBox>\r\n          <ProjectOverviewHeaderBox>\r\n            <ProgressBarContainer>\r\n              <CircleProgressContent\r\n                smallSize\r\n                mediumSize\r\n                progressvalue={props.data.goalAchievingProbability}\r\n              ></CircleProgressContent>\r\n            </ProgressBarContainer>\r\n            <HeaderTextContainer>\r\n              <GoalText>Goal</GoalText>\r\n              <ProjectNameContainer>\r\n                {props.data.isnamechanged === true\r\n                  ? props.data.goal\r\n                  : \"Project #\" + props.data.id}\r\n              </ProjectNameContainer>\r\n            </HeaderTextContainer>\r\n          </ProjectOverviewHeaderBox>\r\n          <ProjectContentBox>\r\n            <MainProjectContainer>\r\n              <SubSubProjectBox>\r\n                <SubProjectGroup>\r\n                  <SubSubProjectItem\r\n                    src={SubProjectBoxIcon}\r\n                  ></SubSubProjectItem>\r\n                  <SubSubProjectItem\r\n                    src={SubProjectBoxIcon}\r\n                  ></SubSubProjectItem>\r\n                </SubProjectGroup>\r\n                <SubProjectGroup>\r\n                  <SubSubProjectItem\r\n                    src={SubProjectBoxIcon}\r\n                  ></SubSubProjectItem>\r\n                  <SubSubProjectItem\r\n                    src={SubProjectBoxIcon}\r\n                  ></SubSubProjectItem>\r\n                </SubProjectGroup>\r\n              </SubSubProjectBox>\r\n            </MainProjectContainer>\r\n          </ProjectContentBox>\r\n        </ProjectOverviewContentBox>\r\n      </ProjectOverviewWrapper>\r\n    )\r\n  }\r\n\r\n  return !loading ? (\r\n    <>\r\n      {projects.map((data: any, index: number) => {\r\n        return <LoadedData data={data} key={index}></LoadedData>\r\n      })}\r\n    </>\r\n  ) : (\r\n    <h2>Project Not Created</h2>\r\n  )\r\n}\r\n\r\nexport default OverviewProject\r\n","export default __webpack_public_path__ + \"static/media/userDefault.f2aaa98e.svg\";","export default __webpack_public_path__ + \"static/media/iflogo.9c5fc5f2.svg\";","export default __webpack_public_path__ + \"static/media/searchbutton.afd34be1.svg\";","export default __webpack_public_path__ + \"static/media/milestonetab.2d37cf3a.svg\";","export default __webpack_public_path__ + \"static/media/addicon.6132b434.svg\";","import { TextField } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ReactDOM from \"react-dom\"\r\nimport axios from \"../../functions/axios\"\r\nimport { truncate } from \"../../functions/cleaningData\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { UpdateSingleProjectOrMilestoneUpdate } from \"../redux/project/projectActions\"\r\nexport interface EditFormProjectProps {\r\n  id?: string\r\n  user?: string\r\n  typeofproject?: string\r\n  defaultValue?: any\r\n  isnamechanged?: boolean\r\n  callbackFunction?: any\r\n  ismilestoneedit?: boolean\r\n  issmall?: boolean\r\n  milestoneid?: string\r\n}\r\n\r\nexport const SubmitButton = styled.button`\r\n  display: none;\r\n  width: 0;\r\n  opacity: 0;\r\n  height: 0;\r\n  cursor: none;\r\n  z-index: -9999;\r\n`\r\nexport const ProjectGoalLabel = styled.span<{ isFocused?: boolean }>`\r\n  color: rgba(228, 220, 0, 1);\r\n  font-size: 18px;\r\n  position: relative;\r\n  top: ${p => (p.isFocused ? \"15px\" : \"20px\")};\r\n  transition: top 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;\r\n`\r\nconst EditForm: React.FC<EditFormProjectProps> = props => {\r\n  const projectnameinputref = React.useRef<any>()\r\n  const editformref = React.useRef<React.MutableRefObject<any> | any>()\r\n  const dispatch = useDispatch()\r\n  const [activeProjectName, setActiveProjectName] = React.useState<\r\n    string | any\r\n  >(props.defaultValue)\r\n  const SubmitButtonRef = React.useRef<React.MutableRefObject<any> | any>()\r\n\r\n  const [isFocus, setisFocus] = React.useState<boolean>(false)\r\n  const handleProjectNameSubmit = (e: any) => {\r\n    e.preventDefault()\r\n    if (\r\n      activeProjectName.length < 70 &&\r\n      activeProjectName !== \"\" &&\r\n      activeProjectName !== props.defaultValue\r\n    ) {\r\n      setisFocus(false)\r\n      console.log(\"LOOKUPHERE\", props.id, props.typeofproject)\r\n      projectnameinputref.current.blur()\r\n      dispatch(\r\n        UpdateSingleProjectOrMilestoneUpdate(\r\n          String(props.id),\r\n          [\r\n            {\r\n              goal:\r\n                activeProjectName.charAt(0).toUpperCase() +\r\n                activeProjectName.slice(1)\r\n            }\r\n          ],\r\n\r\n          false\r\n        )\r\n      )\r\n      // axios\r\n      //   .put(`project/detail/${props.id}`, {\r\n      //     user: props.user,\r\n      //     typeofproject: props.typeofproject,\r\n      //     goal:\r\n      //       activeProjectName.charAt(0).toUpperCase() +\r\n      //       activeProjectName.slice(1),\r\n      //     isnamechanged: true\r\n      //   })\r\n      //   .then(res => {\r\n      //     props.callbackFunction()\r\n      //   })\r\n      //   .catch(err => prompt(err))\r\n    }\r\n    //  else if (\r\n    //   activeProjectName.length < 70 &&\r\n    //   props.defaultValue !== \"\" &&\r\n    //   activeProjectName !== props.defaultValue\r\n    // ) {\r\n    //   axios\r\n    //     .put(`project/detail/${props.id}`, {\r\n    //       user: props.user,\r\n    //       typeofproject: props.typeofproject,\r\n    //       goal: null,\r\n    //       isnamechanged: true\r\n    //     })\r\n    //     .then(res => {\r\n    //       props.callbackFunction()\r\n    //     })\r\n    //     .catch(err => prompt(err))\r\n    // }\r\n  }\r\n  const handleMilestoneNameSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n    if (\r\n      activeProjectName.length < 70 &&\r\n      activeProjectName !== \"\" &&\r\n      activeProjectName !== props.defaultValue\r\n    ) {\r\n      console.log(\"LOOKUPHERE\", props.milestoneid, props.typeofproject)\r\n      projectnameinputref.current.blur()\r\n      dispatch(\r\n        UpdateSingleProjectOrMilestoneUpdate(\r\n          String(props.milestoneid),\r\n          [\r\n            {\r\n              goal:\r\n                activeProjectName.charAt(0).toUpperCase() +\r\n                activeProjectName.slice(1)\r\n            }\r\n          ],\r\n\r\n          true\r\n        )\r\n      )\r\n      // if (\r\n      //   activeProjectName.length < 70 &&\r\n      //   activeProjectName !== \"\" &&\r\n      //   activeProjectName !== props.defaultValue\r\n      // ) {\r\n      //   await axios\r\n      //     .put(`project/detail/milestones/${props.milestoneid}`, {\r\n      //       goal:\r\n      //         activeProjectName.charAt(0).toUpperCase() +\r\n      //         activeProjectName.slice(1)\r\n      //     })\r\n      //     .then(res => {\r\n      //       props.callbackFunction()\r\n      //     })\r\n      //     .catch(err => prompt(err))\r\n      // } else if (\r\n      //   activeProjectName.length < 70 &&\r\n      //   props.defaultValue !== \"\" &&\r\n      //   activeProjectName !== props.defaultValue\r\n      // ) {\r\n      //   await axios\r\n      //     .put(`project/detail/milestones/${props.milestoneid}`, {\r\n      //       goal: null\r\n      //     })\r\n      //     .then(res => {\r\n      //       props.callbackFunction()\r\n      //     })\r\n      //     .catch(err => prompt(err))\r\n      // }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <ProjectGoalLabel style={{ marginBottom: \"10px\" }} isFocused={isFocus}>\r\n        {props.ismilestoneedit ? \"Goal\" : \"Project Goal\"}\r\n      </ProjectGoalLabel>\r\n      <form\r\n        method=\"put\"\r\n        id=\"projectgoalform\"\r\n        onSubmit={\r\n          props.ismilestoneedit\r\n            ? handleMilestoneNameSubmit\r\n            : handleProjectNameSubmit\r\n        }\r\n        ref={editformref}\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"100%\"\r\n        }}\r\n      >\r\n        <TextField\r\n          onChange={e => {\r\n            setActiveProjectName(e.currentTarget.value)\r\n          }}\r\n          error={activeProjectName.length > 69}\r\n          helperText={\r\n            activeProjectName.length > 69\r\n              ? props.ismilestoneedit\r\n                ? \"The milestone goal name cannot contain more than 70 characters.\"\r\n                : \"The project name cannot contain more than 70 characters.\"\r\n              : null\r\n          }\r\n          inputRef={projectnameinputref}\r\n          fullWidth\r\n          InputLabelProps={{\r\n            shrink: false,\r\n            style: {\r\n              color: \"rgba(240, 240, 255, 1)\",\r\n              fontSize: props.issmall ? \"18px\" : \"24px\",\r\n              fontStyle: \"normal\",\r\n              fontWeight: \"bold\",\r\n              lineHeight: props.issmall ? \"21.6px\" : \"25px\",\r\n              letterSpacing: \"0em\",\r\n              textAlign: \"left\"\r\n            }\r\n          }}\r\n          onFocus={() => {\r\n            setisFocus(true)\r\n          }}\r\n          onBlur={() => {\r\n            setisFocus(false)\r\n            SubmitButtonRef.current.click()\r\n          }}\r\n          name=\"Project name here\"\r\n          // placeholder={props.isnamechanged ? \" \" : props.defaultValue}\r\n          defaultValue={activeProjectName !== \"\" ? activeProjectName : null}\r\n          placeholder={\r\n            activeProjectName === \"\"\r\n              ? props.ismilestoneedit\r\n                ? \"Type your milestone goal here...\"\r\n                : \"Type your project name here...\"\r\n              : activeProjectName\r\n          }\r\n          inputProps={{ maxLength: 70 }}\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            style: {\r\n              color: \"rgba(240, 240, 255, 1)\",\r\n              fontSize: \"24px\",\r\n              fontStyle: \"normal\",\r\n              fontWeight: \"bold\",\r\n              lineHeight: \"29px\",\r\n              letterSpacing: \"0em\",\r\n              textAlign: \"left\"\r\n            }\r\n          }}\r\n        />\r\n        <SubmitButton ref={SubmitButtonRef} type=\"submit\"></SubmitButton>\r\n      </form>\r\n      <span\r\n        style={{\r\n          display: \"flex;\",\r\n          boxSizing: \"border-box\",\r\n          fill: \"rgba(240, 240, 255, 1)\",\r\n          maxHeight: \"1px\",\r\n          minHeight: \"1px\",\r\n          borderRadius: \"5px\",\r\n          backgroundColor: \" rgba(240, 240, 255, 1)\"\r\n        }}\r\n      ></span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditForm\r\n","import { duration } from \"@material-ui/core\"\r\nimport { UpdateSingleProjectOrMilestoneUpdate } from \"../components/redux/project/projectActions\"\r\nimport store from \"../components/redux/project/projectReducer\"\r\nimport { LeftAsideContent2 } from \"../components/ui/ConstantUi\"\r\nimport axios from \"./axios\"\r\nimport {\r\n  backendDateConverter,\r\n  dateDifference,\r\n  frontendDatePlus,\r\n  frontendDatePlus2,\r\n  getToday,\r\n  dateDifference2,\r\n  ConvertDateFormat,\r\n  ConvertDateFormat2\r\n} from \"./cleaningData\"\r\ninterface DurationUpdateNeeds {\r\n  currentMilestones: []\r\n  durationNumber: number\r\n  callbackFunction: any\r\n  currentOneStartDate: any\r\n}\r\nconst findIDobj = (id: string, findid: string) => {\r\n  return\r\n}\r\nexport const durationUpdate = async (\r\n  durationNumber: any,\r\n  callbackFunction: any,\r\n  currentOneid: any,\r\n  currentMilestones: any[],\r\n  projectid,\r\n  plannedEndDate\r\n) => {\r\n  const promises: any = []\r\n  let currentDuration = 0\r\n  currentDuration = durationNumber\r\n  const arrfirst: any[] = []\r\n  const getProject = store\r\n    .getState()\r\n    .projects.find(project => project.id == projectid)\r\n\r\n  const actualPlannedEndDate = getProject.plannedEndDate\r\n  const actualStartDate = getProject.startDate\r\n  const getchangedarr: any = await currentMilestones.filter(\r\n    currentMilestone => {\r\n      return currentMilestone.id == currentOneid\r\n    }\r\n  )\r\n  let calculatedProgressofTime = await getchangedarr.map(elm => {\r\n    return arrfirst.push({\r\n      id: elm.id,\r\n      startDate: backendDateConverter(elm.startDate),\r\n      dueDate: frontendDatePlus(elm.startDate, currentDuration),\r\n      duration: durationNumber,\r\n      progressOfTime: calculateProgressOfTime(\r\n        ConvertDateFormat2(backendDateConverter(elm.startDate)),\r\n        ConvertDateFormat2(frontendDatePlus(elm.startDate, currentDuration))\r\n      )\r\n    })\r\n  })\r\n  let getDateofFirst: string = arrfirst[0].startDate.split(\"-\")\r\n  let ReadyToSend = new Date(\r\n    String(\r\n      getDateofFirst[2] + \"/\" + getDateofFirst[0] + \"/\" + getDateofFirst[1]\r\n    )\r\n  )\r\n\r\n  const willchangearr: any = await currentMilestones.filter(element => {\r\n    return (\r\n      arrfirst[0].id !== element.id &&\r\n      ReadyToSend < new Date(String(element.startDate))\r\n    )\r\n  })\r\n\r\n  let arr: any = willchangearr\r\n  willchangearr.forEach((item, index) => {\r\n    if (index == 0) {\r\n      arr[index] = {\r\n        id: item.id,\r\n        startDate: arrfirst[0].dueDate,\r\n        dueDate: frontendDatePlus(arrfirst[0].dueDate, item.duration),\r\n        duration: item.duration,\r\n        progressOfTime: calculateProgressOfTime(\r\n          ConvertDateFormat2(arrfirst[0].dueDate),\r\n          ConvertDateFormat2(\r\n            frontendDatePlus(arrfirst[0].dueDate, item.duration)\r\n          )\r\n        )\r\n      }\r\n    } else {\r\n      arr[index] = {\r\n        id: item.id,\r\n        startDate: arr[index - 1].dueDate,\r\n        dueDate: frontendDatePlus(arr[index - 1].dueDate, item.duration),\r\n        duration: item.duration,\r\n        progressOfTime: calculateProgressOfTime(\r\n          ConvertDateFormat2(arr[index - 1].dueDate),\r\n          ConvertDateFormat2(\r\n            frontendDatePlus(arr[index - 1].dueDate, item.duration)\r\n          )\r\n        )\r\n      }\r\n    }\r\n  })\r\n  let endResult = arrfirst.concat(arr)\r\n\r\n  let one: any = []\r\n  let two: any = []\r\n\r\n  const completeResult = endResult.forEach(async (result, index) => {\r\n    // return await promises.push(\r\n    //   axios.put(`project/detail/milestones/${result.id}`, {\r\n    //     startDate: result.startDate,\r\n    //     dueDate: result.dueDate,\r\n    //     duration: result.duration\r\n    //   })\r\n    // )\r\n\r\n    one.push(() =>\r\n      store.dispatch(\r\n        UpdateSingleProjectOrMilestoneUpdate(\r\n          result.id,\r\n          [\r\n            {\r\n              startDate: result.startDate,\r\n              dueDate: result.dueDate,\r\n              duration: result.duration,\r\n              progressOfTime: result.progressOfTime\r\n            }\r\n          ],\r\n\r\n          true\r\n        )\r\n      )\r\n    )\r\n\r\n    if (index == endResult.length - 1) {\r\n      two.push(() =>\r\n        store.dispatch(\r\n          UpdateSingleProjectOrMilestoneUpdate(\r\n            projectid,\r\n            [\r\n              {\r\n                endDate: result.dueDate,\r\n                timeDifference: Math.round(\r\n                  dateDifference(\r\n                    new Date(String(plannedEndDate)),\r\n                    ConvertDateFormat2(result.dueDate)\r\n                  )\r\n                ),\r\n                progressOfTime: calculateProgressOfTime(\r\n                  new Date(actualStartDate),\r\n                  new Date(String(ConvertDateFormat(result.dueDate)))\r\n                )\r\n              }\r\n            ],\r\n\r\n            false\r\n          )\r\n        )\r\n      )\r\n    }\r\n\r\n    // if (index === endResult.length - 1) {\r\n    //   promises.push(() =>\r\n    //     store.dispatch(\r\n    //       UpdateSingleProjectOrMilestoneUpdate(\r\n    //         projectid,\r\n    //         \"endDate\",\r\n    //         result.dueDate,\r\n    //         false\r\n    //       )\r\n    //     )\r\n    //   )\r\n    // }\r\n  })\r\n\r\n  await Promise.all(one.map(promise => promise())).then(res =>\r\n    Promise.all(two.map(promise => promise())).finally(() => {\r\n      getTotals(projectid)\r\n    })\r\n  )\r\n}\r\nexport const calculateGoalAchievingProbability = (progressOfTime, progress) => {\r\n  let goalAchievingProbability = 0\r\n  if (progressOfTime === 0 && progress > 0) {\r\n    goalAchievingProbability = 1\r\n  } else if (progressOfTime == 0 && progress == 0) {\r\n    goalAchievingProbability = 0\r\n  } else if (progressOfTime > 0 && progress == 0) {\r\n    goalAchievingProbability = 0\r\n  } else {\r\n    goalAchievingProbability = progress / progressOfTime\r\n  }\r\n  return goalAchievingProbability\r\n}\r\nexport const calculateProgressOfTime = (startDate: Date, endDate: Date) => {\r\n  const today = new Date()\r\n  // console.log(\"Look here\", startDate, endDate)\r\n  let calculatedProgressOfTime = 0.0\r\n  if (today < startDate) {\r\n    calculatedProgressOfTime = 0.0\r\n  } else if (today > endDate) {\r\n    calculatedProgressOfTime = 1.0\r\n  } else {\r\n    if (dateDifference2(endDate, startDate) == 0) {\r\n      calculatedProgressOfTime = dateDifference2(today, startDate)\r\n    } else {\r\n      calculatedProgressOfTime =\r\n        dateDifference2(today, startDate) / dateDifference2(endDate, startDate)\r\n    }\r\n  }\r\n  return calculatedProgressOfTime\r\n}\r\nexport const dueDateUpdate = async (\r\n  newDueDate: any,\r\n  callbackFunction: any,\r\n  currentOneid: any,\r\n  currentMilestones: any[],\r\n  projectid: any,\r\n  plannedEndDate\r\n) => {\r\n  const promises: any = []\r\n  let activeData = new Date(String(backendDateConverter(newDueDate)))\r\n  const arrfirst: any[] = []\r\n  // var diff = Math.abs(date1 - date2);\r\n  const getProject = store\r\n    .getState()\r\n    .projects.find(project => project.id == projectid)\r\n\r\n  const actualPlannedEndDate = getProject.plannedEndDate\r\n  const actualStartDate = getProject.startDate\r\n  const getchangedarr: any = await currentMilestones.filter(\r\n    currentMilestone => {\r\n      return currentMilestone.id == currentOneid\r\n    }\r\n  )\r\n  let dateVar = newDueDate.split(\"-\")\r\n  let newDueDatee = new Date(dateVar[2] + \"/\" + dateVar[0] + \"/\" + dateVar[1])\r\n  let getDateofFirst: string = getchangedarr[0].startDate\r\n  let startDate = new Date(String(getDateofFirst))\r\n  const durationcalculated: any = dateDifference(newDueDatee, startDate)\r\n  let calculatedTimeDifference: any = 0\r\n  let calculatedProgressOfTime = await calculateProgressOfTime(\r\n    startDate,\r\n    newDueDatee\r\n  )\r\n  await getchangedarr.map(elm => {\r\n    return arrfirst.push({\r\n      id: elm.id,\r\n      startDate: backendDateConverter(elm.startDate),\r\n      dueDate: backendDateConverter(newDueDate),\r\n      duration: durationcalculated,\r\n      progressOfTime: calculatedProgressOfTime\r\n    })\r\n  })\r\n  const willchangearr: any = currentMilestones.filter(element => {\r\n    return (\r\n      arrfirst[0].id !== element.id &&\r\n      startDate < new Date(String(element.startDate))\r\n    )\r\n  })\r\n\r\n  let arr: any = willchangearr\r\n  willchangearr.forEach((item, index) => {\r\n    if (index == 0) {\r\n      arr[index] = {\r\n        id: item.id,\r\n        startDate: backendDateConverter(newDueDate),\r\n        dueDate: frontendDatePlus(newDueDate, item.duration),\r\n        duration: item.duration,\r\n        progressOfTime: calculateProgressOfTime(\r\n          ConvertDateFormat2(frontendDatePlus(newDueDate, item.duration)),\r\n          ConvertDateFormat2(backendDateConverter(newDueDate))\r\n        )\r\n      }\r\n    } else {\r\n      arr[index] = {\r\n        id: item.id,\r\n        startDate: arr[index - 1].dueDate,\r\n        dueDate: frontendDatePlus(arr[index - 1].dueDate, item.duration),\r\n        duration: item.duration,\r\n        progressOfTime: calculateProgressOfTime(\r\n          ConvertDateFormat2(arr[index - 1].dueDate),\r\n          ConvertDateFormat2(\r\n            frontendDatePlus(arr[index - 1].dueDate, item.duration)\r\n          )\r\n        )\r\n      }\r\n    }\r\n  })\r\n  let endResult = await arrfirst.concat(arr)\r\n\r\n  let one: any = []\r\n  let two: any = []\r\n\r\n  const completeResult = endResult.forEach(async (result, index) => {\r\n    // return await promises.push(\r\n    //   axios.put(`project/detail/milestones/${result.id}`, {\r\n    //     startDate: result.startDate,\r\n    //     dueDate: result.dueDate,\r\n    //     duration: result.duration\r\n    //   })\r\n    // )\r\n\r\n    one.push(() =>\r\n      store.dispatch(\r\n        UpdateSingleProjectOrMilestoneUpdate(\r\n          result.id,\r\n          [\r\n            {\r\n              startDate: result.startDate,\r\n              dueDate: result.dueDate,\r\n              duration: result.duration,\r\n              progressOfTime: result.progressOfTime\r\n            }\r\n          ],\r\n\r\n          true\r\n        )\r\n      )\r\n    )\r\n\r\n    if (index == endResult.length - 1) {\r\n      two.push(() =>\r\n        store.dispatch(\r\n          UpdateSingleProjectOrMilestoneUpdate(\r\n            projectid,\r\n            [\r\n              {\r\n                endDate: result.dueDate,\r\n                timeDifference: Math.round(\r\n                  dateDifference(\r\n                    new Date(String(actualPlannedEndDate)),\r\n                    ConvertDateFormat2(result.dueDate)\r\n                  )\r\n                ),\r\n                progressOfTime: calculateProgressOfTime(\r\n                  new Date(actualStartDate),\r\n                  new Date(String(ConvertDateFormat(result.dueDate)))\r\n                )\r\n              }\r\n            ],\r\n\r\n            false\r\n          )\r\n        )\r\n      )\r\n    }\r\n  })\r\n\r\n  await Promise.all(one.map(promise => promise())).then(res =>\r\n    Promise.all(two.map(promise => promise())).finally(() => {\r\n      getTotals(projectid)\r\n    })\r\n  )\r\n}\r\n\r\nexport const getTotals = async (project_id: string, callback?: any) => {\r\n  let totalRelativeProgress = 0\r\n  let totalDuration = 0\r\n  let curretMilestonetype = \" \"\r\n  let currentMilestoneuser = \" \"\r\n  let currentProjectProgressOfTime = 0\r\n  let promises1: any = []\r\n  let milestones: any = []\r\n  let arr: any = milestones\r\n  // await axios.get(`project/detail/${project_id}`).then(res => {\r\n  //   milestones = res.data\r\n  //   currentMilestoneuser = res.data.user\r\n  //   curretMilestonetype = res.data.typeofproject\r\n  // })\r\n  milestones = store\r\n    .getState()\r\n    .projects.find(project => project.id == project_id)\r\n  currentMilestoneuser = milestones.user\r\n  curretMilestonetype = milestones.user.typeofproject\r\n  currentProjectProgressOfTime = milestones.progressOfTime\r\n  await milestones.milestones.map((currentMilestoneData: any) => {\r\n    totalDuration += currentMilestoneData.duration\r\n  })\r\n  // await milestones.milestones.map((currentMilestoneData: any) => {\r\n  //   totalRelativeProgress += currentMilestoneData.relativeProgress\r\n  // })\r\n\r\n  await milestones.milestones.forEach((result, index) => {\r\n    // console.log(\r\n    //   \"Checkhere \",\r\n    //   currentProjectProgressOfTime,\r\n    //   calculateGoalAchievingProbability(result.progressOfTime, result.progress),\r\n    //   result.progressOfTime,\r\n    //   result.progress\r\n    // )\r\n    arr[index] = {\r\n      id: result.id,\r\n      relativeProgress: result.progress * (result.duration / totalDuration),\r\n      goalAchievingProbability: calculateGoalAchievingProbability(\r\n        result.progressOfTime,\r\n        result.progress\r\n      )\r\n    }\r\n  })\r\n\r\n  await arr.forEach((result, index) => {\r\n    totalRelativeProgress += result.relativeProgress\r\n    promises1.push(\r\n      store.dispatch(\r\n        UpdateSingleProjectOrMilestoneUpdate(\r\n          result.id,\r\n          [\r\n            {\r\n              relativeProgress: result.relativeProgress,\r\n              goalAchievingProbability: result.goalAchievingProbability\r\n            }\r\n          ],\r\n          true\r\n        )\r\n      )\r\n    )\r\n  })\r\n  await Promise.all(promises1).then(responses => {\r\n    store.dispatch(\r\n      UpdateSingleProjectOrMilestoneUpdate(\r\n        String(project_id),\r\n        [\r\n          {\r\n            progressOfProject: totalRelativeProgress,\r\n            goalAchievingProbability: calculateGoalAchievingProbability(\r\n              currentProjectProgressOfTime,\r\n              totalRelativeProgress\r\n            )\r\n          }\r\n        ],\r\n        false\r\n      )\r\n    )\r\n  })\r\n\r\n  // i.relativeProgress = i.progress * (i.duration / totalduration)\r\n  // await axios.put(`project/detail/milestones/${result.id})\r\n}\r\nexport const progressUpdate = async (\r\n  currentMilestone: any[],\r\n  currentProgress: number,\r\n  currentOneid: string\r\n) => {\r\n  const getchangedarrStartDate = await currentMilestone.map(elm => {\r\n    return elm.progress\r\n  })\r\n}\r\n\r\nexport const changeStartDateOfProject = async (\r\n  newstartDate,\r\n  activePlanendEndDate,\r\n  projectid\r\n) => {\r\n  console.log(\r\n    ConvertDateFormat2(newstartDate),\r\n    ConvertDateFormat2(activePlanendEndDate)\r\n  )\r\n  if (\r\n    ConvertDateFormat2(newstartDate) <= ConvertDateFormat2(activePlanendEndDate)\r\n  ) {\r\n    const getProject = store\r\n      .getState()\r\n      .projects.find(project => project.id == projectid)\r\n    const getProjectMilestones = getProject.milestones\r\n    const getProjectPlannedDate = getProject.plannedEndDate\r\n\r\n    let arr: any = []\r\n\r\n    arr = getProjectMilestones\r\n    await getProjectMilestones.forEach((item, index) => {\r\n      // console.log(\r\n      //   \"check here for progress of time \",\r\n      //   ConvertDateFormat2(newstartDate),\r\n      //   ConvertDateFormat2(frontendDatePlus(newstartDate, item.duration))\r\n      // )\r\n      console.log(\"Checkhere\")\r\n      if (index == 0) {\r\n        arr[index] = {\r\n          id: item.id,\r\n          startDate: newstartDate,\r\n          dueDate: frontendDatePlus(newstartDate, item.duration),\r\n          duration: item.duration,\r\n          progressOfTime: calculateProgressOfTime(\r\n            ConvertDateFormat2(newstartDate),\r\n            ConvertDateFormat2(frontendDatePlus(newstartDate, item.duration))\r\n          )\r\n        }\r\n      } else {\r\n        arr[index] = {\r\n          id: item.id,\r\n          startDate: arr[index - 1].dueDate,\r\n          dueDate: frontendDatePlus(arr[index - 1].dueDate, item.duration),\r\n          duration: item.duration,\r\n          progressOfTime: calculateProgressOfTime(\r\n            ConvertDateFormat2(arr[index - 1].dueDate),\r\n            ConvertDateFormat2(\r\n              frontendDatePlus(arr[index - 1].dueDate, item.duration)\r\n            )\r\n          )\r\n        }\r\n      }\r\n    })\r\n    const promises: any = []\r\n    const promises2: any = []\r\n    arr.map((milestone, index) => {\r\n      promises.push(() => {\r\n        store.dispatch(\r\n          UpdateSingleProjectOrMilestoneUpdate(\r\n            milestone.id,\r\n            [\r\n              {\r\n                dueDate: milestone.dueDate,\r\n                startDate: milestone.startDate,\r\n                progressOfTime: milestone.progressOfTime\r\n              }\r\n            ],\r\n\r\n            true\r\n          )\r\n        )\r\n      })\r\n      if (index == arr.length - 1) {\r\n        console.log(\r\n          \"Checkererere\",\r\n          milestone.dueDate,\r\n          getProjectPlannedDate,\r\n\r\n          ConvertDateFormat2(milestone.dueDate),\r\n          ConvertDateFormat2(newstartDate)\r\n        )\r\n        promises2.push(() =>\r\n          store.dispatch(\r\n            UpdateSingleProjectOrMilestoneUpdate(\r\n              projectid,\r\n              [\r\n                {\r\n                  startDate: newstartDate,\r\n                  plannedEndDate: activePlanendEndDate,\r\n                  endDate: milestone.dueDate,\r\n                  timeDifference: Math.round(\r\n                    dateDifference(\r\n                      getProjectPlannedDate,\r\n                      ConvertDateFormat2(milestone.dueDate)\r\n                    )\r\n                  ),\r\n                  progressOfTime: calculateProgressOfTime(\r\n                    ConvertDateFormat2(newstartDate),\r\n                    ConvertDateFormat2(milestone.dueDate)\r\n                  )\r\n                }\r\n              ],\r\n              false\r\n            )\r\n          )\r\n        )\r\n      }\r\n    })\r\n    await Promise.all(promises2.map(promise => promise()))\r\n      .then(res => {\r\n        console.log(\"kanka bura girmicen\", res)\r\n        Promise.all(promises.map(promise => promise()))\r\n      })\r\n      .finally(() => getTotals(projectid))\r\n  }\r\n\r\n  // Get project milestone\r\n  // update end date\r\n  // Update project milestones startDates reorder them\r\n}\r\n","export default __webpack_public_path__ + \"static/media/calendar.0684814e.svg\";","import \"date-fns\"\r\nimport React from \"react\"\r\nimport DateFnsUtils from \"@date-io/date-fns\"\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\"\r\nimport styled from \"styled-components\"\r\nimport CalendarIcon from \"../../static/svgicon/calendar.svg\"\r\nimport { CleanTypeOfData } from \"../../functions/cleaningData\"\r\n\r\ninterface DatePickerProps {\r\n  defaultStartData?: string | any\r\n  defaultPlannedEndData?: string | any\r\n  handleStartDate: any\r\n  handleEndDate: any\r\n  projecttype?: string\r\n  ismilestoneedit?: boolean\r\n  milestones: any\r\n}\r\n\r\nconst DatePickerContainer = styled.div<{ width: number }>`\r\n  display: flex;\r\n  width: ${p => p.width}%;\r\n  justify-content: space-between;\r\n`\r\nconst DetailContentHeader = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`\r\n\r\nconst ProjectTypeContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  flex-direction: column;\r\n  width: 65%;\r\n`\r\nconst ProjectTypeLabelText = styled.div`\r\n  display: flex;\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  justify-content: flex-end;\r\n  color: rgba(228, 220, 0, 0.7);\r\n`\r\nconst ExactProjectText = styled.div`\r\n  display: flex;\r\n  color: rgba(240, 240, 255, 0.7);\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  justify-content: flex-end;\r\n`\r\nconst CalendarIconComp = styled.img``\r\n\r\nconst DatePicker: React.FC<DatePickerProps> = props => {\r\n  type FontWeight =\r\n    | \"normal\"\r\n    | \"bold\"\r\n    | \"100\"\r\n    | \"200\"\r\n    | \"300\"\r\n    | \"400\"\r\n    | \"500\"\r\n    | \"600\"\r\n    | \"700\"\r\n    | \"800\"\r\n    | \"900\"\r\n\r\n  const boldText = {\r\n    fontWeight: \"400\" as FontWeight\r\n  }\r\n  // The first commit of Material-UI\r\n\r\n  const [ActiveStartDate, setActiveStartDate] = React.useState<any | Date>(\r\n    props.defaultStartData\r\n  )\r\n  const [onFocus, setOnFocus] = React.useState<boolean>(false)\r\n  const [ActivePlannedDate, setActivePlannedDate] = React.useState<any>(\r\n    props.defaultPlannedEndData\r\n  )\r\n\r\n  const handleStartDateChange = (date: any | null) => {\r\n    setActiveStartDate(date)\r\n    // const strdata =\r\n    //   ActiveStartDate?.getDate() +\r\n    //   \"-\" +\r\n    //   ActiveStartDate?.getMonth() +\r\n    //   \"-\" +\r\n    //   ActiveStartDate?.getFullYear()\r\n    props.handleStartDate(date)\r\n  }\r\n  const handlePlanningEndDateChange = (date: any | null) => {\r\n    setActivePlannedDate(date)\r\n    props.handleEndDate(date)\r\n  }\r\n  React.useEffect(() => {\r\n    if (onFocus === true) {\r\n      const getbutton = document.getElementsByClassName(\r\n        \"MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary\"\r\n      )\r\n      getbutton[0].setAttribute(\"type\", \"submit\")\r\n      getbutton[1].setAttribute(\"type\", \"submit\")\r\n      getbutton[0].setAttribute(\"form\", \"datepickerform\")\r\n      getbutton[1].setAttribute(\"form\", \"datepickerform\")\r\n    }\r\n  }, [onFocus])\r\n  let CannotBeEqual = new Date(props.defaultStartData)\r\n  CannotBeEqual.setDate(CannotBeEqual.getDate())\r\n  // console.log(CannotBeEqual)\r\n  return (\r\n    <DetailContentHeader>\r\n      <DatePickerContainer width={props.ismilestoneedit ? 86 : 35}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          {!props.ismilestoneedit && (\r\n            <KeyboardDatePicker\r\n              margin={\"normal\"}\r\n              id=\"date-picker-dialog\"\r\n              label=\"Start Date\"\r\n              format=\"MM/dd/yyyy\"\r\n              allowKeyboardControl={false}\r\n              value={ActiveStartDate}\r\n              InputLabelProps={{\r\n                style: {\r\n                  color: \"rgba(228, 220, 0, 1)\",\r\n                  fontSize: \"18px\",\r\n                  fontStyle: \"normal\",\r\n                  fontWeight: \"bold\",\r\n                  lineHeight: \"25px\",\r\n                  letterSpacing: \"0em\",\r\n                  textAlign: \"left\"\r\n                }\r\n              }}\r\n              InputProps={{\r\n                readOnly: true,\r\n                style: {\r\n                  borderBottom: \"2px solid white\",\r\n                  color: \"rgba(240, 240, 255, 0.7)\"\r\n                }\r\n              }}\r\n              DialogProps={{\r\n                onFocus: () => {\r\n                  setOnFocus(true)\r\n                },\r\n                onBlur: () => {\r\n                  setOnFocus(false)\r\n                }\r\n              }}\r\n              onChange={(e: any) => {\r\n                setActiveStartDate(e)\r\n                // const strdata =\r\n                //   ActiveStartDate?.getDate() +\r\n                //   \"-\" +\r\n                //   ActiveStartDate?.getMonth() +\r\n                //   \"-\" +\r\n                //   ActiveStartDate?.getFullYear()\r\n                props.handleStartDate(e)\r\n              }}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\"\r\n              }}\r\n              keyboardIcon={\r\n                <CalendarIconComp src={CalendarIcon}></CalendarIconComp>\r\n              }\r\n            />\r\n          )}\r\n          <KeyboardDatePicker\r\n            margin={props.ismilestoneedit ? \"none\" : \"normal\"}\r\n            id=\"date-picker-dialog\"\r\n            label={props.ismilestoneedit ? \"\" : \"Planning Date\"}\r\n            format=\"MM/dd/yyyy\"\r\n            minDate={\r\n              props.ismilestoneedit\r\n                ? CannotBeEqual.setDate(CannotBeEqual.getDate() + 1)\r\n                : ActiveStartDate\r\n            }\r\n            value={ActivePlannedDate}\r\n            allowKeyboardControl={false}\r\n            InputLabelProps={{\r\n              style: {\r\n                color: \"rgba(228, 220, 0, 1)\",\r\n                fontSize: \"18px\",\r\n                fontStyle: \"normal\",\r\n                fontWeight: \"bold\",\r\n                lineHeight: \"25px\",\r\n                letterSpacing: \"0em\",\r\n                textAlign: \"left\"\r\n              }\r\n            }}\r\n            keyboardIcon={\r\n              <CalendarIconComp src={CalendarIcon}></CalendarIconComp>\r\n            }\r\n            InputProps={{\r\n              readOnly: true,\r\n              style: {\r\n                borderBottom: \"2px solid white\",\r\n                color: props.ismilestoneedit\r\n                  ? \"rgba(240, 240, 255, 1)\"\r\n                  : \"rgba(240, 240, 255, 0.7)\",\r\n                fontSize: props.ismilestoneedit ? \"18px\" : \"auto\",\r\n                fontStyle: props.ismilestoneedit ? \"normal\" : \"auto\",\r\n                lineHeight: props.ismilestoneedit ? \"22px\" : \"auto\",\r\n                letterSpacing: props.ismilestoneedit ? \"0em\" : \"auto\",\r\n                fontWeight: \"-moz-initial\"\r\n              }\r\n            }}\r\n            DialogProps={{\r\n              onFocus: () => {\r\n                setOnFocus(true)\r\n              },\r\n              onBlur: () => {\r\n                setOnFocus(false)\r\n              }\r\n            }}\r\n            onChange={handlePlanningEndDateChange}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\"\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </DatePickerContainer>\r\n      {!props.ismilestoneedit && (\r\n        <ProjectTypeContainer>\r\n          <ProjectTypeLabelText>Project Type</ProjectTypeLabelText>\r\n          <ExactProjectText>\r\n            {CleanTypeOfData(props.projecttype)}\r\n          </ExactProjectText>\r\n        </ProjectTypeContainer>\r\n      )}\r\n    </DetailContentHeader>\r\n  )\r\n}\r\nexport default DatePicker\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport axios from \"../../functions/axios\"\r\nimport {\r\n  changeStartDateOfProject,\r\n  dueDateUpdate,\r\n  getTotals\r\n} from \"../../functions/process\"\r\nimport DatePicker from \"../ui/DatePicker\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { UpdateSingleProjectOrMilestoneUpdate } from \"../redux/project/projectActions\"\r\nimport { RootState } from \"../redux/project/projectReducer\"\r\nimport {\r\n  backendDateConverter,\r\n  ConvertDateFormat2,\r\n  dateDifference\r\n} from \"../../functions/cleaningData\"\r\nconst Form = styled.form`\r\n  height: 20%;\r\n`\r\n\r\nconst SubmitButton = styled.button`\r\n  display: none;\r\n  width: 0;\r\n  opacity: 0;\r\n  height: 0;\r\n  cursor: none;\r\n`\r\nexport interface DatePickerFormProps {\r\n  id?: any\r\n  user?: string\r\n  typeofproject?: string\r\n  defaultStartData?: string\r\n  defaultPlannedEndData?: string\r\n  callbackFunction?: any\r\n  ismilestone?: boolean\r\n  milestones: any\r\n  actualprojectid?: any\r\n  endDate?: any\r\n}\r\n\r\nconst DatePickerForm: React.FC<DatePickerFormProps> = props => {\r\n  const project: any = useSelector((state: RootState) =>\r\n    state.projects.find(project =>\r\n      project.id == props.actualprojectid ? props.actualprojectid : props.id\r\n    )\r\n  )\r\n  // console.log(project, props.actualprojectid, \"projectttt\")\r\n  const plannedEndDate = project?.plannedEndDate\r\n  const endDate = props.endDate\r\n  const [activeStartDate, setActiveStartDate] = React.useState<Date | null>(\r\n    null\r\n  )\r\n  const datepickerformref = React.useRef<HTMLFormElement>(null)\r\n  const [activeEndDate, setActiveEndDate] = React.useState<Date | null>(null)\r\n  const [defaultStartDate, setDefaultStartDate] = React.useState<Date | null>()\r\n  const [defaultEndDate, setDefaultEndDate] = React.useState<Date | null>()\r\n  const dispatch = useDispatch()\r\n  React.useEffect(() => {\r\n    let activeStartDate: any = props.defaultStartData?.split(\"-\")\r\n    let active: any = new Date()\r\n    let activePlannedEndDate: any = props.defaultPlannedEndData?.split(\"-\")\r\n    let active2: any = new Date()\r\n    // console.log(\"ACTİVEE\", active)\r\n    active =\r\n      activeStartDate[1] + \"-\" + activeStartDate[2] + \"-\" + activeStartDate[0]\r\n    active2 =\r\n      activePlannedEndDate[1] +\r\n      \"-\" +\r\n      activePlannedEndDate[2] +\r\n      \"-\" +\r\n      activePlannedEndDate[0]\r\n    setDefaultStartDate(active)\r\n    setDefaultEndDate(active2)\r\n  }, [])\r\n  const handleActiveStartDate = (date: Date | null) => {\r\n    let activemonth: any = date?.getMonth()\r\n    let active: any = new Date()\r\n    let dd = String(date?.getDate()).padStart(2, \"0\")\r\n    let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n\r\n    let yyyy = date?.getFullYear()\r\n    active = mm + \"-\" + dd + \"-\" + yyyy\r\n\r\n    setActiveStartDate(active)\r\n  }\r\n  const handleActivePlanningEndDate = (date: Date | null) => {\r\n    let active: any = new Date()\r\n    let activemonth: any = date?.getMonth()\r\n    let dd = String(date?.getDate()).padStart(2, \"0\")\r\n    let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n    let yyyy = date?.getFullYear()\r\n    active = mm + \"-\" + dd + \"-\" + yyyy\r\n    setActiveEndDate(active)\r\n  }\r\n  const handleActiveMilestoneEndDate = (date: Date | null) => {\r\n    let active: any = new Date()\r\n    let activemonth: any = date?.getMonth()\r\n    let dd = String(date?.getDate()).padStart(2, \"0\")\r\n    let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n    let yyyy = date?.getFullYear()\r\n    active = mm + \"-\" + dd + \"-\" + yyyy\r\n    setActiveEndDate(active)\r\n  }\r\n  const handleActiveMilestoneStartDate = (date: Date | null) => {\r\n    let activemonth: any = date?.getMonth()\r\n    let active: any = new Date()\r\n    let dd = String(date?.getDate()).padStart(2, \"0\")\r\n    let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n\r\n    let yyyy = date?.getFullYear()\r\n    active = mm + \"-\" + dd + \"-\" + yyyy\r\n\r\n    setActiveStartDate(active)\r\n  }\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n    const ActiveStarDateClean = activeStartDate || defaultStartDate\r\n    const ActiveEndDateClean = activeEndDate || defaultEndDate\r\n    let promise: any = []\r\n    if (ActiveStarDateClean === activeStartDate) {\r\n      // console.log(\"START DATE CHANGES STARTED\")\r\n      changeStartDateOfProject(ActiveStarDateClean, defaultEndDate, props.id)\r\n    } else if (ActiveEndDateClean === activeEndDate) {\r\n      // console.log(\r\n      //   \"OKEY\",\r\n      //   endDate,\r\n      //   ActiveEndDateClean,\r\n      //   dateDifference(\r\n      //     new Date(String(ActiveEndDateClean)),\r\n      //     new Date(String(backendDateConverter(endDate)))\r\n      //   )\r\n      // )\r\n\r\n      promise.push(\r\n        dispatch(\r\n          UpdateSingleProjectOrMilestoneUpdate(\r\n            props.id,\r\n            [\r\n              {\r\n                plannedEndDate: ActiveEndDateClean,\r\n                timeDifference: Math.round(\r\n                  dateDifference(\r\n                    ConvertDateFormat2(ActiveEndDateClean),\r\n                    new Date(String(endDate))\r\n                  )\r\n                )\r\n              }\r\n            ],\r\n            false\r\n          )\r\n        )\r\n      )\r\n      Promise.all(promise).then(res => getTotals(props.id))\r\n    }\r\n\r\n    // await axios\r\n    //   .put(`project/detail/${props.id}`, {\r\n    //     user: props.user,\r\n    //     typeofproject: props.typeofproject,\r\n    //     startDate: ActiveStarDateClean,\r\n    //     plannedEndDate: ActiveEndDateClean\r\n    //   })\r\n    //   .then(res => {\r\n    //     console.log(\"plannedenddate and startDate updated\")\r\n    //   })\r\n    //   .catch(err => console.log(err))\r\n    // await getTotals(props.id, props.callbackFunction)\r\n  }\r\n\r\n  const handleMilestoneDateSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n    const ActiveStarDateClean = activeStartDate || defaultStartDate\r\n    const ActiveEndDateClean = activeEndDate || defaultEndDate\r\n    await dueDateUpdate(\r\n      ActiveEndDateClean,\r\n      props.callbackFunction,\r\n      props.id,\r\n      props.milestones,\r\n      props.actualprojectid,\r\n      plannedEndDate\r\n    )\r\n    // console.log(\"props.id\", props.id)\r\n    // await getTotals(props.actualprojectid, props.callbackFunction)\r\n    // await axios\r\n    //   .put(`project/detail/milestones/${props.id}`, {\r\n    //     id: props.id,\r\n    //     dueDate: ActiveEndDateClean\r\n    //   })\r\n    //   .then(res => {\r\n    //     props.callbackFunction()\r\n    //   })\r\n    //   .catch(err => console.log(err))\r\n    // console.log(\"milestone end adate checkhere\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        id=\"datepickerform\"\r\n        method=\"post\"\r\n        ref={datepickerformref}\r\n        onSubmit={props.ismilestone ? handleMilestoneDateSubmit : handleSubmit}\r\n      >\r\n        <DatePicker\r\n          milestones={props.milestones}\r\n          ismilestoneedit={props.ismilestone}\r\n          projecttype={props.typeofproject}\r\n          handleStartDate={\r\n            props.ismilestone\r\n              ? handleActiveMilestoneStartDate\r\n              : handleActiveStartDate\r\n          }\r\n          handleEndDate={\r\n            props.ismilestone\r\n              ? handleActiveMilestoneEndDate\r\n              : handleActivePlanningEndDate\r\n          }\r\n          defaultStartData={props.defaultStartData}\r\n          defaultPlannedEndData={props.defaultPlannedEndData}\r\n        ></DatePicker>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\nexport default DatePickerForm\r\n","export default __webpack_public_path__ + \"static/media/discard.20875ae6.svg\";","export default __webpack_public_path__ + \"static/media/accept.afce0fd8.svg\";","import styled from \"styled-components\"\r\nimport React from \"react\"\r\nimport axios from \"../../functions/axios\"\r\nimport { IconButton, FormHelperText, TextField } from \"@material-ui/core\"\r\nimport {\r\n  DescriptionBoxContainer,\r\n  SaveIcon,\r\n  SaveDiscardContainer,\r\n  DiscardIcon\r\n} from \"../ui/ConstantUi\"\r\nimport DiscardSvgIcon from \"../../static/svgicon/discard.svg\"\r\nimport AcceptIcon from \"../../static/svgicon/accept.svg\"\r\nimport { stringify } from \"querystring\"\r\nimport { kStringMaxLength } from \"buffer\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { UpdateSingleProjectOrMilestoneUpdate } from \"../redux/project/projectActions\"\r\n\r\nexport interface DescriptionBoxTextAreaProps {\r\n  id?: string\r\n  user?: string\r\n  typeofproject?: string\r\n  defaultValue?: string\r\n  firstTimeChange?: boolean\r\n  callbackFunction?: any\r\n  typemilestone?: boolean\r\n  milestoneid?: string\r\n}\r\n\r\nconst DescriptionInput = styled.textarea`\r\n  flex: 1;\r\n  display: block;\r\n  border: none;\r\n  min-width: 0;\r\n  border: none;\r\n  overflow: auto;\r\n  outline: none;\r\n  color: rgba(240, 240, 255, 0.7);\r\n  font-size: 15px;\r\n  padding: 5px;\r\n  font-weight: 400;\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n  overflow-y: auto;\r\n  font-family: aileron;\r\n\r\n  background-color: transparent;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    border-radius: 10px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background: rgba(240, 240, 255, 1);\r\n  }\r\n`\r\n\r\nconst DescriptionBoxTextArea: React.FC<DescriptionBoxTextAreaProps> = props => {\r\n  const dispatch = useDispatch()\r\n  const [activeDescriptionText, setActiveDescriptionText] = React.useState<\r\n    string | any\r\n  >(props.defaultValue)\r\n  const [withoutSave, setWithoutSave] = React.useState<boolean>(true)\r\n  const [processName, setProcessName] = React.useState<string>(\"\")\r\n  const [defaultValue, setDefaultValue] = React.useState<string | any>(\r\n    props.defaultValue\r\n  )\r\n  const [SaveProps, setSaveProps] = React.useState(false)\r\n  const InputBoxRef = React.useRef<React.MutableRefObject<any> | any>()\r\n  // React.useEffect(() => {\r\n  //   if (processName === \"Discard\" && withoutSave && props.firstTimeChange) {\r\n  //     setActiveDescriptionText(defaultValue)\r\n  //     InputBoxRef.current.value = defaultValue\r\n  //   } else if (processName === \"Discard\" && withoutSave) {\r\n  //     InputBoxRef.current.value = props.defaultValue\r\n  //     setActiveDescriptionText(props.defaultValue)\r\n  //   } else if (processName === \"Discard\") {\r\n  //     if (defaultValue.length == 2) {\r\n  //       setActiveDescriptionText(props.defaultValue)\r\n  //       InputBoxRef.current.value = props.defaultValue\r\n  //     } else if (defaultValue.length > 2) {\r\n  //       setActiveDescriptionText(defaultValue)\r\n  //       InputBoxRef.current.value = defaultValue[defaultValue.length - 2]\r\n  //     } else {\r\n  //       setActiveDescriptionText(defaultValue)\r\n  //       InputBoxRef.current.value = defaultValue[0]\r\n  //     }\r\n  //   }\r\n  // }, [processName])\r\n\r\n  const handleDescriptionBoxSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n\r\n    if (activeDescriptionText === \"\") {\r\n    } else if (\r\n      activeDescriptionText !== \"\" &&\r\n      activeDescriptionText !== props.defaultValue\r\n    ) {\r\n      if (processName === \"Save\") {\r\n        dispatch(\r\n          UpdateSingleProjectOrMilestoneUpdate(\r\n            props.id,\r\n            [{ description: activeDescriptionText }],\r\n            false\r\n          )\r\n        )\r\n\r\n        // await axios\r\n        //   .put(`project/detail/${props.id}`, {\r\n        //     user: props.user,\r\n        //     typeofproject: props.typeofproject,\r\n        //     description: activeDescriptionText\r\n        //   })\r\n        //   .then(res => {\r\n        //     // setWithoutSave(false)\r\n        //     // setDefaultValue([...defaultValue, res.data.description])\r\n        //     props.callbackFunction()\r\n        //   })\r\n        //   .catch(err => prompt(err.response))\r\n      }\r\n    }\r\n  }\r\n  const handleDescriptionForMilestone = async (e: any) => {\r\n    e.preventDefault()\r\n    console.log(\"descr\", props.milestoneid)\r\n    if (activeDescriptionText === \"\") {\r\n    } else {\r\n      if (processName === \"Save\") {\r\n        dispatch(\r\n          UpdateSingleProjectOrMilestoneUpdate(\r\n            props.milestoneid,\r\n            [{ description: activeDescriptionText }],\r\n            true\r\n          )\r\n        )\r\n        // await axios\r\n        //   .put(`project/detail/milestones/${props.milestoneid}`, {\r\n        //     description: activeDescriptionText\r\n        //   })\r\n        //   .then(res => {\r\n        //     console.log(\"YOVVVV\")\r\n        //     // setWithoutSave(false)\r\n        //     props.callbackFunction()\r\n        //   })\r\n        //   .catch(err => console.log(err))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DescriptionBoxContainer>\r\n        <form\r\n          onSubmit={\r\n            props.typemilestone\r\n              ? handleDescriptionForMilestone\r\n              : handleDescriptionBoxSubmit\r\n          }\r\n          id=\"descriptionboxform\"\r\n          style={{ display: \"flex\", width: \"100%\", flexDirection: \"column\" }}\r\n        >\r\n          <TextField\r\n            style={{\r\n              fontFamily: \"aileron\",\r\n              all: \"inherit\",\r\n              flexBasis: \"100%\",\r\n              cursor: \"text\"\r\n            }}\r\n            ref={InputBoxRef}\r\n            onChange={(e: any) => {\r\n              setActiveDescriptionText(e.target.value)\r\n            }}\r\n            value={activeDescriptionText}\r\n            type=\"text-area\"\r\n            multiline={true}\r\n            InputProps={{\r\n              disableUnderline: true,\r\n              style: {\r\n                all: \"inherit\",\r\n                color: \"rgba(240, 240, 255, 0.7)\",\r\n                fontSize: \"15px\"\r\n              }\r\n            }}\r\n            rowsMax={props.typemilestone ? 6 : 20}\r\n            error={activeDescriptionText?.length > 4999}\r\n            helperText={\r\n              activeDescriptionText.length > 4999 &&\r\n              \"The description cannot contain more than 5000 characters.\"\r\n            }\r\n          ></TextField>\r\n        </form>\r\n      </DescriptionBoxContainer>\r\n      <SaveDiscardContainer>\r\n        <IconButton\r\n          disabled={\r\n            activeDescriptionText === props.defaultValue ||\r\n            activeDescriptionText === \"\"\r\n          }\r\n          onClick={() => {\r\n            setProcessName(\"Save\")\r\n            setSaveProps(true)\r\n          }}\r\n          id=\"savebutton\"\r\n          type=\"submit\"\r\n          form=\"descriptionboxform\"\r\n        >\r\n          <SaveIcon src={AcceptIcon}></SaveIcon>\r\n        </IconButton>\r\n        <IconButton\r\n          disabled={\r\n            activeDescriptionText === props.defaultValue ||\r\n            activeDescriptionText === \"\"\r\n          }\r\n          onBlur={() => {\r\n            setProcessName(\"\")\r\n          }}\r\n          onClick={() => {\r\n            setActiveDescriptionText(props.defaultValue)\r\n          }}\r\n          id=\"discardbutton\"\r\n        >\r\n          <DiscardIcon src={DiscardSvgIcon}></DiscardIcon>\r\n        </IconButton>\r\n      </SaveDiscardContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DescriptionBoxTextArea\r\n","export default __webpack_public_path__ + \"static/media/closemilestonetab.7c172061.svg\";","export default __webpack_public_path__ + \"static/media/treeviewlogo.6f3401e8.svg\";","export default __webpack_public_path__ + \"static/media/smallpointer.05221af5.svg\";","export default __webpack_public_path__ + \"static/media/bigpointer.c0e5df45.svg\";","export default __webpack_public_path__ + \"static/media/milestonepointer.ee3b518f.svg\";","import React, { Component } from \"react\"\r\nimport { TopHeaderStatusBar, TopHeaderStatusBarContainer } from \"./ConstantUi\"\r\nimport StatusBarIcon from \"../../static/svgicon/statusbar.svg\"\r\nimport styled from \"styled-components\"\r\nimport SmallPointer from \"../../static/svgicon/smallpointer.svg\"\r\nimport BigPointer from \"../../static/svgicon/bigpointer.svg\"\r\nimport MilestonePointer from \"../../static/svgicon/milestonepointer.svg\"\r\nimport {\r\n  calculateMilestonesPositioning,\r\n  ConvertDateFormat,\r\n  calculateDatesPositioning,\r\n  PercentageConvertation\r\n} from \"../../functions/cleaningData\"\r\nimport {\r\n  Convertpercentage,\r\n  LinearProgressBarCleaningData\r\n} from \"../../functions/cleaningData\"\r\nimport { Tooltip } from \"@material-ui/core\"\r\n\r\nexport interface LinearProgressBarProps {\r\n  smallSize?: boolean\r\n  mediumSize?: boolean\r\n  isMilestoneEditTab?: boolean\r\n  value?: any[] | any\r\n  milestones?: []\r\n  milestoneprogressOfTime?: any\r\n  milestoneprogress?: any\r\n  milestonestartdate?: any\r\n  milestoneeduedate?: any\r\n}\r\nconst MainContainerBody = styled.div<{ small?: boolean; medium?: boolean }>`\r\n  display: flex;\r\n\r\n  flex-direction: row;\r\n  ${p =>\r\n    p.small\r\n      ? p.medium\r\n        ? \"flex-basis: 100%; min-width: 100%;max-height: 13.18px;min-height: 13.18px;\"\r\n        : \"flex-basis: 20%; min-width: 20%;max-height: 12px;min-height: 12px;\"\r\n      : \"flex-basis: 100%; min-width: 100%;max-height: 23px;min-height: 23px;\"}\r\n\r\n  flex-grow: 0;\r\n  border-radius: 5px;\r\n`\r\nconst MainContainerGrayArea = styled.div<{ width: number }>`\r\n  background: ${p =>\r\n    `linear-gradient(to right, #636380 0%, #636380 ${p.width}%, transparent ${p.width}%, transparent 100%)`};\r\n  display: flex;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  padding: 4.19px 7px 4.27px 7px;\r\n`\r\nconst MainContainerTop = styled.div<{ small?: boolean; medium?: boolean }>`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  position: relative;\r\n  flex-basis: 100%;\r\n  min-width: 100%;\r\n  flex-grow: 0;\r\n  ${p => !p.small && \"max-height: 23px;min-height: 23px;\"}\r\n  border-radius: 5px;\r\n  padding: 4.19px 0 4.27px 0;\r\n`\r\nconst MainContainerBottom = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: row;\r\n  position: relative;\r\n  flex-basis: 100%;\r\n  min-width: 100%;\r\n  flex-grow: 0;\r\n  max-height: 23px;\r\n  min-height: 23px;\r\n  border-radius: 5px;\r\n  padding: 4.19px 7px 4.27px 7px;\r\n`\r\nconst MilestonesIcon = styled.img<{ position: number }>`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  left: ${p => p.position + \"%\"};\r\n`\r\nconst FirstLine = styled.div<{ width: any }>`\r\n  display: flex;\r\n  flex-grow: 0;\r\n  cursor: pointer;\r\n\r\n  background: rgba(240, 240, 255, 0.7);\r\n  border-radius: 5px;\r\n  flex-basis: ${p => p.width + \"%\"};\r\n  min-width: ${p => p.width + \"%\"};\r\n`\r\nconst SecondLine = styled.div<{ width: any }>`\r\n  display: flex;\r\n  cursor: pointer;\r\n  flex-grow: 0;\r\n  background: rgba(228, 220, 0, 1);\r\n  border-radius: 5px;\r\n  flex-basis: ${p => p.width + \"%\"};\r\n  min-width: ${p => p.width + \"%\"};\r\n`\r\nconst SmallPointerIcon = styled.img<{ position?: number }>`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  z-index: 999;\r\n  left: ${p => p.position + \"%\"};\r\n`\r\nconst BigPointerIcon = styled.img<{ position?: number; small?: boolean }>`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  z-index: 0px;\r\n  left: ${p => p.position + \"%\"};\r\n  ${p => p.small && \"width:11px;height:11px;\"}\r\n`\r\nconst PlannedAndDatePointer = styled.img<{ position?: number }>`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  left: ${p => p.position + \"%\"};\r\n`\r\nconst LinearProgressBar: React.FC<LinearProgressBarProps> = props => {\r\n  // React.useEffect(() => {\r\n  //   // console.log(\r\n  //   //   calculateMilestonesPositioning(props.value[6]),\r\n  //   //   \"progress of project\",\r\n  //   //   props.value[4],\r\n  //   //   \"progress time of project\",\r\n  //   //   props.value[3],\r\n  //   //   props.value[6],\r\n  //   //   Convertpercentage(props.value[3]).converted,\r\n  //   //   LinearProgressBarCleaningData(props.value[0]).fullwithEndDate,\r\n  //   //   LinearProgressBarCleaningData(props.value[0]).percentageTimeDifference\r\n  //   // )\r\n  // })\r\n  const getLocationOnProgressBar = (expression: string) => {\r\n    switch (expression) {\r\n      case \"progressofproject\":\r\n        // code block\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).progressofproject\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).progressofproject\r\n\r\n      case \"enddate\":\r\n        // code block\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).fullWidth\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).fullWidth\r\n      case \"GrayLine\":\r\n        return props.isMilestoneEditTab\r\n          ? Math.round(\r\n              calculateDatesPositioning(\r\n                props.milestonestartdate,\r\n                props.milestoneeduedate,\r\n                props.value[1],\r\n                props.value[0],\r\n                props.milestoneprogress,\r\n                props.milestoneprogressOfTime,\r\n                true\r\n              ).firstline\r\n            )\r\n          : Math.round(\r\n              calculateDatesPositioning(\r\n                props.value[5],\r\n                props.value[2],\r\n                props.value[1],\r\n                props.value[0],\r\n                props.value[4],\r\n                props.value[3],\r\n                false\r\n              ).firstline\r\n            )\r\n      case \"YellowLine\":\r\n        return props.isMilestoneEditTab\r\n          ? Math.round(\r\n              calculateDatesPositioning(\r\n                props.milestonestartdate,\r\n                props.milestoneeduedate,\r\n                props.value[1],\r\n                props.value[0],\r\n                props.milestoneprogress,\r\n                props.milestoneprogressOfTime,\r\n                true\r\n              ).secondlineWidth\r\n            )\r\n          : Math.round(\r\n              calculateDatesPositioning(\r\n                props.value[5],\r\n                props.value[2],\r\n                props.value[1],\r\n                props.value[0],\r\n                props.value[4],\r\n                props.value[3],\r\n                false\r\n              ).secondlineWidth\r\n            )\r\n      case \"FullWidth\":\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).fullWidth\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).fullWidth\r\n      case \"Isexpired\":\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).isexpired\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).isexpired\r\n      case \"widthofGray\":\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).fullWidthGray\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).fullWidthGray\r\n      case \"enddate-startdate\":\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).diffstartdateenddate\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).diffstartdateenddate\r\n      case \"plannedenddate-startdate\":\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).diffstartdateplannedenddate\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).diffstartdateplannedenddate\r\n      default:\r\n        return 0\r\n      // code block\r\n    }\r\n  }\r\n  // React.useEffect(() => {\r\n  //   console.log(getLocationOnProgressBar(\"progressofproject\") > 100)\r\n  // }, [])\r\n  return (\r\n    <TopHeaderStatusBarContainer>\r\n      <MainContainerTop small={props.smallSize}>\r\n        {!props.smallSize && (\r\n          <>\r\n            <Tooltip title={`Start Date ${ConvertDateFormat(props.value[5])}`}>\r\n              <SmallPointerIcon\r\n                id=\"startdate\"\r\n                position={-1}\r\n                src={SmallPointer}\r\n              ></SmallPointerIcon>\r\n            </Tooltip>\r\n          </>\r\n        )}\r\n        <Tooltip\r\n          title={`Project Progress %${\r\n            getLocationOnProgressBar(\"progressofproject\") >= 100\r\n              ? 100\r\n              : props.isMilestoneEditTab\r\n              ? Math.floor(getLocationOnProgressBar(\"progressofproject\"))\r\n              : Math.floor(PercentageConvertation(props.value[4]))\r\n          }`}\r\n        >\r\n          <BigPointerIcon\r\n            small={props.smallSize}\r\n            id=\"progressofproject\"\r\n            position={\r\n              getLocationOnProgressBar(\"progressofproject\") >= 100\r\n                ? 97.5\r\n                : getLocationOnProgressBar(\"progressofproject\") - 1.5\r\n            }\r\n            src={BigPointer}\r\n          ></BigPointerIcon>\r\n        </Tooltip>\r\n        {!props.smallSize && (\r\n          <>\r\n            <Tooltip title={`End Date ${ConvertDateFormat(props.value[2])}`}>\r\n              <SmallPointerIcon\r\n                src={SmallPointer}\r\n                position={\r\n                  getLocationOnProgressBar(\"Isexpired\")\r\n                    ? getLocationOnProgressBar(\"enddate\") - 1.5\r\n                    : getLocationOnProgressBar(\"enddate\") - 0.8\r\n                }\r\n                id=\"enddate\"\r\n              ></SmallPointerIcon>\r\n            </Tooltip>\r\n\r\n            {\r\n              <Tooltip\r\n                title={`Planned End Date ${ConvertDateFormat(props.value[1])}`}\r\n              >\r\n                <PlannedAndDatePointer\r\n                  src={SmallPointer}\r\n                  position={getLocationOnProgressBar(\r\n                    \"plannedenddate-startdate\"\r\n                  )}\r\n                  id=\"plannedenddate\"\r\n                ></PlannedAndDatePointer>\r\n              </Tooltip>\r\n            }\r\n          </>\r\n        )}\r\n      </MainContainerTop>\r\n      <Tooltip title=\"100%\">\r\n        <MainContainerBody medium={props.mediumSize} small={props.smallSize}>\r\n          {\r\n            <>\r\n              <MainContainerGrayArea\r\n                width={\r\n                  getLocationOnProgressBar(\"Isexpired\")\r\n                    ? getLocationOnProgressBar(\"widthofGray\") + 1\r\n                    : getLocationOnProgressBar(\"widthofGray\")\r\n                }\r\n              >\r\n                <Tooltip\r\n                  title={`${Math.round(getLocationOnProgressBar(\"GrayLine\"))}%`}\r\n                >\r\n                  <FirstLine\r\n                    width={getLocationOnProgressBar(\"GrayLine\")}\r\n                  ></FirstLine>\r\n                </Tooltip>\r\n                <Tooltip title={`${getLocationOnProgressBar(\"YellowLine\")}%`}>\r\n                  <SecondLine\r\n                    width={Math.round(getLocationOnProgressBar(\"YellowLine\"))}\r\n                  ></SecondLine>\r\n                </Tooltip>\r\n              </MainContainerGrayArea>\r\n            </>\r\n          }\r\n        </MainContainerBody>\r\n      </Tooltip>\r\n      {!props.smallSize && (\r\n        <>\r\n          <MainContainerBottom>\r\n            {calculateMilestonesPositioning(\r\n              props.milestones,\r\n              props.value[5],\r\n              getLocationOnProgressBar(\"FullWidth\"),\r\n              getLocationOnProgressBar(\"Isexpired\"),\r\n              getLocationOnProgressBar(\"widthofGray\"),\r\n              getLocationOnProgressBar(\"enddate-startdate\")\r\n            ).map((elm, index) => {\r\n              return (\r\n                <Tooltip title={`Milestone ${index + 1}`}>\r\n                  <MilestonesIcon\r\n                    position={elm > 99 ? elm - 2 : elm}\r\n                    src={MilestonePointer}\r\n                  ></MilestonesIcon>\r\n                </Tooltip>\r\n              )\r\n            })}\r\n          </MainContainerBottom>\r\n        </>\r\n      )}\r\n    </TopHeaderStatusBarContainer>\r\n  )\r\n}\r\n\r\nexport default LinearProgressBar\r\n","export default __webpack_public_path__ + \"static/media/clock.2e3e9123.svg\";","export default __webpack_public_path__ + \"static/media/threedot.cb90edd3.svg\";","import UserLogo from \"../../static/svgicon/userDefault.svg\"\r\nimport IfLogo from \"../../static/svgicon/iflogo.svg\"\r\nimport StatusBarIcon from \"../../static/svgicon/statusbar.svg\"\r\nimport SearchButtonSvg from \"../../static/svgicon/searchbutton.svg\"\r\nimport MilestoneTabSvg from \"../../static/svgicon/milestonetab.svg\"\r\nimport AddIcon from \"../../static/svgicon/addicon.svg\"\r\nimport EditForm from \"../forms/editprojectnameform\"\r\nimport DatePickerForm from \"../forms/datepickerForm\"\r\nimport DescriptionBoxTextArea from \"../forms/descriptionProjectForm\"\r\nimport ClockIcon from \"../../static/svgicon/clock.svg\"\r\nimport threeDotImage from \"../../static/svgicon/threedot.svg\"\r\nimport BıgProgressIcon from \"../../static/svgicon/bigprogressicon.svg\"\r\nimport {\r\n  MilestonesWrapper,\r\n  MilestonesBodyRoot,\r\n  MilestonesDateContentRoot,\r\n  MilestoneDateContentContanier,\r\n  MilestoneDateContentLabel,\r\n  MilestoneLeftSide,\r\n  MilestoneGoalStatic,\r\n  MilestoneGoalContent,\r\n  MilestoneDateDataContent,\r\n  MilestoneStatusBarsContentContainer,\r\n  MilestoneEndThreeDotContainer,\r\n  ClockIconContainer,\r\n  MilestoneEndThreeDotImage,\r\n  MilestoneGoalStaticsContainer,\r\n  ClockIconImage,\r\n  MilestoneStatusBarContentItems\r\n} from \"../ui/ConstantUi\"\r\nimport CircleProgressContent from \"../ui/CircleProgressContent\"\r\nimport {\r\n  backendDateConverter,\r\n  ConvertDateFormat,\r\n  PercentageConvertation,\r\n  truncate,\r\n  frontendDatePlus\r\n} from \"../../functions/cleaningData\"\r\nimport LinearProgressBar from \"../ui/LinearProgressBar\"\r\nimport React from \"react\"\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\nimport axios from \"../../functions/axios\"\r\nimport { zIndex } from \"material-ui/styles\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { getTotals } from \"../../functions/process\"\r\nimport { UpdateSingleProjectOrMilestoneUpdate } from \"../redux/project/projectActions\"\r\n\r\ninterface DragComponentProps {\r\n  goalachiveng: number\r\n  value: any\r\n  milestones: any\r\n  editTab: (target) => void\r\n  getMilestoneData: (activeMilestione: any[]) => void\r\n  isEditTabOpened: boolean\r\n  DraggerRef: any\r\n  callbackFunction: any\r\n  selectedTab: string | any\r\n  scrollPosition: any\r\n}\r\ninterface DragWrapperComponent {\r\n  id: any\r\n  goal: any\r\n  duration: any\r\n  index: any\r\n  relativeProgress: any\r\n  startDate: any\r\n  dueDate: any\r\n  progress: any\r\n  editTab: any\r\n  getMilestoneData: any\r\n  isEditTabOpened: any\r\n  goalachiveng: any\r\n  milestones: any\r\n  value: any\r\n  progressoftime: any\r\n  style?: React.CSSProperties\r\n}\r\nconst DragComponent: React.FC<DragComponentProps> = props => {\r\n  const [characters, updateCharacters] = React.useState(props.milestones)\r\n  const DraggableRef = React.useRef<any>(null)\r\n  const dispatch = useDispatch()\r\n  // React.useEffect(() => {\r\n  //   console.log(props.data)\r\n  // }, [])\r\n\r\n  function handleOnDragEnd(result: any) {\r\n    if (!result.destination) return\r\n    const items = Array.from(characters)\r\n    const items2 = Array.from(characters)\r\n\r\n    const [reorderedItem]: any[] = items.splice(result.source.index, 1)\r\n\r\n    items.splice(result.destination.index, 0, reorderedItem)\r\n\r\n    updateCharacters(items)\r\n    orderHandle(items, items2)\r\n  }\r\n  const orderHandle = async (newarray: any[], oldarray: any[]) => {\r\n    let arr: any = oldarray\r\n    oldarray.forEach((olditem, index) => {\r\n      if (newarray[index].startDate !== oldarray[index].startDate) {\r\n        if (index == 0) {\r\n          arr[index] = {\r\n            id: newarray[index].id,\r\n            startDate: backendDateConverter(props.value[5]),\r\n            dueDate: frontendDatePlus(props.value[5], newarray[index].duration),\r\n            goal: newarray[index].goal\r\n          }\r\n        } else {\r\n          arr[index] = {\r\n            id: newarray[index].id,\r\n            startDate: arr[index - 1].dueDate,\r\n            dueDate: frontendDatePlus(\r\n              arr[index - 1].dueDate,\r\n              newarray[index].duration\r\n            )\r\n          }\r\n        }\r\n      } else {\r\n        if (index == 0) {\r\n          arr[index] = {\r\n            id: oldarray[index].id,\r\n            startDate: backendDateConverter(oldarray[index].startDate),\r\n            dueDate: backendDateConverter(oldarray[index].dueDate)\r\n          }\r\n        } else {\r\n          arr[index] = {\r\n            id: oldarray[index].id,\r\n            startDate: backendDateConverter(arr[index - 1].dueDate),\r\n            dueDate: frontendDatePlus(\r\n              arr[index - 1].dueDate,\r\n              newarray[index].duration\r\n            )\r\n          }\r\n        }\r\n      }\r\n    })\r\n    let promises: any[] = []\r\n    arr.map((result, index) => {\r\n      promises.push(() =>\r\n        dispatch(\r\n          UpdateSingleProjectOrMilestoneUpdate(\r\n            result.id,\r\n            [{ startDate: result.startDate, dueDate: result.dueDate }],\r\n            true\r\n          )\r\n        )\r\n      )\r\n    })\r\n    await Promise.all(promises.map(promise => promise())).then(responses =>\r\n      getTotals(props.value[7])\r\n    )\r\n\r\n    // const checkthisone = oldarray.map((olditem, index) => {\r\n    //   console.log(\"just olds\", olditem.startDate)\r\n    //   newarray.map((newitem: any, index) => {\r\n    //     console.log(newitem.startDate, olditem.startDate)\r\n    //     if (olditem.startDate !== newitem.startDate) {\r\n    //       console.log(\"this is changed\", newitem.goal, newitem.id)\r\n    //       return arr.push(newitem)\r\n    //     }\r\n    //   })\r\n    //   return arr\r\n    // })\r\n\r\n    // var arr = newarray\r\n\r\n    // newarray.forEach(function (item, index) {\r\n    //   arr[index] = {\r\n    //     id: item.id,\r\n    //     position: index,\r\n    //     goal: item.goal\r\n    //   }\r\n    // })\r\n    // arr.map(async (readytosendeddata, index) => {\r\n    //   console.log(\r\n    //     \"id\",\r\n    //     readytosendeddata.id,\r\n    //     \"position\",\r\n    //     readytosendeddata.position\r\n    //   )\r\n    //   await axios\r\n    //     .put(`project/detail/milestones/${readytosendeddata.id}`, {\r\n    //       position: readytosendeddata.position\r\n    //     })\r\n    //     .then(res => console.log(res.data))\r\n    // })\r\n\r\n    // const checkitout = oldarray.forEach(\r\n    //   elm => (elm.startDate = newarray.map(newelm => newelm.startDate))\r\n    // )\r\n    // console.log(\"checkher\", checkitout)\r\n\r\n    // await axios\r\n    //   .put(`project/detail/milestones/${props.milestoneid}`, {\r\n    //     goal:\r\n    //       activeProjectName.charAt(0).toUpperCase() + activeProjectName.slice(1)\r\n    //   })\r\n    //   .then(res => {\r\n    //     props.callbackFunction()\r\n    //   })\r\n    //   .catch(err => prompt(err))\r\n  }\r\n  let letdefaultopen = false\r\n\r\n  const iseditTabCallbackFunction = React.useCallback(() => {\r\n    if (props.isEditTabOpened) {\r\n      let getSelected = document.getElementById(props.selectedTab)\r\n      getSelected!.style.border = \"3px solid rgba(228, 220, 0, 1)\"\r\n      document\r\n        .getElementsByClassName(\"characters\")[0]\r\n        .scrollTo(0, props.scrollPosition)\r\n    } else {\r\n      if (props.selectedTab) {\r\n        let getSelected = document.getElementById(props.selectedTab)\r\n        getSelected!.style.border = \" \"\r\n      }\r\n      document\r\n        .getElementsByClassName(\"characters\")[0]\r\n        .scrollTo(0, props.scrollPosition)\r\n    }\r\n  }, [props.isEditTabOpened])\r\n\r\n  React.useEffect(() => {\r\n    iseditTabCallbackFunction()\r\n  }, [])\r\n\r\n  const WrapperComponent: React.FC<DragWrapperComponent> = ({\r\n    id,\r\n    goal,\r\n    duration,\r\n    index,\r\n    relativeProgress,\r\n    startDate,\r\n    dueDate,\r\n    progress,\r\n    editTab,\r\n    getMilestoneData,\r\n    isEditTabOpened,\r\n    goalachiveng,\r\n    milestones,\r\n    value,\r\n    progressoftime,\r\n    style\r\n  }) => {\r\n    const [onMouse, setOnMouse] = React.useState<boolean>(false)\r\n    const onMouseOverWrapper = () => {\r\n      setOnMouse(true)\r\n    }\r\n    const onMouseLeaveWrapper = () => {\r\n      setOnMouse(false)\r\n    }\r\n    return (\r\n      <Draggable key={id} draggableId={id} index={index}>\r\n        {provided => (\r\n          <>\r\n            <MilestonesWrapper\r\n              onMouseEnter={onMouseOverWrapper}\r\n              onMouseLeave={onMouseLeaveWrapper}\r\n              mouseOver={onMouse}\r\n              id={`${\"milestonewrapper\" + id}`}\r\n              onClick={e => {\r\n                props.editTab(e.currentTarget)\r\n\r\n                props.getMilestoneData([\r\n                  {\r\n                    id,\r\n                    goal,\r\n                    duration,\r\n                    startDate: ConvertDateFormat(startDate),\r\n                    dueDate: ConvertDateFormat(dueDate),\r\n                    progress: PercentageConvertation(progress),\r\n                    relativeProgress: PercentageConvertation(relativeProgress)\r\n                  }\r\n                ])\r\n              }}\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              key={id}\r\n            >\r\n              <MilestoneLeftSide>\r\n                <ClockIconContainer>\r\n                  <ClockIconImage src={ClockIcon}></ClockIconImage>\r\n                </ClockIconContainer>\r\n                <MilestoneGoalStaticsContainer>\r\n                  {\" \"}\r\n                  <MilestoneGoalStatic>Goal</MilestoneGoalStatic>\r\n                  <MilestoneGoalContent>\r\n                    {goal\r\n                      ? truncate(goal, 26, 32)\r\n                      : \"Type your milestone goal here...\"}\r\n                  </MilestoneGoalContent>\r\n                </MilestoneGoalStaticsContainer>\r\n              </MilestoneLeftSide>\r\n              <MilestonesDateContentRoot\r\n                isEditTapOpened={props.isEditTabOpened}\r\n              >\r\n                <MilestoneDateContentContanier>\r\n                  <MilestoneDateContentLabel>\r\n                    Start Date\r\n                  </MilestoneDateContentLabel>\r\n                  <MilestoneDateDataContent>\r\n                    {ConvertDateFormat(startDate)}\r\n                  </MilestoneDateDataContent>\r\n                </MilestoneDateContentContanier>\r\n                <MilestoneDateContentContanier>\r\n                  <MilestoneDateContentLabel>\r\n                    End Date\r\n                  </MilestoneDateContentLabel>\r\n                  <MilestoneDateDataContent>\r\n                    {ConvertDateFormat(dueDate)}\r\n                  </MilestoneDateDataContent>\r\n                </MilestoneDateContentContanier>\r\n                {!props.isEditTabOpened && (\r\n                  <MilestoneDateContentContanier>\r\n                    <MilestoneDateContentLabel>\r\n                      Duration\r\n                    </MilestoneDateContentLabel>\r\n                    <MilestoneDateDataContent>\r\n                      {duration}\r\n                    </MilestoneDateDataContent>\r\n                  </MilestoneDateContentContanier>\r\n                )}\r\n              </MilestonesDateContentRoot>\r\n              {!props.isEditTabOpened && (\r\n                <>\r\n                  <MilestoneStatusBarsContentContainer>\r\n                    <CircleProgressContent\r\n                      progressvalue={goalachiveng}\r\n                      smallSize\r\n                    ></CircleProgressContent>\r\n                    <div style={{ display: \"flex\", width: \"50%\" }}>\r\n                      <LinearProgressBar\r\n                        milestones={props.milestones}\r\n                        milestoneprogressOfTime={progressoftime}\r\n                        milestoneprogress={progress}\r\n                        milestonestartdate={startDate}\r\n                        milestoneeduedate={dueDate}\r\n                        isMilestoneEditTab\r\n                        value={props.value}\r\n                        smallSize\r\n                      ></LinearProgressBar>\r\n                    </div>\r\n                  </MilestoneStatusBarsContentContainer>\r\n                  <MilestoneEndThreeDotContainer>\r\n                    <MilestoneEndThreeDotImage\r\n                      src={threeDotImage}\r\n                    ></MilestoneEndThreeDotImage>\r\n                  </MilestoneEndThreeDotContainer>\r\n                </>\r\n              )}\r\n            </MilestonesWrapper>\r\n          </>\r\n        )}\r\n      </Draggable>\r\n    )\r\n  }\r\n  return (\r\n    <DragDropContext onDragEnd={handleOnDragEnd}>\r\n      <Droppable droppableId=\"characters\">\r\n        {provided => (\r\n          <MilestonesBodyRoot\r\n            className=\"characters\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {characters.map(\r\n              (\r\n                {\r\n                  id,\r\n                  duration,\r\n                  progress,\r\n                  relativeProgress,\r\n                  startDate,\r\n                  dueDate,\r\n                  is_main_project,\r\n                  goal,\r\n                  goalAchievingProbability,\r\n                  progressOfTime\r\n                },\r\n                index: number\r\n              ) => {\r\n                return (\r\n                  <WrapperComponent\r\n                    id={id}\r\n                    dueDate={dueDate}\r\n                    progress={progress}\r\n                    relativeProgress={relativeProgress}\r\n                    duration={duration}\r\n                    startDate={startDate}\r\n                    goal={goal}\r\n                    editTab={props.editTab}\r\n                    index={index}\r\n                    progressoftime={progressOfTime}\r\n                    getMilestoneData={props.getMilestoneData}\r\n                    goalachiveng={goalAchievingProbability}\r\n                    isEditTabOpened={props.isEditTabOpened}\r\n                    milestones={props.milestones}\r\n                    value={props.value}\r\n                    key={id}\r\n                  ></WrapperComponent>\r\n                )\r\n              }\r\n            )}\r\n            {provided.placeholder}\r\n          </MilestonesBodyRoot>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  )\r\n}\r\n\r\nexport default DragComponent\r\n","import { TextField, Typography } from \"@material-ui/core\"\r\nimport React, { Component } from \"react\"\r\nimport { inherits } from \"util\"\r\nimport axios from \"../../functions/axios\"\r\nimport { SubmitButton } from \"./editprojectnameform\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport { useStyles } from \"@material-ui/pickers/views/Calendar/Day\"\r\nimport { durationUpdate, getTotals } from \"../../functions/process\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../redux/project/projectReducer\"\r\nexport interface DurationFormProps {\r\n  defaultValue: number\r\n  milestoneid: string\r\n  callbackFunction?: any\r\n  milestones: any\r\n  projectid: any\r\n}\r\n\r\n// import { withStyles } from \"@material-ui/core/styles\"\r\n\r\n// const styles = theme => ({\r\n//   number: {\r\n//     \"& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button\": {\r\n//       \"-webkit-appearance\": \"none\",\r\n//       margin: 0\r\n//     }\r\n//   },\r\n//   input: {\r\n//     \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\r\n//       \"-webkit-appearance\": \"none\",\r\n//       margin: 0\r\n//     }\r\n//   }\r\n// })\r\nconst DurationForm: React.FC<DurationFormProps> = props => {\r\n  const dispatch = useDispatch()\r\n  const project: any = useSelector((state: RootState) =>\r\n    state.projects.find(project => project.id == props.projectid)\r\n  )\r\n  const plannedEndDate = project.plannedEndDate\r\n  const handleDurationEdit = async e => {\r\n    e.preventDefault()\r\n    await durationUpdate(\r\n      Number(activeProjectName),\r\n      props.callbackFunction,\r\n      props.milestoneid,\r\n      props.milestones,\r\n      props.projectid,\r\n      plannedEndDate\r\n    )\r\n    // await store.dispatch(getTotalUpdateForMilestone(props.projectid))\r\n    // dispatch(getTotalUpdateForMilestone())\r\n    // await getTotals(props.projectid, props.callbackFunction)\r\n  }\r\n  const [isFocus, setisFocus] = React.useState<boolean>(false)\r\n  const SubmitButtonRef = React.useRef<React.MutableRefObject<any> | any>()\r\n  const [activeProjectName, setActiveProjectName] = React.useState(\"\")\r\n\r\n  const editformref = React.useRef<React.MutableRefObject<any> | any>()\r\n\r\n  return (\r\n    <>\r\n      <form ref={editformref} onSubmit={handleDurationEdit}>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <TextField\r\n            style={{ width: \"30%\" }}\r\n            onFocus={() => {\r\n              setisFocus(true)\r\n            }}\r\n            onChange={e => {\r\n              setActiveProjectName(e.currentTarget.value)\r\n            }}\r\n            onBlur={() => {\r\n              setisFocus(false)\r\n\r\n              SubmitButtonRef.current.click()\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            InputProps={{\r\n              disableUnderline: true,\r\n              style: {\r\n                color: \"inherit\",\r\n                fontSize: \"inherit\",\r\n                fontStyle: \"inherit\",\r\n                fontWeight: \"inherit\",\r\n                lineHeight: \"inherit\",\r\n                letterSpacing: \"inherit\",\r\n                textAlign: \"center\"\r\n              }\r\n            }}\r\n            variant=\"filled\"\r\n            type=\"number\"\r\n            inputProps={{\r\n              style: { padding: 0, textAlign: \"right\" },\r\n              min: 1,\r\n              inputMode: \"numeric\"\r\n            }}\r\n            defaultValue={props.defaultValue}\r\n          >\r\n            {\" \"}\r\n          </TextField>\r\n          <SubmitButton\r\n            ref={SubmitButtonRef}\r\n            disabled={!activeProjectName}\r\n            type=\"submit\"\r\n          ></SubmitButton>\r\n          <Typography style={{ marginLeft: \"5px\" }}>\r\n            {props.defaultValue > 1 ? \"Days\" : \"Day\"}\r\n          </Typography>\r\n        </div>\r\n      </form>\r\n\r\n      <span\r\n        style={{\r\n          display: \"flex;\",\r\n          boxSizing: \"border-box\",\r\n          fill: \"rgba(240, 240, 255, 1)\",\r\n          maxHeight: \"1px\",\r\n          minHeight: \"1px\",\r\n          borderRadius: \"5px\",\r\n          width: \"30%\",\r\n          backgroundColor: \" rgba(240, 240, 255, 1)\"\r\n        }}\r\n      ></span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DurationForm\r\n","import { TextField, Typography } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport { SubmitButton } from \"./editprojectnameform\"\r\nimport {\r\n  Convertpercentageforbackend,\r\n  PercentageConvertation\r\n} from \"../../functions/cleaningData\"\r\nimport {\r\n  calculateGoalAchievingProbability,\r\n  getTotals\r\n} from \"../../functions/process\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { UpdateSingleProjectOrMilestoneUpdate } from \"../redux/project/projectActions\"\r\nexport interface ProgressFormProps {\r\n  defaultValue: number\r\n  milestoneid: string\r\n  callbackFunction?: any\r\n  projectid: any\r\n}\r\n\r\n// import { withStyles } from \"@material-ui/core/styles\"\r\n\r\n// const styles = theme => ({\r\n//   number: {\r\n//     \"& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button\": {\r\n//       \"-webkit-appearance\": \"none\",\r\n//       margin: 0\r\n//     }\r\n//   },\r\n//   input: {\r\n//     \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\r\n//       \"-webkit-appearance\": \"none\",\r\n//       margin: 0\r\n//     }\r\n//   }\r\n// })\r\nconst ProgressForm: React.FC<ProgressFormProps> = props => {\r\n  const dispatch = useDispatch()\r\n  const handleDurationEdit = async e => {\r\n    // console.log(\r\n    //   \"heyooo\",\r\n    //   props.milestoneid,\r\n    //   activeProjectName,\r\n    //   Convertpercentageforbackend(activeProjectName)\r\n    // )\r\n    e.preventDefault()\r\n    const promises: any = []\r\n    promises.push(\r\n      dispatch(\r\n        UpdateSingleProjectOrMilestoneUpdate(\r\n          props.milestoneid,\r\n          [{ progress: Convertpercentageforbackend(activeProjectName) }],\r\n          true\r\n        )\r\n      )\r\n    )\r\n    await Promise.all(promises).then(async responses =>\r\n      getTotals(props.projectid)\r\n    )\r\n    // await axios\r\n    //   .put(`project/detail/milestones/${props.milestoneid}`, {\r\n    //     progress:\r\n    //   })\r\n    //   .then(res => {\r\n    //     console.log(`Milestone progress updated${res.data.id}`)\r\n    //   })\r\n    //   .catch(err => prompt(err))\r\n\r\n    // await getTotals(props.projectid, props.callbackFunction)\r\n  }\r\n  const [isFocus, setisFocus] = React.useState<boolean>(false)\r\n  const SubmitButtonRef = React.useRef<React.MutableRefObject<any> | any>()\r\n  const [activeProjectName, setActiveProjectName] = React.useState(\"\")\r\n\r\n  const editformref = React.useRef<React.MutableRefObject<any> | any>()\r\n\r\n  return (\r\n    <>\r\n      <form ref={editformref} onSubmit={handleDurationEdit}>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <TextField\r\n            style={{ width: \"20%\" }}\r\n            onFocus={() => {\r\n              setisFocus(true)\r\n            }}\r\n            onChange={e => {\r\n              setActiveProjectName(e.currentTarget.value)\r\n            }}\r\n            onBlur={() => {\r\n              setisFocus(false)\r\n\r\n              SubmitButtonRef.current.click()\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            InputProps={{\r\n              disableUnderline: true,\r\n              style: {\r\n                color: \"inherit\",\r\n                fontSize: \"inherit\",\r\n                fontStyle: \"inherit\",\r\n                fontWeight: \"inherit\",\r\n                lineHeight: \"inherit\",\r\n                letterSpacing: \"inherit\",\r\n                textAlign: \"center\"\r\n              }\r\n            }}\r\n            variant=\"filled\"\r\n            type=\"number\"\r\n            inputProps={{\r\n              style: { padding: 0, textAlign: \"right\" },\r\n              min: 0,\r\n              max: 100,\r\n              inputMode: \"numeric\"\r\n            }}\r\n            defaultValue={Math.ceil(PercentageConvertation(props.defaultValue))}\r\n          >\r\n            {\" \"}\r\n          </TextField>\r\n          <SubmitButton\r\n            ref={SubmitButtonRef}\r\n            disabled={!activeProjectName}\r\n            type=\"submit\"\r\n          ></SubmitButton>\r\n          <Typography style={{ marginLeft: \"5px\" }}>%</Typography>\r\n        </div>\r\n      </form>\r\n\r\n      <span\r\n        style={{\r\n          display: \"flex;\",\r\n          boxSizing: \"border-box\",\r\n          fill: \"rgba(240, 240, 255, 1)\",\r\n          maxHeight: \"1px\",\r\n          minHeight: \"1px\",\r\n          borderRadius: \"5px\",\r\n          width: \"20%\",\r\n          backgroundColor: \" rgba(240, 240, 255, 1)\"\r\n        }}\r\n      ></span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProgressForm\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport {\r\n  ConvertDateFormat,\r\n  PercentageConvertation,\r\n  truncate\r\n} from \"../../functions/cleaningData\"\r\nimport DatePickerForm from \"../forms/datepickerForm\"\r\nimport DescriptionBoxTextArea from \"../forms/descriptionProjectForm\"\r\nimport DurationForm from \"../forms/durationForm\"\r\nimport EditForm from \"../forms/editprojectnameform\"\r\nimport ProgressForm from \"../forms/ProgressForm\"\r\nimport CircleProgressContent from \"./CircleProgressContent\"\r\n\r\nimport {\r\n  MilestoneCloseEditTabIcon,\r\n  MilestoneDateContentContanier,\r\n  MilestoneDateContentLabel,\r\n  MilestoneDateDataContent\r\n} from \"./ConstantUi\"\r\nimport LinearProgressBar from \"./LinearProgressBar\"\r\nexport interface MilestoneEditComponentProps {\r\n  isOpened: boolean\r\n  data: any[]\r\n  callbackFunction: () => void\r\n  projectdata: any[]\r\n  goalachivevalue: any\r\n  projectid: any\r\n  milestones: any\r\n}\r\n\r\nconst MilestoneEditContainer = styled.div<{ isOpened: boolean }>`\r\n  display: flex;\r\n  flex-basis: ${p => (p.isOpened ? \"30%\" : \"0%\")};\r\n  min-width: ${p => (p.isOpened ? \"30%\" : \"0%\")};\r\n  max-width: 802px;\r\n  flex-grow: 0;\r\n  margin-left: 2px;\r\n  border-radius: 10px;\r\n  opacity: ${p => (p.isOpened ? \"1\" : \"0\")};\r\n  transition: opacity 5s linear;\r\n  z-index: 999;\r\n  min-height: 100%;\r\n  visibility: ${p => (p.isOpened ? \"visible\" : \"hidden\")};\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\nconst MilestoneEditHeader = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n`\r\nconst MilestoneEditBody = styled.div`\r\n  display: flex;\r\n  height: 40%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\nconst MilestoneEditBottom = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 30%;\r\n`\r\nconst MilestoneEditStatusContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`\r\nconst MilestoneEditCircleProgressContainer = styled.div`\r\n  display: flex;\r\n  flex-basis: 10%;\r\n  min-width: 10%;\r\n`\r\nconst MilestoneEditLinearProgressContanier = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-basis: 80%;\r\n  min-width: 20%;\r\n`\r\nconst MilestoneEditDatasContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 50%;\r\n  justify-content: space-between;\r\n`\r\nconst MilestoneEditDatasTop = styled.div`\r\n  display: flex;\r\n  width: 45%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\nconst MilestoneEditDatasBottom = styled.div`\r\n  display: flex;\r\n  width: 80%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\nconst MilestoneEditDataTopItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40%;\r\n`\r\n\r\nconst MilestoneEditComponent: React.FC<MilestoneEditComponentProps> = props => {\r\n  // React.useEffect(() => {\r\n  //   console.log(\"here\", props.milestones)\r\n  // }, [props.milestones])\r\n  return (\r\n    <MilestoneEditContainer isOpened={props.isOpened}>\r\n      {props.data.map(elm => {\r\n        return (\r\n          <>\r\n            <MilestoneEditHeader>\r\n              <EditForm\r\n                callbackFunction={props.callbackFunction}\r\n                issmall={true}\r\n                defaultValue={elm.goal ? elm.goal : \"\"}\r\n                ismilestoneedit={true}\r\n                milestoneid={elm.id}\r\n              ></EditForm>\r\n            </MilestoneEditHeader>\r\n            <MilestoneEditBody>\r\n              <MilestoneEditStatusContainer>\r\n                <MilestoneEditCircleProgressContainer>\r\n                  <CircleProgressContent\r\n                    smallSize\r\n                    mediumSize={true}\r\n                    progressvalue={elm.goalAchievingProbability}\r\n                  ></CircleProgressContent>\r\n                </MilestoneEditCircleProgressContainer>\r\n                <MilestoneEditLinearProgressContanier>\r\n                  <LinearProgressBar\r\n                    milestoneprogressOfTime={elm.progressOfTime}\r\n                    milestoneprogress={elm.progress}\r\n                    milestonestartdate={elm.startDate}\r\n                    milestoneeduedate={elm.dueDate}\r\n                    value={props.projectdata}\r\n                    isMilestoneEditTab\r\n                    smallSize\r\n                    mediumSize\r\n                  ></LinearProgressBar>\r\n                </MilestoneEditLinearProgressContanier>\r\n              </MilestoneEditStatusContainer>\r\n              <MilestoneEditDatasContainer>\r\n                <MilestoneEditDatasTop>\r\n                  <MilestoneEditDataTopItem>\r\n                    <MilestoneDateContentLabel>\r\n                      Start Date\r\n                    </MilestoneDateContentLabel>\r\n                    <MilestoneDateDataContent>\r\n                      {ConvertDateFormat(elm.startDate)}\r\n                    </MilestoneDateDataContent>\r\n                  </MilestoneEditDataTopItem>\r\n                  <MilestoneEditDataTopItem>\r\n                    <MilestoneDateContentLabel>\r\n                      Duration\r\n                    </MilestoneDateContentLabel>\r\n                    <MilestoneDateDataContent\r\n                      style={{ flexDirection: \"column\" }}\r\n                    >\r\n                      <DurationForm\r\n                        projectid={props.projectid}\r\n                        defaultValue={elm.duration}\r\n                        callbackFunction={props.callbackFunction}\r\n                        milestoneid={elm.id}\r\n                        milestones={props.milestones}\r\n                      ></DurationForm>\r\n                    </MilestoneDateDataContent>\r\n                  </MilestoneEditDataTopItem>\r\n                </MilestoneEditDatasTop>\r\n                <MilestoneEditDatasBottom>\r\n                  <MilestoneEditDataTopItem>\r\n                    <MilestoneDateContentLabel>\r\n                      End Date\r\n                    </MilestoneDateContentLabel>\r\n                    <MilestoneDateDataContent>\r\n                      <DatePickerForm\r\n                        defaultStartData={elm.startDate}\r\n                        defaultPlannedEndData={elm.dueDate}\r\n                        ismilestone\r\n                        callbackFunction={props.callbackFunction}\r\n                        id={elm.id}\r\n                        actualprojectid={props.projectid}\r\n                        milestones={props.milestones}\r\n                      ></DatePickerForm>\r\n                      {/* {ConvertDateFormat(elm.dueDate)} */}\r\n                    </MilestoneDateDataContent>\r\n                  </MilestoneEditDataTopItem>\r\n                  <MilestoneEditDataTopItem>\r\n                    <MilestoneDateContentLabel>\r\n                      Progress\r\n                    </MilestoneDateContentLabel>\r\n                    <MilestoneDateDataContent\r\n                      style={{ flexDirection: \"column\" }}\r\n                    >\r\n                      <ProgressForm\r\n                        callbackFunction={props.callbackFunction}\r\n                        milestoneid={elm.id}\r\n                        defaultValue={elm.progress}\r\n                        projectid={props.projectid}\r\n                      ></ProgressForm>\r\n                    </MilestoneDateDataContent>\r\n                  </MilestoneEditDataTopItem>\r\n                  <MilestoneEditDataTopItem>\r\n                    <MilestoneDateContentLabel>\r\n                      Relative Progress\r\n                    </MilestoneDateContentLabel>\r\n                    <MilestoneDateDataContent>\r\n                      {Math.ceil(PercentageConvertation(elm.relativeProgress))}%\r\n                    </MilestoneDateDataContent>\r\n                  </MilestoneEditDataTopItem>\r\n                </MilestoneEditDatasBottom>\r\n              </MilestoneEditDatasContainer>\r\n              {/* DescriptionBox */}\r\n            </MilestoneEditBody>\r\n            <MilestoneEditBottom>\r\n              <DescriptionBoxTextArea\r\n                typemilestone\r\n                milestoneid={elm.id}\r\n                firstTimeChange={!elm.description ? true : false}\r\n                defaultValue={elm.description ? elm.description : \"\"}\r\n                callbackFunction={props.callbackFunction}\r\n              ></DescriptionBoxTextArea>\r\n            </MilestoneEditBottom>\r\n          </>\r\n        )\r\n      })}\r\n    </MilestoneEditContainer>\r\n  )\r\n}\r\n\r\nexport default MilestoneEditComponent\r\n","import { Typography } from \"@material-ui/core\"\r\nimport styled from \"styled-components\"\r\nimport React from \"react\"\r\nimport {\r\n  ConvertDateFormat,\r\n  PercentageConvertation\r\n} from \"../../functions/cleaningData\"\r\nexport interface SquaredProgressProps {\r\n  goalAchievingValue: number\r\n  width: number\r\n  height: number\r\n  id: string\r\n  gaps: number\r\n  progressValue: number\r\n  getMilestoneData: ([]) => void\r\n  goal: any\r\n  duration: any\r\n  startDate: any\r\n  dueDate: any\r\n  relativeProgress: any\r\n  OpenEditMilestoneTab: (\r\n    target: any,\r\n    isTreeview?: boolean,\r\n    insideTreeView?: boolean\r\n  ) => void\r\n  closeDialog: () => void\r\n}\r\nexport interface SquarredActualProgresProps {\r\n  progressValue: number\r\n  width: number\r\n  height: number\r\n}\r\n\r\nconst SquaredProgressBarOutline = styled.div<{\r\n  width: number\r\n  height: number\r\n  gap: number\r\n  mouseOver: boolean\r\n}>`\r\n  display: flex;\r\n  position: relative;\r\n  margin-right: ${p => p.gap + \"px\"};\r\n  width: ${p => p.width + \"px\"};\r\n  height: ${p => p.height + \"px\"};\r\n  box-sizing: border-box;\r\n  border: ${p =>\r\n    p.mouseOver\r\n      ? \"1px solid rgba(228, 220, 0, 1)\"\r\n      : \"1px solid rgba(196, 196, 196, 1)\"};\r\n  cursor: pointer;\r\n`\r\nconst SquarredProgressBarNumber = styled.p<{\r\n  width: number\r\n  height: number\r\n  fontSize: number\r\n}>`\r\n  margin: 0;\r\n  font-family: Aileron;\r\n  font-size: ${p => p.fontSize + \"px\"};\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  position: absolute;\r\n  left: 3.03%;\r\n  bottom: 2%;\r\n  color: rgba(240, 240, 255, 0.8);\r\n  margin: 0;\r\n  margin-block-start: 0em;\r\n  margin-block-end: 0em;\r\n  margin-inline-start: 0px;\r\n  margin-inline-end: 0px;\r\n`\r\n\r\nconst SquaredProgress: React.FC<SquaredProgressProps> = props => {\r\n  const [isSquarredMouseOver, setIsSquarredMouseOver] = React.useState(false)\r\n  const generateSquaredOutline = (howmanygolden: number, misspart: number) => {\r\n    let i: number\r\n    const parts = [\"bottom\", \"right\", \"top\", \"left\"]\r\n    const result: JSX.Element[] = []\r\n    const acceptedparts: string[] = []\r\n    const flooredhowmnaygoldenbar = Math.floor(howmanygolden)\r\n    for (i = 0; i < flooredhowmnaygoldenbar; i++) {\r\n      acceptedparts.push(parts[i])\r\n      let preparedstyleforborder: any = {}\r\n      if (parts[i] === \"bottom\") {\r\n        preparedstyleforborder = {\r\n          width: \"100.7%\",\r\n          borderBottom: \"5px solid #E4DC00\",\r\n          position: \"absolute\",\r\n          bottom: \"-0.7%\"\r\n        }\r\n      } else if (parts[i] === \"right\") {\r\n        preparedstyleforborder = {\r\n          height: \"100%\",\r\n          borderRight: \"5px solid #E4DC00\",\r\n          position: \"absolute\",\r\n          right: \"-0.7%\"\r\n        }\r\n      } else if (parts[i] == \"top\") {\r\n        preparedstyleforborder = {\r\n          width: \"101%\",\r\n          borderTop: \"5px solid #E4DC00\",\r\n          position: \"absolute\",\r\n          top: \"-0.8%\",\r\n          right: \"-0.7%\"\r\n        }\r\n      } else if (parts[i] == \"left\") {\r\n        preparedstyleforborder = {\r\n          height: \"100.97%\",\r\n          borderLeft: \"5px solid #E4DC00\",\r\n          position: \"absolute\",\r\n          left: \"-0.7%\",\r\n          top: \"-0.7%\"\r\n        }\r\n      }\r\n\r\n      let border = (\r\n        <span id={parts[i]} key={i} style={preparedstyleforborder}></span>\r\n      )\r\n      result.push(border)\r\n    }\r\n\r\n    if (misspart > 0) {\r\n      var x = howmanygolden\r\n      var decimals = x - Math.floor(x)\r\n      var decimalPlaces = x.toString().split(\".\")[1].length\r\n      var tofixed = decimals.toFixed(decimalPlaces)\r\n      var resultnumber = Number(tofixed) * 100 + 5\r\n      let preparedstyleforborder: any = {}\r\n      let fullparts = acceptedparts\r\n      let difference = parts.filter(x => !acceptedparts.includes(x))\r\n\r\n      if (fullparts.length >= 1) {\r\n        if (difference[0] == \"right\") {\r\n          preparedstyleforborder = {\r\n            height: resultnumber + \"%\",\r\n            borderRight: \"5px solid #E4DC00\",\r\n            position: \"absolute\",\r\n            right: \"-0.7%\",\r\n            bottom: \"0\"\r\n          }\r\n        } else if (difference[0] == \"top\") {\r\n          preparedstyleforborder = {\r\n            width: resultnumber + \"%\",\r\n            borderTop: \"5px solid #E4DC00\",\r\n            position: \"absolute\",\r\n            top: \"-0.8%\",\r\n            right: \"-0.7%\"\r\n          }\r\n        } else if (difference[0] == \"left\") {\r\n          preparedstyleforborder = {\r\n            height: resultnumber + \"%\",\r\n            borderLeft: \"5px solid #E4DC00\",\r\n            position: \"absolute\",\r\n            left: \"-0.7%\",\r\n            top: \"-0.7%\"\r\n          }\r\n        }\r\n        let border = (\r\n          <span id={parts[i]} key={i} style={preparedstyleforborder}></span>\r\n        )\r\n        result.push(border)\r\n      } else {\r\n        preparedstyleforborder = {\r\n          width: resultnumber + \"%\",\r\n          borderBottom: \"5px solid #E4DC00\",\r\n          position: \"absolute\",\r\n          bottom: \"-0.7%\"\r\n        }\r\n        let border = (\r\n          <span id={parts[i]} key={i} style={preparedstyleforborder}></span>\r\n        )\r\n        result.push(border)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  const SquaredProgress: React.FC<SquarredActualProgresProps> = subprops => {\r\n    let howmanygolden = subprops.progressValue / 25\r\n    let whatisleft = subprops.progressValue % 25\r\n    const SquarredProgressContent = generateSquaredOutline(\r\n      howmanygolden,\r\n      whatisleft\r\n    )\r\n\r\n    return (\r\n      <>\r\n        {SquarredProgressContent.map((Element: any, index) => {\r\n          return Element\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SquaredProgressBarOutline\r\n        gap={props.gaps}\r\n        width={props.width}\r\n        height={props.height}\r\n        id={props.id}\r\n        mouseOver={isSquarredMouseOver}\r\n        onMouseEnter={() => {\r\n          setIsSquarredMouseOver(true)\r\n        }}\r\n        onMouseLeave={() => {\r\n          setIsSquarredMouseOver(false)\r\n        }}\r\n        onClick={e => {\r\n          e.stopPropagation()\r\n          props.OpenEditMilestoneTab(e.currentTarget, true, true)\r\n          props.getMilestoneData([\r\n            {\r\n              id: props.id,\r\n              goal: props.goal,\r\n              duration: props.duration,\r\n              startDate: ConvertDateFormat(props.startDate),\r\n              dueDate: ConvertDateFormat(props.dueDate),\r\n              progress: props.progressValue,\r\n              relativeProgress: PercentageConvertation(props.relativeProgress)\r\n            }\r\n          ])\r\n          props.closeDialog()\r\n        }}\r\n      >\r\n        <SquarredProgressBarNumber\r\n          fontSize={props.width / 6}\r\n          width={props.width / 4}\r\n          height={props.height / 4}\r\n        >\r\n          {props.goalAchievingValue > 100\r\n            ? \">100\"\r\n            : Math.ceil(props.goalAchievingValue)}\r\n          %\r\n        </SquarredProgressBarNumber>\r\n        <SquaredProgress\r\n          width={props.width}\r\n          height={props.height}\r\n          progressValue={props.progressValue}\r\n        ></SquaredProgress>\r\n      </SquaredProgressBarOutline>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SquaredProgress\r\n","import { Box } from \"@material-ui/core\"\r\nimport SquaredProgress from \"./SquaredProgress\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport {\r\n  PercentageConvertation,\r\n  useContainerDimensions\r\n} from \"../../functions/cleaningData\"\r\nexport interface TreeViewMainContentComponentProps {\r\n  milestones: any[]\r\n  getMilestoneData: ([]) => void\r\n  OpenEditMilestoneTab: (\r\n    target: any,\r\n    isTreeview?: boolean,\r\n    insideTreeView?: boolean\r\n  ) => void\r\n  closeDialog: () => void\r\n}\r\n\r\nconst ProjectArea = styled.div<{ maxheight: any; mouseOver: boolean }>`\r\n  display: flex;\r\n  width: 95%;\r\n  padding: 5px 0 5px 0px;\r\n  max-width: 95%;\r\n  height: auto !important;\r\n  max-height: ${p => p.maxheight + \"px\"};\r\n  border: ${p =>\r\n    p.mouseOver\r\n      ? \"3px solid rgba(228, 220, 0, 1)\"\r\n      : \"3px solid rgba(240, 240, 255, 0.1)\"};\r\n  background: rgba(99, 99, 128, 0.1);\r\n  border-radius: 5px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-self: center;\r\n  cursor: pointer;\r\n`\r\nconst AllMilestonesPlusGaps = styled.div<{\r\n  maxWidth: number\r\n  maxheight?: number\r\n}>`\r\n  height: \"100%\";\r\n  max-height: ${p => p.maxheight + \"px\"};\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: ${p => p.maxWidth + \"px\"} !important;\r\n  align-items: center;\r\n`\r\nconst TreeViewMainContentComponent: React.FC<TreeViewMainContentComponentProps> = props => {\r\n  const [maxWidth, setMaxWidth] = React.useState<number>(95)\r\n  const [\r\n    mouseOverProjectArea,\r\n    setMouseOverProjectArea\r\n  ] = React.useState<boolean>(false)\r\n  const ProjectAreaWidthRef = React.useRef<any>(null)\r\n  const AllMilestonesPlusGapsWidthRef = React.useRef<any>(null)\r\n\r\n  const AllMilestonesPlusGapsWidth = useContainerDimensions(\r\n    AllMilestonesPlusGapsWidthRef\r\n  ).width\r\n  const AllMilestonesPlusGapsHeight = useContainerDimensions(\r\n    AllMilestonesPlusGapsWidthRef\r\n  ).height\r\n\r\n  const widthOfProjectArea = useContainerDimensions(ProjectAreaWidthRef).width\r\n  const heightOfProjectArea = useContainerDimensions(ProjectAreaWidthRef).height\r\n  const SquaredProgressCallBack: any = React.useCallback(() => {\r\n    return (\r\n      <ProjectArea\r\n        mouseOver={mouseOverProjectArea}\r\n        onClick={e => {\r\n          props.OpenEditMilestoneTab(\"NoMilestone\", true, false)\r\n          props.closeDialog()\r\n        }}\r\n        onMouseEnter={() => {\r\n          setMouseOverProjectArea(true)\r\n        }}\r\n        onMouseLeave={() => {\r\n          setMouseOverProjectArea(false)\r\n        }}\r\n        maxheight={\r\n          props.milestones.length == 1\r\n            ? \"fit-content\"\r\n            : ((widthOfProjectArea * 0.95 * 0.9) / props.milestones.length) *\r\n              1.2\r\n        }\r\n        ref={ProjectAreaWidthRef}\r\n        id=\"projectareaWidth\"\r\n      >\r\n        <AllMilestonesPlusGaps\r\n          id=\"allmilestoneswithgaps\"\r\n          maxheight={\r\n            (widthOfProjectArea * 0.95 * 0.9) / props.milestones.length\r\n          }\r\n          ref={AllMilestonesPlusGapsWidthRef}\r\n          maxWidth={widthOfProjectArea * 0.95}\r\n        >\r\n          {props.milestones.map((elm, index) => {\r\n            return (\r\n              <SquaredProgress\r\n                OpenEditMilestoneTab={props.OpenEditMilestoneTab}\r\n                closeDialog={props.closeDialog}\r\n                getMilestoneData={props.getMilestoneData}\r\n                progressValue={PercentageConvertation(elm.progress)}\r\n                id={elm.id}\r\n                goal={elm.goal}\r\n                duration={elm.duration}\r\n                startDate={elm.startDate}\r\n                dueDate={elm.dueDate}\r\n                relativeProgress={elm.relativeProgress}\r\n                goalAchievingValue={PercentageConvertation(\r\n                  elm.goalAchievingProbability\r\n                )}\r\n                gaps={\r\n                  props.milestones.length === 1\r\n                    ? 0\r\n                    : props.milestones[props.milestones.length - 1] ===\r\n                      props.milestones[index]\r\n                    ? 0\r\n                    : (widthOfProjectArea * 0.95 * 0.1) /\r\n                        props.milestones.length +\r\n                      1\r\n                }\r\n                width={\r\n                  props.milestones.length < 3\r\n                    ? 500\r\n                    : (widthOfProjectArea * 0.95 * 0.9) /\r\n                      props.milestones.length\r\n                }\r\n                height={\r\n                  props.milestones.length < 3\r\n                    ? 500\r\n                    : (widthOfProjectArea * 0.95 * 0.9) /\r\n                      props.milestones.length\r\n                }\r\n              ></SquaredProgress>\r\n            )\r\n          })}{\" \"}\r\n        </AllMilestonesPlusGaps>\r\n      </ProjectArea>\r\n    )\r\n  }, [\r\n    widthOfProjectArea,\r\n    heightOfProjectArea,\r\n    AllMilestonesPlusGapsWidth,\r\n    AllMilestonesPlusGapsHeight,\r\n    mouseOverProjectArea\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      <SquaredProgressCallBack></SquaredProgressCallBack>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TreeViewMainContentComponent\r\n","import React from \"react\"\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Typography\r\n} from \"@material-ui/core\"\r\nimport createTypography from \"@material-ui/core/styles/createTypography\"\r\nimport CircleProgressContent from \"./CircleProgressContent\"\r\nimport SquaredProgress from \"./SquaredProgress\"\r\nimport { ProjectGoalText } from \"./ConstantUi\"\r\nimport { ProjectGoalLabel } from \"../forms/editprojectnameform\"\r\nimport TreeViewMainContentComponent from \"./TreeViewsMainContent\"\r\ninterface TreeViewComponentProps {\r\n  open: boolean\r\n  milestones: []\r\n  projectname: string\r\n  projectgoalachieveng: number\r\n  close: () => void\r\n  getMilestoneData: ([]) => void\r\n  OpenEditMilestoneTab: (\r\n    target: any,\r\n    isTreeview?: boolean,\r\n    insideTreeView?: boolean\r\n  ) => void\r\n}\r\n\r\nconst TreeViewComponent: React.FC<TreeViewComponentProps> = props => {\r\n  const useStyles = makeStyles(() => ({\r\n    paper: {\r\n      background: \"rgba(50, 50, 77, 0.95)\",\r\n      overflowX: \"hidden\",\r\n      margin: \"0\",\r\n      padding: \"0\"\r\n    }\r\n  }))\r\n\r\n  const classes = useStyles()\r\n  const TreeViewComponentContent = React.useCallback(() => {\r\n    return (\r\n      <Dialog\r\n        classes={{ paper: classes.paper }}\r\n        maxWidth={false}\r\n        open={props.open}\r\n        fullWidth={true}\r\n        onClose={() => {\r\n          props.close()\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: \"100vh\",\r\n            padding: \"50px 69px 0px 69px\"\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              height: \"100%\",\r\n              maxHeight: \"65%\",\r\n              position: \"relative\"\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                flexDirection: \"row\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                paddingBottom: \"2%\"\r\n              }}\r\n            >\r\n              <CircleProgressContent\r\n                smallSize\r\n                treeView\r\n                mediumSize\r\n                progressvalue={props.projectgoalachieveng}\r\n              ></CircleProgressContent>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  marginLeft: \"42px\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                <ProjectGoalLabel style={{ top: \"0px\" }}>\r\n                  Project Goal\r\n                </ProjectGoalLabel>\r\n                <ProjectGoalText>{props.projectname}</ProjectGoalText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                position: \"relative\",\r\n                top: props.milestones.length < 3 ? \"10%\" : \"40%\"\r\n              }}\r\n            >\r\n              <TreeViewMainContentComponent\r\n                getMilestoneData={props.getMilestoneData}\r\n                OpenEditMilestoneTab={props.OpenEditMilestoneTab}\r\n                milestones={props.milestones}\r\n                closeDialog={props.close}\r\n              ></TreeViewMainContentComponent>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    )\r\n  }, [props.open])\r\n\r\n  return (\r\n    <>\r\n      <TreeViewComponentContent></TreeViewComponentContent>\r\n    </>\r\n  )\r\n}\r\nexport default TreeViewComponent\r\n","import React from \"react\"\r\nimport axios from \"../../functions/axios\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport UserLogo from \"../../static/svgicon/userDefault.svg\"\r\nimport IfLogo from \"../../static/svgicon/iflogo.svg\"\r\nimport StatusBarIcon from \"../../static/svgicon/statusbar.svg\"\r\nimport SearchButtonSvg from \"../../static/svgicon/searchbutton.svg\"\r\nimport MilestoneTabSvg from \"../../static/svgicon/milestonetab.svg\"\r\nimport AddIcon from \"../../static/svgicon/addicon.svg\"\r\nimport EditForm from \"../forms/editprojectnameform\"\r\nimport DatePickerForm from \"../forms/datepickerForm\"\r\nimport DescriptionBoxTextArea from \"../forms/descriptionProjectForm\"\r\nimport ClockIcon from \"../../static/svgicon/clock.svg\"\r\nimport threeDotImage from \"../../static/svgicon/threedot.svg\"\r\nimport BıgProgressIcon from \"../../static/svgicon/bigprogressicon.svg\"\r\nimport CloseMilestonEditTabIcon from \"../../static/svgicon/closemilestonetab.svg\"\r\nimport TreeViewSvgIcon from \"../../static/svgicon/treeviewlogo.svg\"\r\n\r\nimport {\r\n  ControlPanel,\r\n  ControlPanelItemsContainer,\r\n  DetailContent,\r\n  DetailContentContainer,\r\n  LeaftAsideContent2Image,\r\n  LeftAside,\r\n  LeftAsideContent2,\r\n  LeftAsideContent2TextBox,\r\n  LeftAsideContentBox,\r\n  LeftAsideUserContent,\r\n  MilestoneTabIcon,\r\n  ProjectDetailsContainer,\r\n  ProjectNameInputContainer,\r\n  TopHeader,\r\n  TopHeaderLeft,\r\n  TopHeaderLeftBıgProgressIcon,\r\n  TopHeaderRight,\r\n  TopHeaderStatusBar,\r\n  TopHeaderStatusBarContainer,\r\n  TopHeaderTitleBox,\r\n  UserLogoImage,\r\n  UserNameContainer,\r\n  MilestonesHeader,\r\n  MilestoneHeaderText,\r\n  MilestoneHeaderHintText,\r\n  MilestoneAddButtonIcon,\r\n  MilestoneAddButtonContainer,\r\n  MilestonesWrapper,\r\n  MilestonesBodyRoot,\r\n  MilestonesDateContentRoot,\r\n  MilestoneDateContentContanier,\r\n  MilestoneDateContentLabel,\r\n  MilestoneLeftSide,\r\n  MilestoneGoalStatic,\r\n  MilestoneGoalContent,\r\n  MilestoneDateDataContent,\r\n  MilestoneStatusBarsContentContainer,\r\n  MilestoneEndThreeDotContainer,\r\n  ClockIconContainer,\r\n  MilestoneEndThreeDotImage,\r\n  MilestoneGoalStaticsContainer,\r\n  ClockIconImage,\r\n  MilestoneStatusBarContentItems,\r\n  MilestoneSearchTabIcon,\r\n  DetailMilestonesRoot,\r\n  DetailMilestoneContainer,\r\n  Detail2,\r\n  MilestoneCloseEditTabIcon,\r\n  MilestoneTreeViewIcon\r\n} from \"../ui/ConstantUi\"\r\nimport CircleProgressContent from \"../ui/CircleProgressContent\"\r\nimport { ConvertDateFormat, dateDifference } from \"../../functions/cleaningData\"\r\nimport LinearProgressBar from \"../ui/LinearProgressBar\"\r\nimport DragComponent from \"../ui/Draggable\"\r\nimport MilestoneEditComponent from \"../ui/MilestoneEdit\"\r\nimport { AnySoaRecord } from \"dns\"\r\nimport TreeViewComponent from \"../ui/TreeViewComponent\"\r\nimport { RootState } from \"../redux/project/projectReducer\"\r\nimport { CircularProgress } from \"@material-ui/core\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n  createProjectMilestoneMiddleWare,\r\n  UpdateSingleProjectOrMilestoneUpdate\r\n} from \"../redux/project/projectActions\"\r\nimport { getTotals } from \"../../functions/process\"\r\nexport interface ProjectDetailPageProps {\r\n  id: any\r\n}\r\n\r\ntype Props = RouteComponentProps & ProjectDetailPageProps\r\nconst ProjectDetailPage: React.FC<Props> = props => {\r\n  const [data, setData] = React.useState<any[] | null>()\r\n  const dispatch = useDispatch()\r\n  const [milestonesTab, setMilestonesTab] = React.useState<boolean>(false)\r\n  const [milestoneEditTab, setMilestoneEditTab] = React.useState<boolean>(false)\r\n  const [activeMilestoneData, setActiveMilestoneData] = React.useState<any[]>(\r\n    []\r\n  )\r\n  const [\r\n    isCreatingNewMilestones,\r\n    setisCreatingNewMilestones\r\n  ] = React.useState<boolean>(false)\r\n  const [TreeViewOpened, setTreeViewOpened] = React.useState<boolean>(false)\r\n  const [selectedTab, setSelectedTab] = React.useState<string | undefined>()\r\n  const [scrollPosition, setScrollPosition] = React.useState<any>()\r\n\r\n  let DraggerRef = React.useRef<React.MutableRefObject<any> | any>()\r\n  const ChangeDraggerRef = dom => {\r\n    DraggerRef = dom\r\n  }\r\n  const state = props.match.params\r\n  const id = (state as any)?.id\r\n  const project = useSelector((state: RootState) =>\r\n    state.projects.filter(project => project.id == id)\r\n  )\r\n  const projectraw = useSelector((state: RootState) =>\r\n    state.projects.find(project => project.id == id)\r\n  )\r\n  const plannedEndDate = projectraw?.plannedEndDate\r\n\r\n  const endDate = projectraw?.endDate\r\n  // console.log(endDate, \"endDate\")\r\n  const loading = useSelector((state: RootState) => state.loading)\r\n\r\n  console.log(\"PROJECTS\", project)\r\n  const getdata = () => {\r\n    setisCreatingNewMilestones(false)\r\n  }\r\n\r\n  const OpenEditMilestoneTab = (\r\n    target?: any,\r\n    isTreeview?: boolean,\r\n    insideTreeView?: boolean\r\n  ) => {\r\n    if (isTreeview && insideTreeView) {\r\n      let topposition = 0\r\n      let toppositionıofparent = 0\r\n      const getWrapperElement = document.getElementById(\r\n        `${\"milestonewrapper\" + target.id}`\r\n      )\r\n\r\n      if (getWrapperElement instanceof HTMLElement) {\r\n        topposition = getWrapperElement.offsetTop\r\n      }\r\n      const getdraggableDOm = document.getElementsByClassName(\"characters\")[0]\r\n      if (getdraggableDOm instanceof HTMLElement) {\r\n        toppositionıofparent = getdraggableDOm.offsetTop\r\n      }\r\n\r\n      setScrollPosition(topposition - toppositionıofparent)\r\n      setSelectedTab(`${\"milestonewrapper\" + target.id}`)\r\n      setMilestoneEditTab(true)\r\n      setMilestonesTab(true)\r\n    } else if (isTreeview && !insideTreeView) {\r\n      setMilestoneEditTab(false)\r\n      setMilestonesTab(false)\r\n    } else {\r\n      let topposition = 0\r\n      let toppositionıofparent = 0\r\n      const getWrapperElement = document.getElementById(target.id)\r\n\r\n      if (getWrapperElement instanceof HTMLElement) {\r\n        topposition = getWrapperElement.offsetTop\r\n      }\r\n      const getdraggableDOm = document.getElementsByClassName(\"characters\")[0]\r\n      if (getdraggableDOm instanceof HTMLElement) {\r\n        toppositionıofparent = getdraggableDOm.offsetTop\r\n      }\r\n\r\n      setScrollPosition(topposition - toppositionıofparent)\r\n\r\n      // setScrollPosition()\r\n      setSelectedTab(target.id)\r\n      setMilestoneEditTab(true)\r\n    }\r\n  }\r\n  const getMilestoneDataInfo = (activeMilestione: any[]) => {\r\n    setActiveMilestoneData(activeMilestione)\r\n  }\r\n  // React.useEffect(() => {\r\n  //   console.log(\"All Data\", data)\r\n  // }, [data])\r\n  // React.useState(()=>{\r\n  //   if activeMilestoneData.length>1{\r\n\r\n  //   }\r\n\r\n  // },[activeMilestoneData])\r\n  const CloseTreeView = () => {\r\n    setTreeViewOpened(false)\r\n  }\r\n  const ProjectDetailContent: any = React.useCallback(() => {\r\n    return project?.map((elm, index) => (\r\n      <>\r\n        <MilestoneTreeViewIcon\r\n          onClick={() => {\r\n            setTreeViewOpened(true)\r\n          }}\r\n          src={TreeViewSvgIcon}\r\n          color={TreeViewOpened ? \"rgb(228, 220, 0)\" : \"\"}\r\n        ></MilestoneTreeViewIcon>\r\n\r\n        <TreeViewComponent\r\n          getMilestoneData={getMilestoneDataInfo}\r\n          milestones={elm.milestones}\r\n          OpenEditMilestoneTab={OpenEditMilestoneTab}\r\n          projectname={elm.goal}\r\n          projectgoalachieveng={elm.goalAchievingProbability}\r\n          close={CloseTreeView}\r\n          open={TreeViewOpened}\r\n        ></TreeViewComponent>\r\n        <ProjectDetailsContainer ismilestoneedit={milestoneEditTab} key={index}>\r\n          <LeftAside>\r\n            <LeftAsideContentBox>\r\n              {\" \"}\r\n              <LeftAsideUserContent>\r\n                {\" \"}\r\n                <UserLogoImage src={UserLogo}></UserLogoImage>\r\n                <UserNameContainer>{elm.user}</UserNameContainer>\r\n              </LeftAsideUserContent>\r\n              <LeftAsideContent2>\r\n                <LeaftAsideContent2Image src={IfLogo}></LeaftAsideContent2Image>\r\n                <LeftAsideContent2TextBox>Project</LeftAsideContent2TextBox>\r\n              </LeftAsideContent2>\r\n            </LeftAsideContentBox>\r\n          </LeftAside>\r\n          <TopHeader>\r\n            <TopHeaderLeft>\r\n              <CircleProgressContent\r\n                mainone\r\n                progressvalue={\r\n                  elm.milestones.length > 0 ? elm.goalAchievingProbability : 0\r\n                }\r\n              ></CircleProgressContent>\r\n            </TopHeaderLeft>\r\n            <TopHeaderRight>\r\n              <TopHeaderTitleBox>\r\n                <ProjectNameInputContainer style={{ marginTop: \"5px\" }}>\r\n                  <EditForm\r\n                    ismilestoneedit={false}\r\n                    callbackFunction={getdata}\r\n                    isnamechanged={elm.isnamechanged}\r\n                    user={elm.user}\r\n                    defaultValue={elm.goal ? elm.goal : \"\"}\r\n                    typeofproject={elm.typeofproject}\r\n                    id={elm.id}\r\n                  ></EditForm>\r\n                </ProjectNameInputContainer>\r\n              </TopHeaderTitleBox>\r\n\r\n              <LinearProgressBar\r\n                // timeDifference={elm.timeDifference}\r\n                // plannedEndDate={elm.plannedEndDate}\r\n                // endDate={elm.endDate}\r\n                // progressOfTime={elm.progressOfTime}\r\n                // progressOfProject={elm.progressOfProject}\r\n                // startDate={elm.startDate}\r\n                // milestones={elm.milestones}\r\n                value={[\r\n                  elm.timeDifference,\r\n                  elm.plannedEndDate,\r\n                  elm.endDate,\r\n                  elm.progressOfTime,\r\n                  elm.progressOfProject,\r\n                  elm.startDate\r\n                ]}\r\n                milestones={elm.milestones}\r\n              ></LinearProgressBar>\r\n            </TopHeaderRight>\r\n          </TopHeader>\r\n          <ControlPanel>\r\n            <ControlPanelItemsContainer>\r\n              <MilestoneSearchTabIcon\r\n                color={\r\n                  !milestonesTab ? \"rgb(228, 220, 0)\" : \"rgb(240, 240, 255)\"\r\n                }\r\n                onClick={() => {\r\n                  setMilestonesTab(false)\r\n                  setMilestoneEditTab(false)\r\n                }}\r\n                src={SearchButtonSvg}\r\n              ></MilestoneSearchTabIcon>\r\n              <MilestoneTabIcon\r\n                color={\r\n                  milestonesTab ? \"rgb(228, 220, 0)\" : \"rgb(240, 240, 255)\"\r\n                }\r\n                onClick={() => {\r\n                  setMilestonesTab(true)\r\n                }}\r\n                src={MilestoneTabSvg}\r\n              ></MilestoneTabIcon>\r\n            </ControlPanelItemsContainer>\r\n          </ControlPanel>\r\n          <DetailContent id=\"DetailsRoot\">\r\n            {milestonesTab ? (\r\n              <DetailMilestonesRoot id=\"MilestoneRoot\">\r\n                <DetailMilestoneContainer width={100}>\r\n                  <MilestonesHeader>\r\n                    <MilestoneHeaderText>Milestones</MilestoneHeaderText>\r\n                    <MilestoneHeaderHintText>\r\n                      In this section you can manage the milestones of your\r\n                      project\r\n                    </MilestoneHeaderHintText>\r\n                  </MilestonesHeader>\r\n                  <MilestoneAddButtonContainer>\r\n                    {loading ? (\r\n                      <CircularProgress\r\n                        style={{ color: \"rgb(228, 220, 0)\" }}\r\n                        disableShrink\r\n                      />\r\n                    ) : (\r\n                      <MilestoneAddButtonIcon\r\n                        onClick={async () => {\r\n                          await addMilestoneFunction(elm.id)\r\n                        }}\r\n                        src={AddIcon}\r\n                      ></MilestoneAddButtonIcon>\r\n                    )}\r\n                  </MilestoneAddButtonContainer>\r\n\r\n                  <DragComponent\r\n                    editTab={OpenEditMilestoneTab}\r\n                    isEditTabOpened={milestoneEditTab}\r\n                    selectedTab={selectedTab}\r\n                    getMilestoneData={getMilestoneDataInfo}\r\n                    value={[\r\n                      elm.timeDifference,\r\n                      elm.plannedEndDate,\r\n                      elm.endDate,\r\n                      elm.progressOfTime,\r\n                      elm.progressOfProject,\r\n                      elm.startDate,\r\n                      elm.goal,\r\n                      elm.id\r\n                    ]}\r\n                    DraggerRef={ChangeDraggerRef}\r\n                    milestones={elm.milestones}\r\n                    callbackFunction={getdata}\r\n                    goalachiveng={\r\n                      elm.milestones.length > 0\r\n                        ? elm.goalAchievingProbability\r\n                        : 0\r\n                    }\r\n                    scrollPosition={scrollPosition}\r\n                  ></DragComponent>\r\n                </DetailMilestoneContainer>\r\n              </DetailMilestonesRoot>\r\n            ) : (\r\n              <DetailContentContainer key={index}>\r\n                {\" \"}\r\n                <DatePickerForm\r\n                  callbackFunction={getdata}\r\n                  user={elm.user}\r\n                  typeofproject={elm.typeofproject}\r\n                  defaultStartData={elm.startDate}\r\n                  defaultPlannedEndData={elm.plannedEndDate}\r\n                  id={elm.id}\r\n                  endDate={elm.endDate}\r\n                  milestones={elm.milestones}\r\n                ></DatePickerForm>\r\n                <span\r\n                  style={{\r\n                    fontFamily: \"Roboto\",\r\n                    fontSize: \"12px\",\r\n                    fontStyle: \"normal\",\r\n                    letterSpacing: \"0em\",\r\n                    color: \"rgba(228, 220, 0, 1)\",\r\n                    marginBottom: \"2px\"\r\n                  }}\r\n                >\r\n                  Description{\" \"}\r\n                </span>\r\n                <DescriptionBoxTextArea\r\n                  callbackFunction={getdata}\r\n                  id={elm.id}\r\n                  typeofproject={elm.typeofproject}\r\n                  user={elm.user}\r\n                  defaultValue={elm.description ? elm.description : \"\"}\r\n                  firstTimeChange={!elm.description ? true : false}\r\n                ></DescriptionBoxTextArea>\r\n              </DetailContentContainer>\r\n            )}\r\n          </DetailContent>\r\n          {milestoneEditTab && (\r\n            <Detail2>\r\n              <MilestoneTreeViewIcon\r\n                style={{\r\n                  top: \"30%\",\r\n                  right: \"0\"\r\n                }}\r\n                onClick={() => {\r\n                  setTreeViewOpened(true)\r\n                }}\r\n                src={TreeViewSvgIcon}\r\n                color={TreeViewOpened ? \"rgb(228, 220, 0)\" : \"\"}\r\n              ></MilestoneTreeViewIcon>\r\n              <MilestoneCloseEditTabIcon\r\n                src={CloseMilestonEditTabIcon}\r\n                onClick={() => {\r\n                  setMilestoneEditTab(false)\r\n                }}\r\n              ></MilestoneCloseEditTabIcon>\r\n              <DetailContentContainer id=\"milestoneedittabcontainer\">\r\n                <MilestoneEditComponent\r\n                  projectdata={[\r\n                    elm.timeDifference,\r\n                    elm.plannedEndDate,\r\n                    elm.endDate,\r\n                    elm.progressOfTime,\r\n                    elm.progressOfProject,\r\n                    elm.startDate\r\n                  ]}\r\n                  projectid={elm.id}\r\n                  goalachivevalue={\r\n                    elm.milestones.length > 0 ? elm.goalAchievingProbability : 0\r\n                  }\r\n                  data={elm.milestones.filter(\r\n                    elm => elm.id === activeMilestoneData[0].id\r\n                  )}\r\n                  callbackFunction={getdata}\r\n                  milestones={elm.milestones}\r\n                  isOpened={milestoneEditTab}\r\n                ></MilestoneEditComponent>\r\n              </DetailContentContainer>\r\n            </Detail2>\r\n          )}\r\n        </ProjectDetailsContainer>\r\n      </>\r\n    ))\r\n  }, [\r\n    project,\r\n    milestoneEditTab,\r\n    milestonesTab,\r\n    activeMilestoneData,\r\n    TreeViewOpened,\r\n    isCreatingNewMilestones\r\n  ])\r\n  React.useEffect(() => {\r\n    getdata()\r\n  }, [props.match.params])\r\n\r\n  const addMilestoneFunction = async (main_project_id: any) => {\r\n    Promise.all([\r\n      dispatch(\r\n        createProjectMilestoneMiddleWare(main_project_id, plannedEndDate)\r\n      )\r\n    ]).then(res => getTotals(main_project_id))\r\n\r\n    // return await axios\r\n    //   .post(\"project/milestones/create\", {\r\n    //     main_project: main_project_id\r\n    //   })\r\n    //   .then(res => getdata())\r\n    //   .catch(err => console.log(err))\r\n  }\r\n\r\n  return project ? (\r\n    <>\r\n      <ProjectDetailContent></ProjectDetailContent>\r\n    </>\r\n  ) : (\r\n    <h2>404 Detailed Not Found</h2>\r\n  )\r\n}\r\n\r\nexport default ProjectDetailPage\r\n","import Navbar from \"./Navbar\"\r\nimport { getdata } from \"../functions/api\"\r\nimport {\r\n  Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useLocation\r\n} from \"react-router-dom\"\r\nimport history from \"./utulities/history\"\r\n\r\nimport BodyComponent from \"./Body\"\r\nimport React from \"react\"\r\nimport OverviewProject from \"./screens/Overview\"\r\nimport ProjectDetailPageProps from \"./screens/ProjectDetails\"\r\nimport axios from \"../functions/axios\"\r\nimport DragComponent from \"./ui/Draggable\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { fetchProjects } from \"../components/redux/project/projectActions\"\r\n\r\nexport interface BaseProps {}\r\n\r\nfunction NavbarComponent() {\r\n  let location = useLocation()\r\n  if (location.pathname.includes(\"project/detail\")) {\r\n    return <Navbar context={\"Projects\"}></Navbar>\r\n  }\r\n\r\n  return <Navbar></Navbar>\r\n}\r\n\r\nconst BaseApp: React.FC<BaseProps> = () => {\r\n  const [detailPage, setDetailPage] = React.useState<boolean>(false)\r\n  React.useEffect(() => {\r\n    if (window.location.href.includes(\"detail\")) {\r\n      setDetailPage(true)\r\n    } else if (window.location.href.includes(\"all\")) {\r\n      setDetailPage(false)\r\n    }\r\n  }, [window.location.href, detailPage])\r\n  console.log(\"THİSTWİCE\")\r\n  const dispatch = useDispatch()\r\n  dispatch(fetchProjects())\r\n  return (\r\n    <Router history={history}>\r\n      <Route>\r\n        <NavbarComponent></NavbarComponent>\r\n        <BodyComponent>\r\n          <Switch>\r\n            <Route exact path=\"/\" />\r\n            <Route path=\"/users\" />\r\n            <Route path=\"/project/all\" component={OverviewProject} />\r\n            <Route\r\n              path=\"/project/detail/:id\"\r\n              component={ProjectDetailPageProps}\r\n            />\r\n          </Switch>\r\n        </BodyComponent>\r\n      </Route>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default BaseApp\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport BaseApp from \"./components/base\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BaseApp />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}