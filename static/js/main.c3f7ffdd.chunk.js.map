{"version":3,"sources":["static/svgicon/FrameIcon.svg","static/svgicon/SettingIcon.svg","components/ui/RadioButtons.tsx","components/ui/Checkbox.tsx","functions/axios.tsx","components/forms/createProjectForm.tsx","components/ui/ConstantUi.tsx","components/Navbar.tsx","components/Body.tsx","static/svgicon/subprojectelement.svg","static/svgicon/bigprogressicon.svg","functions/cleaningData.tsx","components/ui/CircleProgressContent.tsx","components/screens/Overview.tsx","static/svgicon/userDefault.svg","static/svgicon/iflogo.svg","static/svgicon/searchbutton.svg","static/svgicon/milestonetab.svg","static/svgicon/addicon.svg","components/forms/editprojectnameform.tsx","functions/process.tsx","static/svgicon/calendar.svg","components/ui/DatePicker.tsx","components/forms/datepickerForm.tsx","static/svgicon/discard.svg","static/svgicon/accept.svg","components/forms/descriptionProjectForm.tsx","static/svgicon/closemilestonetab.svg","static/svgicon/treeviewlogo.svg","static/svgicon/smallpointer.svg","static/svgicon/bigpointer.svg","static/svgicon/milestonepointer.svg","components/ui/LinearProgressBar.tsx","static/svgicon/clock.svg","static/svgicon/threedot.svg","components/ui/Draggable.tsx","components/forms/durationForm.tsx","components/forms/ProgressForm.tsx","components/ui/MilestoneEdit.tsx","components/ui/SquaredProgress.tsx","components/ui/TreeViewsMainContent.tsx","components/ui/TreeViewComponent.tsx","components/screens/ProjectDetails.tsx","components/base.tsx","reportWebVitals.ts","index.tsx"],"names":["FirstLogo","width","height","viewBox","fill","xmlns","cx","cy","r","fill-opacity","stroke","stroke-opacity","stroke-width","SecondLogo","LabelText","styled","span","Checkbox","props","FormControl","component","required","RadioGroup","value","onChange","setvalue","FormControlLabel","control","Radio","defaultChecked","icon","checkedIcon","color","label","myaxios","axios","create","baseURL","Form","form","CreateProjectRadioInputSubmitButton","div","CreateProjectRadioInputForms","React","useState","setValue","history","useHistory","method","onSubmit","e","preventDefault","newvalue","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","post","user","typeofproject","goal","startDate","plannedEndDate","then","res","push","data","id","catch","err","prompt","event","target","Button","type","style","fontWeight","fontFamily","onClick","ActualClickHandle","UserLogoImage","img","LeaftAsideContent2Image","TopHeaderLeftBıgProgressIcon","p","small","medium","MilestoneCloseEditTabIcon","MilestoneAddButtonIcon","MilestoneTabIcon","SVG","ClockIconImage","MilestoneSearchTabIcon","MilestoneTreeViewIcon","FrameIconElement","SettingsIconElement","SaveIcon","DiscardIcon","BodyContainer","NavbarRoot","NavbarContainer","NavbarLinksContainer","NavbarLinksContainerItems","NavbarUserContainer","NavbarItem","CreateNewProjectButtonContainer","DropDownCreateMenuContainer","opened","DropDownHeaderContainer","DropDownMenuHeaderText","DropDownHintText","DropDownMenuBody","ProjectDetailsContainer","ismilestoneedit","Detail2","LeftAside","LeftAsideContentBox","LeftAsideUserContent","LeftAsideContent2","LeftAsideContent2TextBox","UserNameContainer","TopHeader","TopHeaderLeft","TopHeaderRight","TopHeaderTitleBox","ProjectGoalText","ProjectNameInputContainer","TopHeaderStatusBarContainer","ControlPanel","ControlPanelItemsContainer","DetailContent","DetailContentContainer","DescriptionBoxContainer","SaveDiscardContainer","DetailMilestonesRoot","DetailMilestoneContainer","MilestonesHeader","MilestoneHeaderText","MilestoneHeaderHintText","MilestoneAddButtonContainer","MilestonesBodyRoot","MilestonesWrapper","mouseOver","MilestoneLeftSide","ClockIconContainer","MilestoneGoalStaticsContainer","MilestoneGoalStatic","MilestoneGoalContent","MilestonesDateContentRoot","isEditTapOpened","MilestoneDateContentContanier","MilestoneDateContentLabel","MilestoneDateDataContent","MilestoneStatusBarsContentContainer","MilestoneEndThreeDotContainer","MilestoneEndThreeDotImage","ProjectOverviewWrapper","ProjectOverviewContentBox","ProjectOverviewHeaderBox","ProjectContentBox","ProgressBarContainer","MainProjectContainer","SubSubProjectBox","SubProjectGroup","SubSubProjectItem","HeaderTextContainer","GoalText","ProjectNameContainer","Navbar","DropDawnMenuContainerRef","useRef","CreateNewProjectButtonRef","handleClickOutside","current","contains","setCreateMenu","useEffect","document","addEventListener","removeEventListener","showCreateMenu","src","FrameIcon","context","ref","SettingsIcon","BodyComponent","children","calculateMilestonesPositioning","list","startdate","fullwidth","isexpired","fullwidthgray","diffenddatestartdate","projectstartdate","fullWidth","Array","from","map","index","diffTimeMilestoneandProjectStartDate","Math","ceil","dateDifference","date1","date2","datefirst","datesecond","calculatedifference","abs","PercentageConvertation","roundedString","Number","toFixed","ConvertDateFormat","date","splitteddate","split","calculateDatesPositioning","endDate","PlannedEndDate","timeDifferenceBetweenPlannedDateAndEndDate","progressOfProject","progressOfTime","ismilestones","enddate","diffstartdateplannedenddate","diffstartdateenddate","diffplannedandEnddate","fullWidthGray","progressofproject","secondlineWidth","firstline","progressprojecttime","console","log","CleanTypeOfData","projecttype","stringprojectname","Convertpercentageforbackend","backendDateConverter","dateVar","strtodate","activemonth","frontendDatePlus","duration","newdate","setDate","useContainerDimensions","myRef","getDimensions","offsetWidth","offsetHeight","dimensions","setDimensions","handleResize","window","CircleProgressContent","progressvalue","checkitout","mainone","treeView","Box","position","display","visibility","CircularProgress","smallSize","mediumSize","zIndex","thickness","variant","top","left","bottom","right","alignItems","justifyContent","BıgProgressIcon","textAlign","minHeight","minWidth","backgroundColor","borderRadius","fontSize","fontStyle","lineHeight","letterSpacing","OverviewProject","setData","getdata","a","get","length","LoadedData","onMouse","setOnMouse","onMouseEnter","onMouseLeave","goalAchievingProbability","isnamechanged","SubProjectBoxIcon","key","SubmitButton","button","ProjectGoalLabel","isFocused","EditForm","projectnameinputref","editformref","defaultValue","activeProjectName","setActiveProjectName","SubmitButtonRef","isFocus","setisFocus","handleMilestoneNameSubmit","put","milestoneid","charAt","toUpperCase","slice","callbackFunction","marginBottom","blur","TextField","currentTarget","error","helperText","inputRef","InputLabelProps","shrink","issmall","onFocus","onBlur","click","name","placeholder","inputProps","maxLength","InputProps","disableUnderline","boxSizing","maxHeight","durationUpdate","durationNumber","currentOneid","currentMilestones","promises","currentDuration","filter","currentMilestone","getchangedarr","elm","getchangedarrStartDate","getchangedDueDate","main_project","getchangedMainProject","relativeProgress","getchangedRelativeProgress","progress","getchangedProgress","arrfirst","dueDate","ReadyToSend","willchangearr","element","arr","forEach","item","concat","endResult","result","Promise","all","responses","dueDateUpdate","newDueDate","activeData","durationcalculated","getTotals","project_id","callback","totalRelativeProgress","totalDuration","curretMilestonetype","promises1","milestones","currentMilestoneData","DatePickerContainer","DetailContentHeader","ProjectTypeContainer","ProjectTypeLabelText","ExactProjectText","CalendarIconComp","DatePicker","defaultStartData","ActiveStartDate","setActiveStartDate","setOnFocus","defaultPlannedEndData","ActivePlannedDate","setActivePlannedDate","getbutton","getElementsByClassName","setAttribute","CannotBeEqual","utils","DateFnsUtils","margin","format","allowKeyboardControl","readOnly","borderBottom","DialogProps","handleStartDate","KeyboardButtonProps","keyboardIcon","CalendarIcon","minDate","handleEndDate","DatePickerForm","activeStartDate","datepickerformref","activeEndDate","setActiveEndDate","defaultStartDate","setDefaultStartDate","defaultEndDate","setDefaultEndDate","active","activePlannedEndDate","active2","handleSubmit","ActiveStarDateClean","ActiveEndDateClean","handleMilestoneDateSubmit","actualprojectid","ismilestone","textarea","DescriptionBoxTextArea","activeDescriptionText","setActiveDescriptionText","processName","setProcessName","setSaveProps","InputBoxRef","handleDescriptionBoxSubmit","description","response","handleDescriptionForMilestone","typemilestone","flexDirection","flexBasis","cursor","multiline","rowsMax","IconButton","disabled","AcceptIcon","DiscardSvgIcon","MainContainerBody","MainContainerGrayArea","MainContainerTop","MainContainerBottom","MilestonesIcon","FirstLine","SecondLine","SmallPointerIcon","BigPointerIcon","PlannedAndDatePointer","LinearProgressBar","getLocationOnProgressBar","expression","isMilestoneEditTab","milestonestartdate","milestoneeduedate","milestoneprogress","milestoneprogressOfTime","round","Tooltip","title","SmallPointer","floor","BigPointer","MilestonePointer","DragComponent","characters","updateCharacters","orderHandle","newarray","oldarray","olditem","iseditTabCallbackFunction","useCallback","isEditTabOpened","getElementById","selectedTab","border","WrapperComponent","goalachiveng","editTab","getMilestoneData","progressoftime","onMouseOverWrapper","onMouseLeaveWrapper","draggableId","provided","innerRef","draggableProps","dragHandleProps","ClockIcon","str","cutpoint","maxlimitlength","substring","threeDotImage","onDragEnd","destination","items","items2","splice","source","reorderedItem","droppableId","className","droppableProps","is_main_project","DurationForm","handleDurationEdit","projectid","padding","min","inputMode","Typography","marginLeft","ProgressForm","max","MilestoneEditContainer","isOpened","MilestoneEditHeader","MilestoneEditBody","MilestoneEditBottom","MilestoneEditStatusContainer","MilestoneEditCircleProgressContainer","MilestoneEditLinearProgressContanier","MilestoneEditDatasContainer","MilestoneEditDatasTop","MilestoneEditDatasBottom","MilestoneEditDataTopItem","MilestoneEditComponent","projectdata","firstTimeChange","SquaredProgressBarOutline","gap","SquarredProgressBarNumber","SquaredProgress","isSquarredMouseOver","setIsSquarredMouseOver","subprops","SquarredProgressContent","howmanygolden","misspart","i","parts","acceptedparts","flooredhowmnaygoldenbar","preparedstyleforborder","borderRight","borderTop","borderLeft","x","decimals","decimalPlaces","toString","tofixed","resultnumber","fullparts","difference","includes","generateSquaredOutline","progressValue","Element","gaps","stopPropagation","OpenEditMilestoneTab","closeDialog","goalAchievingValue","ProjectArea","maxheight","AllMilestonesPlusGaps","maxWidth","TreeViewMainContentComponent","mouseOverProjectArea","setMouseOverProjectArea","ProjectAreaWidthRef","AllMilestonesPlusGapsWidthRef","AllMilestonesPlusGapsWidth","AllMilestonesPlusGapsHeight","widthOfProjectArea","heightOfProjectArea","SquaredProgressCallBack","TreeViewComponent","classes","makeStyles","paper","background","overflowX","useStyles","TreeViewComponentContent","Dialog","open","onClose","close","paddingBottom","projectgoalachieveng","projectname","ProjectDetailPage","milestonesTab","setMilestonesTab","milestoneEditTab","setMilestoneEditTab","activeMilestoneData","setActiveMilestoneData","isCreatingNewMilestones","setisCreatingNewMilestones","TreeViewOpened","setTreeViewOpened","setSelectedTab","ChangeDraggerRef","dom","state","match","params","isTreeview","insideTreeView","getMilestoneDataInfo","activeMilestione","CloseTreeView","ProjectDetailContent","TreeViewSvgIcon","UserLogo","IfLogo","marginTop","timeDifference","SearchButtonSvg","MilestoneTabSvg","disableShrink","addMilestoneFunction","AddIcon","DraggerRef","CloseMilestonEditTabIcon","MilestoneEdit","goalachivevalue","main_project_id","NavbarComponent","useLocation","pathname","BaseApp","detailPage","setDetailPage","location","href","Body","exact","path","ProjectDetailPageProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c3f7ffdd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/FrameIcon.dd425d1b.svg\";","export default __webpack_public_path__ + \"static/media/SettingIcon.b0058e6d.svg\";","import React from \"react\"\r\n\r\nexport interface FirstLogoProps {}\r\n\r\nconst FirstLogo: React.FC<FirstLogoProps> = () => {\r\n  return (\r\n    <svg\r\n      width=\"31\"\r\n      height=\"31\"\r\n      viewBox=\"0 0 31 31\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle cx=\"15.5\" cy=\"15.5\" r=\"15.5\" fill=\"#636380\" fill-opacity=\"0.1\" />\r\n      <circle\r\n        cx=\"15.5\"\r\n        cy=\"15.5\"\r\n        r=\"14.5\"\r\n        stroke=\"#F0F0FF\"\r\n        stroke-opacity=\"0.1\"\r\n        stroke-width=\"2\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\nexport interface SecondLogoProps {}\r\n\r\nconst SecondLogo: React.FC<SecondLogoProps> = () => {\r\n  return (\r\n    <svg\r\n      width=\"31\"\r\n      height=\"31\"\r\n      viewBox=\"0 0 31 31\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle cx=\"15.5\" cy=\"15.5\" r=\"15.5\" fill=\"#636380\" fill-opacity=\"0.1\" />\r\n      <circle\r\n        cx=\"15.5\"\r\n        cy=\"15.5\"\r\n        r=\"14.5\"\r\n        stroke=\"#F0F0FF\"\r\n        stroke-opacity=\"0.1\"\r\n        stroke-width=\"2\"\r\n      />\r\n      <circle cx=\"15.4999\" cy=\"15.5\" r=\"6.79825\" fill=\"#E4DC00\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport { FirstLogo, SecondLogo }\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Radio from \"@material-ui/core/Radio\"\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport { FirstLogo, SecondLogo } from \"./RadioButtons\"\r\n// Inspired by blueprintjs\r\n\r\nexport const LabelText = styled.span`\r\n  width: 98px;\r\n  color: rgba(240, 240, 255, 1);\r\n  height: 22px;\r\n  font-family: Aileron;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\ninterface CheckBoxProps {\r\n  setvalue: any\r\n  value: string\r\n}\r\n\r\nconst Checkbox: React.FC<CheckBoxProps> = props => {\r\n  return (\r\n    <FormControl component=\"fieldset\" required>\r\n      <RadioGroup value={props.value} onChange={props.setvalue}>\r\n        <FormControlLabel\r\n          value=\"S\"\r\n          control={\r\n            <Radio\r\n              defaultChecked\r\n              icon={<FirstLogo />}\r\n              checkedIcon={<SecondLogo />}\r\n              color=\"default\"\r\n            />\r\n          }\r\n          label={<LabelText>Step By Step</LabelText>}\r\n        />\r\n        <FormControlLabel\r\n          value=\"A\"\r\n          control={\r\n            <Radio\r\n              icon={<FirstLogo />}\r\n              checkedIcon={<SecondLogo />}\r\n              color=\"default\"\r\n            />\r\n          }\r\n          label={<LabelText>All at Once</LabelText>}\r\n        />\r\n        <FormControlLabel\r\n          value=\"C\"\r\n          control={\r\n            <Radio\r\n              icon={<FirstLogo />}\r\n              checkedIcon={<SecondLogo />}\r\n              color=\"default\"\r\n            />\r\n          }\r\n          label={<LabelText>Cycle Up</LabelText>}\r\n        />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default Checkbox\r\n","import axios from \"axios\"\r\n\r\nconst axiosConfig = {\r\n  baseURL: \"https://milestonebackendapp.herokuapp.com\"\r\n}\r\nconst myaxios = axios.create(axiosConfig)\r\nexport default myaxios\r\n","import Checkbox from \"../ui/Checkbox\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport axios from \"../../functions/axios\"\r\nimport { useHistory } from \"react-router-dom\"\r\nexport interface CreateProjectRadioInputFormsProps {\r\n  ActualClickHandle: any\r\n}\r\nconst Form = styled.form`\r\n  display: flex;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin-top: 52px;\r\n`\r\nconst CreateProjectRadioInputSubmitButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  background: rgba(99, 99, 128, 0.1);\r\n  align-self: flex-end;\r\n  width: 163px;\r\n  height: 43px;\r\n  border-radius: 5px;\r\n  fontweight: 400;\r\n  border: 3px solid #484862;\r\n`\r\n\r\nconst CreateProjectRadioInputForms: React.FC<CreateProjectRadioInputFormsProps> = props => {\r\n  const [value, setValue] = React.useState(\"S\")\r\n  const history = useHistory()\r\n  const handleChange = (event: any) => {\r\n    setValue(event.target.value)\r\n  }\r\n  const handleFormSubmit = (e: any) => {\r\n    e.preventDefault()\r\n    const name = \"Fatih\"\r\n    const goalname = \"\"\r\n    const newvalue = value\r\n    let today: any = new Date()\r\n    let dd = String(today.getDate()).padStart(2, \"0\")\r\n    let mm = String(today.getMonth() + 1).padStart(2, \"0\") //January is 0!\r\n    let yyyy = today.getFullYear()\r\n\r\n    today = mm + \"-\" + dd + \"-\" + yyyy\r\n    axios\r\n      .post(\"project/all/\", {\r\n        user: name,\r\n        typeofproject: newvalue,\r\n        goal: goalname,\r\n        startDate: today,\r\n        plannedEndDate: null\r\n      })\r\n      .then(res => {\r\n        history.push(`/project/detail/${res.data.id}`)\r\n      })\r\n      .catch(err => prompt(err))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form method=\"post\" onSubmit={handleFormSubmit}>\r\n        <Checkbox value={value} setvalue={handleChange} />\r\n        <CreateProjectRadioInputSubmitButton>\r\n          <Button\r\n            type=\"submit\"\r\n            style={{\r\n              color: \"white\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              fontWeight: \"inherit\",\r\n              fontFamily: \"Aileron\"\r\n            }}\r\n            onClick={props.ActualClickHandle}\r\n          >\r\n            Create Project\r\n          </Button>\r\n        </CreateProjectRadioInputSubmitButton>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\nexport default CreateProjectRadioInputForms\r\n","import React, { SVGProps } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport SVG from \"react-inlinesvg\"\r\n\r\n//ICONS\r\nexport const UserLogoImage = styled.img``\r\n\r\nexport const SearchButtonIcon = styled.img`\r\n  width: 42px;\r\n  cursor: pointer;\r\n  height: 32px;\r\n`\r\nexport const LeaftAsideContent2Image = styled.img``\r\n\r\nexport const MilestonesTabIcon = styled.img`\r\n  width: 33px;\r\n  height: 33px;\r\n  cursor: pointer;\r\n  color: green;\r\n  ::&svg {\r\n    fill: green;\r\n  }\r\n`\r\n\r\nexport const TopHeaderLeftBıgProgressIcon = styled.img<{\r\n  small?: boolean\r\n  medium?: boolean\r\n}>`\r\n  ${p =>\r\n    p.small\r\n      ? p.medium\r\n        ? \"height:70px;width:70px;\"\r\n        : \"height:48px;width:48px;\"\r\n      : \"height:auto;width:auto;\"}\r\n`\r\n\r\nexport const MilestoneCloseEditTabIcon = styled.img`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 40px;\r\n  max-width: 26px;\r\n  left: 0;\r\n  top: 60px;\r\n  cursor: pointer;\r\n`\r\n\r\nexport const MilestoneAddButtonIcon = styled.img`\r\n  height: 31px;\r\n  cursor: pointer;\r\n  width: 31px;\r\n`\r\n\r\nexport const MilestoneTabIcon = styled(SVG)<SVGProps<any>>`\r\n  width: 33px;\r\n  height: 33px;\r\n  cursor: pointer;\r\n  & path {\r\n    fill: ${({ color }) => color};\r\n  }\r\n`\r\nexport const ClockIconImage = styled.img`\r\n  height: 42px;\r\n  width: 42px;\r\n`\r\n\r\nexport const MilestoneSearchTabIcon = styled(SVG)<SVGProps<any>>`\r\n  width: 42px;\r\n  height: 32px;\r\n  cursor: pointer;\r\n  & path {\r\n    fill: ${({ color }) => color};\r\n  }\r\n`\r\nexport const MilestoneTreeViewIcon = styled(SVG)<SVGProps<any>>`\r\n  cursor: pointer;\r\n  max-width: 121px;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 65%;\r\n  max-height: 186px;\r\n  & path {\r\n    fill: ${({ color }) => color};\r\n  }\r\n`\r\nexport const ProgressBarImage = styled.img`\r\n  width: 70px;\r\n  height: 70px;\r\n`\r\nexport const FrameIconElement = styled.img`\r\n  width: 45px;\r\n  height: 45px;\r\n`\r\nexport const SettingsIconElement = styled.img`\r\n  width: 45px;\r\n  height: 45px;\r\n`\r\nexport const SaveIcon = styled.img`\r\n  cursor: pointer;\r\n`\r\nexport const DiscardIcon = styled.img`\r\n  cursor: pointer;\r\n`\r\n\r\n// Body\r\nexport const BodyContainer = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  height: 90vh;\r\n  width: 100%;\r\n  flex: 1;\r\n  flex-wrap: wrap;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px grey;\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(240, 240, 255, 1);\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 7px;\r\n    max-height: 11px;\r\n    border-radius: 5px;\r\n  }\r\n`\r\n//Navbar\r\n\r\nexport const NavbarRoot = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  width: 100%;\r\n  background: rgb(50, 50, 77, 1);\r\n  box-sizing: border-box;\r\n  min-width: 100%;\r\n  min-height: 60px;\r\n  border-bottom: 5px solid #636380;\r\n  padding: 20px 25px 20px 25px;\r\n`\r\n\r\nexport const NavbarContainer = styled.div`\r\n  display: flex;\r\n  flex: 4;\r\n`\r\nexport const NavbarLinksContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n\r\n  flex: 4;\r\n  align-items: center;\r\n  text-align: center;\r\n  flex-direction: row;\r\n`\r\nexport const NavbarLinksContainerItems = styled.div`\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  flex-direction: row;\r\n`\r\nexport const NavbarUserContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  position: relative;\r\n`\r\n\r\nexport const NavbarItem = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n`\r\nexport const CreateNewProjectButtonContainer = styled.div`\r\n  display: flex;\r\n  max-width: 163px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  max-height: 43px;\r\n  height: 100%;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  border-radius: 5px;\r\n  border: 3px solid #484862;\r\n  text-align: center;\r\n  justify-content: center;\r\n  color: white;\r\n  padding: 6px 2px 5px 2px;\r\n`\r\nexport const DropDownCreateMenuContainer = styled.div<{ opened: boolean }>`\r\n  min-width: 364px;\r\n  display: flex;\r\n  opacity: ${p => (p.opened ? \"1\" : \"0\")};\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\r\n    z-index 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  position: absolute;\r\n  min-height: 389px;\r\n  top: 47px;\r\n  z-index: ${p => (p.opened ? \"9999\" : \"-5555\")};\r\n  right: 145px;\r\n  background-color: rgba(50, 50, 77, 0.95);\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 3px solid rgba(240, 240, 255, 0.1);\r\n  border-radius: 5px;\r\n  padding-left: 25px;\r\n  padding-top: 34px;\r\n  padding-bottom: 20px;\r\n  padding-right: 21px;\r\n  box-sizing: border-box;\r\n  flex-direction: column;\r\n`\r\nexport const DropDownHeaderContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  height: 20%;\r\n`\r\nexport const DropDownMenuHeaderText = styled.div`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  display: flex;\r\n  line-height: 14.4px;\r\n  color: rgba(228, 220, 0, 1);\r\n  min-width: 99px;\r\n  max-height: 14px;\r\n  min-height: 14px;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\nexport const DropDownHintText = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  height: 100%;\r\n  min-width: 318px;\r\n  font-size: 18px;\r\n  min-height: 22px;\r\n  max-width: 318px;\r\n  max-height: 22px;\r\n  font-weight: 400;\r\n  color: rgba(240, 240, 255, 1);\r\n  line-height: 21.6px;\r\n`\r\nexport const DropDownMenuBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`\r\n// Project Details\r\nexport const ProjectDetailsContainer = styled.div<{ ismilestoneedit: boolean }>`\r\n  display: inline-grid;\r\n  width: 100%;\r\n  grid-template-columns: ${p =>\r\n    p.ismilestoneedit ? \"0.3fr 0.2fr 2.5fr 2.5fr\" : \"0.3fr 0.2fr 2.5fr 1fr\"};\r\n  grid-template-rows: 0.8fr 1.2fr 1fr;\r\n  gap: 4px 5px;\r\n  grid-template-areas: ${p =>\r\n    p.ismilestoneedit\r\n      ? `${'\"LeftAside TopHeader TopHeader TopHeader\"\\n\"LeftAside controlpanel Detail-Content  Detail-Content-2\"\\n\"LeftAside controlpanel Detail-Content Detail-Content-2\"'}`\r\n      : `${'\"LeftAside TopHeader TopHeader TopHeader\"\\n\"LeftAside controlpanel Detail-Content Detail-Content\"\\n\"LeftAside controlpanel Detail-Content Detail-Content\"'}`};\r\n`\r\nexport const Detail2 = styled.div`\r\n  grid-area: Detail-Content-2;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  padding: 45px 95px 55px 35px;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const Detail2ContentContainer = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n  flex-direction: column;\r\n`\r\nexport const LeftAside = styled.div`\r\n  grid-area: LeftAside;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  object-fit: cover;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const LeftAsideContentBox = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 40%;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`\r\nexport const LeftAsideUserContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 35%;\r\n`\r\nexport const LeftAsideContent2 = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-direction: row;\r\n`\r\nexport const LeftAsideContent2TextBox = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  color: rgba(228, 220, 0, 1);\r\n  text-align: left;\r\n`\r\n\r\nexport const UserNameContainer = styled.div`\r\n  display: flex;\r\n  max-width: 116px;\r\n  align-self: center;\r\n  color: rgba(240, 240, 255, 1);\r\n  width: 100%;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: center;\r\n  justify-content: center;\r\n  margin-top: 12px;\r\n`\r\nexport const TopHeader = styled.div`\r\n  grid-area: TopHeader;\r\n  border-radius: 5px;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 27px 90px 44px 51px;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const TopHeaderLeft = styled.div`\r\n  display: flex;\r\n`\r\nexport const TopHeaderRight = styled.div`\r\n  width: 80%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  max-height: 188px;\r\n`\r\nexport const TopHeaderTitleBox = styled.div`\r\n  display: flex;\r\n  height: 20%;\r\n  flex-direction: column;\r\n  max-width: 449px;\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 29px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\nexport const ProjectGoalText = styled.div`\r\n  color: rgba(240, 240, 255, 0.7);\r\n`\r\nexport const ProjectNameInputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: rgba(240, 240, 255, 0.7);\r\n  justify-content: space-between;\r\n`\r\nexport const EditPencilIcon = styled.img`\r\n  height: 50%;\r\n  z-index: 9999;\r\n  cursor: pointer;\r\n`\r\nexport const TopHeaderStatusBarContainer = styled.div<{ small?: boolean }>`\r\n  display: flex;\r\n  height: 35%;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\nexport const TopHeaderStatusBar = styled.img<{ small?: boolean }>`\r\n  ${p =>\r\n    p.small ? \"height:2.76px;width:106.94px;\" : \"height:auto;width:auto;\"}\r\n`\r\nexport const ControlPanel = styled.div`\r\n  grid-area: controlpanel;\r\n  border-radius: 5px;\r\n  padding: 48px 18px;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const ControlPanelItemsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 96px;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const DetailContent = styled.div`\r\n  grid-area: Detail-Content;\r\n  border-radius: 5px;\r\n  padding: 45px 95px 55px 35px;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const DetailContentContainer = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n  flex-direction: column;\r\n`\r\nexport const DescriptionBoxContainer = styled.div`\r\n  display: flex;\r\n  height: 65% !important;\r\n  border: 3px solid rgba(240, 240, 255, 0.1);\r\n  height: auto;\r\n  border-radius: 5px;\r\n`\r\nexport const SaveDiscardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n`\r\nexport const DetailMilestonesRoot = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-height: 728px;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\nexport const DetailMilestoneContainer = styled.div<{ width: number }>`\r\n  display: flex;\r\n  width: ${p => p.width}%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const MilestonesHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  font-family: Aileron;\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 29px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\nexport const MilestoneHeaderText = styled.div`\r\n  display: flex;\r\n  color: rgba(228, 220, 0, 1);\r\n`\r\nexport const MilestoneHeaderHintText = styled.div`\r\n  display: flex;\r\n  color: rgba(240, 240, 255, 0.7);\r\n`\r\nexport const MilestoneAddButtonContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 20px 0;\r\n  justify-content: flex-end;\r\n`\r\nexport const MilestonesBodyRoot = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 80%;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px grey;\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(240, 240, 255, 1);\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 7px;\r\n    max-height: 11px;\r\n    border-radius: 5px;\r\n  }\r\n`\r\nexport const MilestonesWrapper = styled.div<{ mouseOver?: boolean }>`\r\n  display: flex;\r\n  padding: 12px 0px 12px 0px;\r\n  height: 10%;\r\n  max-height: 10%;\r\n  border-radius: 5px;\r\n  border: ${p =>\r\n    p.mouseOver\r\n      ? \"3px solid rgba(228, 220, 0, 1)\"\r\n      : \"3px solid rgba(240, 240, 255, 0.1)\"};\r\n\r\n  max-width: 100%;\r\n  flex-basis: 100%;\r\n  justify-content: space-between;\r\n  background-color: #373752;\r\n  flex-direction: row;\r\n  flex-grow: 0;\r\n  margin-bottom: 11px;\r\n`\r\nexport const MilestoneLeftSide = styled.div`\r\n  display: flex;\r\n  flex-grow: 0;\r\n\r\n  flex-basis: 30%;\r\n  max-width: 30%;\r\n  min-width: 397.5px;\r\n\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n`\r\nexport const ClockIconContainer = styled.div`\r\n  display: flex;\r\n`\r\n\r\nexport const MilestoneGoalStaticsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nexport const MilestoneGoalStatic = styled.div`\r\n  display: flex;\r\n  font-family: Aileron;\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: rgba(228, 220, 0, 1);\r\n`\r\nexport const MilestoneGoalContent = styled.div`\r\n  display: flex;\r\n  font-family: Aileron;\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 29px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: rgba(240, 240, 255, 0.7);\r\n`\r\nexport const MilestonesDateContentRoot = styled.div<{\r\n  isEditTapOpened: boolean\r\n}>`\r\n  display: flex;\r\n  flex-grow: 0;\r\n  flex-basis: 30%;\r\n  max-width: 30%;\r\n  max-height: 50px;\r\n  justify-content: space-evenly;\r\n  flex-direction: row;\r\n  border-right: ${p =>\r\n    p.isEditTapOpened ? \"\" : \"4px solid rgba(240, 240, 255, 0.5);\"}\r\n  border-radius: 1px;\r\n`\r\nexport const MilestoneDateContentContanier = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-height: 44px;\r\n  flex-direction: column;\r\n`\r\nexport const MilestoneDateContentLabel = styled.div`\r\n  display: flex;\r\n  font-family: Aileron;\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: rgba(228, 220, 0, 1);\r\n`\r\nexport const MilestoneDateDataContent = styled.div`\r\n  display: flex;\r\n  color: rgba(240, 240, 255, 1);\r\n  font-family: Aileron;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\nexport const MilestoneStatusBarsContentContainer = styled.div`\r\n  display: flex;\r\n\r\n  flex-grow: 0;\r\n  flex-basis: 35%;\r\n  max-width: 35%;\r\n  max-height: 50px;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  flex-direction: row;\r\n`\r\nexport const MilestoneStatusBarContentItems = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-basis: 10%;\r\n  max-width: 10%;\r\n`\r\nexport const MilestoneEndThreeDotContainer = styled.div`\r\n  display: flex;\r\n  flex-grow: 0;\r\n  flex-basis: 3%;\r\n  border-left: 4px solid rgba(240, 240, 255, 0.5);\r\n  border-radius: 1px;\r\n  max-width: 3%;\r\n  justify-content: center;\r\n`\r\nexport const MilestoneEndThreeDotImage = styled.img`\r\n  height:30px\r\n  width:8px;\r\n`\r\n\r\n//\r\n\r\n// Overview\r\nexport const ProjectOverviewWrapper = styled.div<{ mouseOver?: boolean }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex: 1;\r\n  height: 100%;\r\n  max-height: 492px;\r\n  min-width: 947px;\r\n  margin-bottom: 5px;\r\n  cursor: pointer;\r\n  margin-right: 5px;\r\n  overflow-y: hidden;\r\n  max-width: 947px;\r\n  border: ${p => (p.mouseOver ? \"3px solid rgba(228, 220, 0, 1)\" : \"0px\")};\r\n\r\n  border-radius: 5px;\r\n\r\n  background: rgba(50, 50, 77, 1);\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(240, 240, 255, 1);\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 7px;\r\n    max-height: 11px;\r\n    border-radius: 5px;\r\n  }\r\n`\r\nexport const ProjectOverviewContentBox = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 27px 41px 69px 48px;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\nexport const ProjectOverviewHeaderBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  max-width: 440px;\r\n  justify-content: space-between;\r\n  flex: 1;\r\n`\r\nexport const ProjectContentBox = styled.div`\r\n  display: flex;\r\n  flex: 4;\r\n  flex-direction: row;\r\n`\r\nexport const ProgressBarContainer = styled.div`\r\n  display: flex;\r\n`\r\nexport const MainProjectContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: rgba(99, 99, 128, 0.1);\r\n  border: 3px solid rgba(240, 240, 255, 0.1);\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  min-width: 200px;\r\n  max-height: 52px;\r\n  max-width: 858px;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`\r\n\r\nexport const SubSubProjectBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n`\r\nexport const SubProjectGroup = styled.div`\r\n  display: flex;\r\n  width: 60px;\r\n  justify-content: space-between;\r\n  min-width: 30px;\r\n`\r\nexport const SubSubProjectItem = styled.img`\r\n  width: 28px;\r\n  height: 28px;\r\n`\r\nexport const HeaderTextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\nexport const GoalText = styled.div`\r\n  display: flex;\r\n  color: rgba(228, 220, 0, 1);\r\n\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\nexport const ProjectNameContainer = styled.div`\r\n  display: flex;\r\n  color: rgba(240, 240, 255, 1);\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\n","import React from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport FrameIcon from \"../static/svgicon/FrameIcon.svg\"\r\nimport SettingsIcon from \"../static/svgicon/SettingIcon.svg\"\r\nimport CreateProjectRadioInputForms from \"./forms/createProjectForm\"\r\nimport {\r\n  NavbarContainer,\r\n  NavbarItem,\r\n  NavbarLinksContainer,\r\n  NavbarLinksContainerItems,\r\n  NavbarRoot,\r\n  NavbarUserContainer,\r\n  CreateNewProjectButtonContainer,\r\n  DropDownCreateMenuContainer,\r\n  DropDownMenuHeaderText,\r\n  DropDownHeaderContainer,\r\n  DropDownHintText,\r\n  DropDownMenuBody,\r\n  FrameIconElement,\r\n  SettingsIconElement\r\n} from \"./ui/ConstantUi\"\r\n\r\nexport interface NavbarProps {\r\n  context?: string\r\n}\r\nconst Navbar: React.FC<NavbarProps> = props => {\r\n  const history = useHistory()\r\n  const DropDawnMenuContainerRef = React.useRef<any>(null)\r\n  const CreateNewProjectButtonRef = React.useRef<any>(null)\r\n  const ActualCreateProjectClickHandle = () => {\r\n    setCreateMenu(false)\r\n  }\r\n  const handleClickOutside = (e: any) => {\r\n    if (\r\n      !DropDawnMenuContainerRef.current?.contains(e.target) &&\r\n      !CreateNewProjectButtonRef.current?.contains(e.target)\r\n    ) {\r\n      setCreateMenu(false)\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside)\r\n    return () => document.removeEventListener(\"click\", handleClickOutside)\r\n  })\r\n  const [showCreateMenu, setCreateMenu] = React.useState(false)\r\n  return (\r\n    <NavbarRoot>\r\n      <NavbarContainer>\r\n        <NavbarLinksContainer>\r\n          <NavbarLinksContainerItems>\r\n            <NavbarItem>\r\n              <FrameIconElement src={FrameIcon}></FrameIconElement>\r\n            </NavbarItem>\r\n          </NavbarLinksContainerItems>\r\n        </NavbarLinksContainer>\r\n        <NavbarUserContainer>\r\n          <NavbarUserContainer>\r\n            {props.context ? (\r\n              <CreateNewProjectButtonContainer\r\n                ref={CreateNewProjectButtonRef}\r\n                onClick={() => {\r\n                  history.push(\"/project/all\")\r\n                }}\r\n              >\r\n                Projects\r\n              </CreateNewProjectButtonContainer>\r\n            ) : (\r\n              <CreateNewProjectButtonContainer\r\n                ref={CreateNewProjectButtonRef}\r\n                onClick={() => {\r\n                  setCreateMenu(!showCreateMenu)\r\n                }}\r\n              >\r\n                Create Project\r\n              </CreateNewProjectButtonContainer>\r\n            )}\r\n\r\n            <DropDownCreateMenuContainer\r\n              ref={DropDawnMenuContainerRef}\r\n              opened={showCreateMenu}\r\n            >\r\n              <DropDownHeaderContainer>\r\n                <DropDownMenuHeaderText>\r\n                  Create New Project\r\n                </DropDownMenuHeaderText>\r\n                <DropDownHintText>\r\n                  Select one of three possible project types\r\n                </DropDownHintText>\r\n              </DropDownHeaderContainer>\r\n              <DropDownMenuBody>\r\n                <CreateProjectRadioInputForms\r\n                  ActualClickHandle={ActualCreateProjectClickHandle}\r\n                ></CreateProjectRadioInputForms>\r\n              </DropDownMenuBody>\r\n            </DropDownCreateMenuContainer>\r\n            <SettingsIconElement src={SettingsIcon}></SettingsIconElement>\r\n          </NavbarUserContainer>\r\n        </NavbarUserContainer>\r\n      </NavbarContainer>\r\n    </NavbarRoot>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from \"react\"\r\nimport { BodyContainer } from \"./ui/ConstantUi\"\r\nexport interface BodyComponentProps {}\r\n\r\nconst BodyComponent: React.FC<BodyComponentProps> = props => {\r\n  return <BodyContainer>{props.children}</BodyContainer>\r\n}\r\n\r\nexport default BodyComponent\r\n","export default __webpack_public_path__ + \"static/media/subprojectelement.1d9b2985.svg\";","export default __webpack_public_path__ + \"static/media/bigprogressicon.686d5662.svg\";","import { dateTimePickerDefaultProps } from \"@material-ui/pickers/constants/prop-types\"\r\nimport { differenceInBusinessDays } from \"date-fns\"\r\nimport React from \"react\"\r\nconst calculateMilestonesPositioning = (\r\n  list,\r\n  startdate,\r\n  fullwidth,\r\n  isexpired,\r\n  fullwidthgray,\r\n  diffenddatestartdate\r\n) => {\r\n  const projectstartdate: any = new Date(startdate)\r\n  let fullWidth = fullwidth\r\n\r\n  //expired\r\n  return Array.from(list).map((data: any, index: number) => {\r\n    if (isexpired) {\r\n      const milestoneStartDateDate: any = new Date(data.startDate)\r\n\r\n      const diffTimeMilestoneandProjectStartDate =\r\n        milestoneStartDateDate - projectstartdate\r\n      const diffMilestoneAndProjectStartDateDays = Math.ceil(\r\n        diffTimeMilestoneandProjectStartDate / (1000 * 60 * 60 * 24)\r\n      )\r\n      const positioning =\r\n        (diffMilestoneAndProjectStartDateDays / diffenddatestartdate) *\r\n        fullWidth\r\n      return positioning\r\n    } else {\r\n      const milestoneStartDateDate: any = new Date(data.startDate)\r\n\r\n      const diffTimeMilestoneandProjectStartDate =\r\n        milestoneStartDateDate - projectstartdate\r\n      const diffMilestoneAndProjectStartDateDays = Math.ceil(\r\n        diffTimeMilestoneandProjectStartDate / (1000 * 60 * 60 * 24)\r\n      )\r\n      const positioning =\r\n        (diffMilestoneAndProjectStartDateDays / diffenddatestartdate) *\r\n        fullWidth\r\n      return positioning\r\n    }\r\n  })\r\n\r\n  //not expired\r\n}\r\nexport const dateDifference = (date1: Date, date2: Date) => {\r\n  const datefirst: any = new Date(date1)\r\n  const datesecond: any = new Date(date2)\r\n  let calculatedifference = Math.abs(datefirst - datesecond)\r\n  return Math.ceil(calculatedifference / (1000 * 60 * 60 * 24))\r\n}\r\nexport const PercentageConvertation = (value: number) => {\r\n  let num: number = Number(value) // The Number() only visualizes the type and is not needed\r\n  let roundedString: any = num.toFixed(2)\r\n  let rounded: number = Number(roundedString) // toFixed() returns a string (often suitable for printing already)\r\n  return rounded * 100\r\n}\r\nconst ConvertDateFormat = (date: string | any) => {\r\n  let splitteddate = date?.split(\"-\")\r\n  if (splitteddate) {\r\n    let convertedformatdate =\r\n      splitteddate[1] + \"/\" + splitteddate[2] + \"/\" + splitteddate[0]\r\n    return convertedformatdate\r\n  }\r\n}\r\n\r\nexport const calculateDatesPositioning = (\r\n  startDate: Date,\r\n  endDate: Date,\r\n  PlannedEndDate: Date,\r\n  timeDifferenceBetweenPlannedDateAndEndDate: number,\r\n  progressOfProject: number,\r\n  progressOfTime: number,\r\n  ismilestones: boolean\r\n) => {\r\n  let startdate: any = startDate\r\n  let enddate: any = endDate\r\n  let plannedenddate: any = PlannedEndDate\r\n  let diffstartdateplannedenddate = dateDifference(plannedenddate, startdate) //Planned and startdate days difference\r\n  let diffstartdateenddate = dateDifference(enddate, startdate) // end date and start date days difference\r\n  let diffplannedandEnddate = timeDifferenceBetweenPlannedDateAndEndDate //planned end date end date difference which come from backend\r\n  let fullWidthGray = 0\r\n  let fullWidth = 0\r\n  let progressprojecttime = 0\r\n  let progressofproject = 0\r\n  let secondlineWidth = 0\r\n  let firstline = 0\r\n  let isexpired: any = false\r\n  if (ismilestones) {\r\n    fullWidthGray = 100\r\n\r\n    fullWidth = 100\r\n    firstline = PercentageConvertation(progressOfTime)\r\n    secondlineWidth = fullWidth - firstline\r\n\r\n    progressofproject = PercentageConvertation(progressOfProject)\r\n    if (progressofproject > 100) {\r\n      progressofproject = 100\r\n    } else {\r\n    }\r\n\r\n    fullWidthGray = 100\r\n    return {\r\n      diffstartdateplannedenddate,\r\n      diffstartdateenddate,\r\n      diffplannedandEnddate,\r\n      fullWidthGray,\r\n      fullWidth,\r\n      progressofproject,\r\n      progressprojecttime,\r\n      secondlineWidth,\r\n      firstline,\r\n      isexpired\r\n    }\r\n  } else {\r\n    // console.log(\"lookoutherelater\", diffplannedandEnddate)\r\n    if (diffplannedandEnddate > 0) {\r\n      isexpired = false\r\n      // if not expired do something\r\n\r\n      fullWidthGray = 100\r\n      fullWidth = diffstartdateenddate / diffstartdateplannedenddate\r\n      fullWidth = PercentageConvertation(fullWidth)\r\n\r\n      firstline = (fullWidth / 100) * PercentageConvertation(progressOfTime)\r\n      console.log(\r\n        \"checkhere on firefox\",\r\n        fullWidth,\r\n        progressOfTime,\r\n        (100 * PercentageConvertation(progressOfTime)) / fullWidth\r\n      )\r\n\r\n      secondlineWidth = fullWidth - firstline\r\n      // if (progressOfProject > 1) {\r\n      //   progressofproject = 100\r\n      // } else {\r\n      progressofproject =\r\n        (fullWidth / 100) * PercentageConvertation(progressOfProject)\r\n      // }\r\n\r\n      diffstartdateplannedenddate = 99\r\n    } else if (diffplannedandEnddate <= 0) {\r\n      //if date expired do something\r\n      isexpired = true\r\n      fullWidth = 100\r\n      firstline = PercentageConvertation(progressOfTime)\r\n      secondlineWidth = fullWidth - firstline\r\n\r\n      progressofproject = PercentageConvertation(progressOfProject)\r\n      if (progressofproject > 100) {\r\n        progressofproject = 100\r\n      } else {\r\n      }\r\n      diffstartdateplannedenddate =\r\n        (diffstartdateplannedenddate / diffstartdateenddate) * 100\r\n      fullWidthGray = diffstartdateplannedenddate\r\n    }\r\n\r\n    return {\r\n      diffstartdateplannedenddate,\r\n      diffstartdateenddate,\r\n      diffplannedandEnddate,\r\n      fullWidthGray,\r\n      fullWidth,\r\n      progressofproject,\r\n      progressprojecttime,\r\n      secondlineWidth,\r\n      firstline,\r\n      isexpired\r\n    }\r\n  }\r\n}\r\n\r\nconst CleanTypeOfData = (projecttype: string | undefined) => {\r\n  let stringprojectname = \"\"\r\n  if (projecttype === \"S\") {\r\n    stringprojectname = \"Step By Step\"\r\n  } else if (projecttype === \"All\") {\r\n    //pass\r\n  } else if (projecttype === \"Cyc\") {\r\n    //pass\r\n  }\r\n  return stringprojectname\r\n}\r\nconst Convertpercentage = (value: number | any | undefined) => {\r\n  let convertednumber = value * 10\r\n  let converted = Math.round(convertednumber)\r\n  return { converted }\r\n}\r\nconst Convertpercentageforbackend = (value: number | any | undefined) => {\r\n  let convertednumber = value / 100\r\n\r\n  return convertednumber\r\n}\r\n\r\nconst LinearProgressBarCleaningData = (value: number) => {\r\n  let fullwithPlannedEndDate = false\r\n  let fullwithEndDate = false\r\n  let timedifferancevalue = value\r\n  let percentageTimeDifference = Math.abs(Math.round(timedifferancevalue * 10))\r\n  let lenpercentageTimeDifference = Math.abs(\r\n    Math.round(percentageTimeDifference.toString().length)\r\n  )\r\n  let gettenpower = Math.pow(10, lenpercentageTimeDifference - 1)\r\n\r\n  if (percentageTimeDifference < 100) {\r\n    //pass\r\n  } else {\r\n    percentageTimeDifference = Math.abs(\r\n      Math.round((percentageTimeDifference / gettenpower) * 10)\r\n    )\r\n  }\r\n\r\n  if (value < 0) {\r\n    fullwithPlannedEndDate = false\r\n    fullwithEndDate = true\r\n  } else if (value > 0) {\r\n    fullwithPlannedEndDate = true\r\n    fullwithEndDate = false\r\n  }\r\n\r\n  return {\r\n    fullwithPlannedEndDate,\r\n    fullwithEndDate,\r\n    percentageTimeDifference\r\n  }\r\n}\r\nconst truncate = (str: string, cutpoint: number, maxlimitlength: number) => {\r\n  return str.length > maxlimitlength\r\n    ? `${str.substring(0, cutpoint) + \"...\"}`\r\n    : str\r\n}\r\nconst backendDateConverter = (date: string) => {\r\n  let stringDate = date\r\n  let dateVar = stringDate.split(\"-\")\r\n  let strtodate = new Date(dateVar[0] + \"/\" + dateVar[1] + \"/\" + dateVar[2])\r\n  let activemonth: any = strtodate?.getMonth()\r\n  let active: string = \"\"\r\n  let dd = String(strtodate?.getDate()).padStart(2, \"0\")\r\n  let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n\r\n  let yyyy = strtodate?.getFullYear()\r\n  active = mm + \"-\" + dd + \"-\" + yyyy\r\n\r\n  return active\r\n}\r\nconst frontendDatePlus = (date: string, duration: number) => {\r\n  let stringDate = date\r\n  let dateVar = stringDate.split(\"-\")\r\n  let newdate = new Date(dateVar[0] + \"/\" + dateVar[1] + \"/\" + dateVar[2])\r\n  newdate.setDate(newdate.getDate() + duration)\r\n  let activemonth: any = newdate?.getMonth()\r\n  let active: string = \"\"\r\n  let dd = String(newdate?.getDate()).padStart(2, \"0\")\r\n  let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n\r\n  let yyyy = newdate?.getFullYear()\r\n  active = mm + \"-\" + dd + \"-\" + yyyy\r\n  return active\r\n}\r\nconst frontendDatePlus2 = (date: string, duration: number) => {\r\n  let getduration = duration\r\n  let stringDate = date\r\n  let dateVar = stringDate.split(\"-\")\r\n  let newdate = new Date(dateVar[1] + \"/\" + dateVar[2] + \"/\" + dateVar[0])\r\n  let letsadd = new Date(newdate.setDate(newdate.getDate() + getduration))\r\n\r\n  let activemonth: any = newdate?.getMonth()\r\n  let active: string = \"\"\r\n  let dd = String(newdate?.getDate()).padStart(2, \"0\")\r\n  let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n\r\n  let yyyy = newdate?.getFullYear()\r\n  active = mm + \"-\" + dd + \"-\" + yyyy\r\n  return active\r\n}\r\nconst useContainerDimensions = myRef => {\r\n  const getDimensions = () => ({\r\n    width: myRef.current.offsetWidth,\r\n    height: myRef.current.offsetHeight\r\n  })\r\n\r\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 })\r\n\r\n  React.useEffect(() => {\r\n    const handleResize = () => {\r\n      setDimensions(getDimensions())\r\n    }\r\n\r\n    if (myRef.current) {\r\n      setDimensions(getDimensions())\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize)\r\n    }\r\n  }, [myRef])\r\n\r\n  return dimensions\r\n}\r\n\r\nexport {\r\n  CleanTypeOfData,\r\n  Convertpercentage,\r\n  ConvertDateFormat,\r\n  LinearProgressBarCleaningData,\r\n  calculateMilestonesPositioning,\r\n  truncate,\r\n  backendDateConverter,\r\n  frontendDatePlus,\r\n  Convertpercentageforbackend,\r\n  frontendDatePlus2,\r\n  useContainerDimensions\r\n}\r\n","import { Box, CircularProgress } from \"@material-ui/core\"\r\nimport React, { Component } from \"react\"\r\nimport { TopHeaderLeftBıgProgressIcon } from \"./ConstantUi\"\r\nimport BıgProgressIcon from \"../../static/svgicon/bigprogressicon.svg\"\r\nimport {\r\n  Convertpercentage,\r\n  PercentageConvertation\r\n} from \"../../functions/cleaningData\"\r\nimport { REFUSED } from \"dns\"\r\n\r\nexport interface CircleProgressContentProps {\r\n  smallSize?: boolean\r\n  progressvalue?: number | any\r\n  mediumSize?: boolean\r\n  treeView?: boolean\r\n  mainone?: boolean\r\n  edittab?: boolean\r\n}\r\n\r\nconst CircleProgressContent: React.FC<CircleProgressContentProps> = props => {\r\n  React.useEffect(() => {\r\n    console.log(\r\n      \"checkhtah\",\r\n      props.progressvalue,\r\n      PercentageConvertation(props.progressvalue)\r\n    )\r\n  }, [])\r\n  let checkitout: any = props.mainone || props.treeView\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\" visibility={\"visible\"}>\r\n      <CircularProgress\r\n        style={{\r\n          height: props.smallSize\r\n            ? props.mediumSize\r\n              ? \"70px\"\r\n              : \"48px\"\r\n            : \"188px\",\r\n          width: props.smallSize\r\n            ? props.mediumSize\r\n              ? \"70px\"\r\n              : \"48px\"\r\n            : \"188px\",\r\n          color: \"yellow\",\r\n          zIndex: 999\r\n        }}\r\n        thickness={5}\r\n        variant=\"determinate\"\r\n        value={\r\n          props.progressvalue >= 1\r\n            ? 100\r\n            : PercentageConvertation(props.progressvalue)\r\n        }\r\n      />\r\n      <Box\r\n        style={{\r\n          height: props.smallSize\r\n            ? props.mediumSize\r\n              ? \"70px\"\r\n              : \"48px\"\r\n            : \"188px\",\r\n          width: props.smallSize\r\n            ? props.mediumSize\r\n              ? \"70px\"\r\n              : \"48px\"\r\n            : \"188px\"\r\n        }}\r\n        top={0}\r\n        left={props.smallSize ? -1.5 : 0}\r\n        bottom={props.smallSize ? -3 : 0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <TopHeaderLeftBıgProgressIcon\r\n          small={props.smallSize}\r\n          medium={props.mediumSize}\r\n          src={BıgProgressIcon}\r\n        ></TopHeaderLeftBıgProgressIcon>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            textAlign: \"center\",\r\n            height: \"80%\",\r\n            width: \"80%\",\r\n            minHeight: \"80%\",\r\n            minWidth: \"80%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor:\r\n              props.smallSize || props.mediumSize ? \"#373752\" : \"#32324D\",\r\n            borderRadius: props.smallSize || props.mediumSize ? \"80%\" : \"50%\",\r\n            display: \"inline-flex\",\r\n            color: \"rgba(240, 240, 255, 1)\"\r\n          }}\r\n        >\r\n          {checkitout && (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                fontFamily: \"aileron\",\r\n                fontSize: props.treeView ? \"25px\" : \"50px\",\r\n                fontStyle: \"normal\",\r\n                fontWeight: 400,\r\n                lineHeight: \"86px\",\r\n                letterSpacing: \"0em\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              {props.progressvalue > 1\r\n                ? \">100\"\r\n                : PercentageConvertation(props.progressvalue) == 0\r\n                ? \" \"\r\n                : Math.ceil(PercentageConvertation(props.progressvalue))}\r\n              <div\r\n                style={{\r\n                  display: \"inline-flex\",\r\n                  fontFamily: \"aileron\",\r\n                  fontSize: props.treeView ? \"10px\" : \"36px\",\r\n                  fontStyle: \"normal\",\r\n                  fontWeight: 400,\r\n                  lineHeight: \"43px\",\r\n                  letterSpacing: \"0em\",\r\n                  textAlign: \"left\",\r\n                  alignItems: \"center\"\r\n                }}\r\n              >\r\n                {PercentageConvertation(props.progressvalue) == 0 ? \" \" : \"%\"}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CircleProgressContent\r\n","import React from \"react\"\r\nimport axios from \"../../functions/axios\"\r\nimport styled from \"styled-components\"\r\nimport ProgressBar from \"../../static/svgicon/progressbar.svg\"\r\nimport SubProjectBoxIcon from \"../../static/svgicon/subprojectelement.svg\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { JsxElement } from \"typescript\"\r\nimport {\r\n  GoalText,\r\n  HeaderTextContainer,\r\n  MainProjectContainer,\r\n  ProgressBarContainer,\r\n  ProgressBarImage,\r\n  ProjectContentBox,\r\n  ProjectNameContainer,\r\n  ProjectOverviewContentBox,\r\n  ProjectOverviewHeaderBox,\r\n  ProjectOverviewWrapper,\r\n  SubProjectGroup,\r\n  SubSubProjectBox,\r\n  SubSubProjectItem\r\n} from \"../ui/ConstantUi\"\r\nimport CircleProgressContent from \"../ui/CircleProgressContent\"\r\n\r\nconst SubSubProjectGroupBox = styled.div``\r\ninterface OverviewProjectProps {\r\n  children: JsxElement[]\r\n}\r\ninterface LoadedDataProps {\r\n  data: any\r\n  key: number\r\n}\r\n\r\nconst OverviewProject: React.FC<OverviewProjectProps> = props => {\r\n  const [data, setData] = React.useState<any[] | null>()\r\n  const getdata = async () => {\r\n    await axios\r\n      .get(`project/all/`)\r\n      .then(res => {\r\n        res.data.length > 0 ? setData(res.data) : setData(null)\r\n      })\r\n      .catch(err => prompt(err))\r\n  }\r\n  React.useEffect(() => {\r\n    getdata()\r\n  }, [])\r\n  const history = useHistory()\r\n\r\n  const LoadedData = (props: LoadedDataProps) => {\r\n    const [onMouse, setOnMouse] = React.useState<boolean>(false)\r\n    console.log(data)\r\n    return (\r\n      <ProjectOverviewWrapper\r\n        onMouseEnter={() => setOnMouse(true)}\r\n        onMouseLeave={() => {\r\n          setOnMouse(false)\r\n        }}\r\n        id={props.data.id}\r\n        mouseOver={onMouse}\r\n        key={props.key}\r\n        onClick={() => history.push(`/project/detail/${props.data.id}`)}\r\n      >\r\n        <ProjectOverviewContentBox>\r\n          <ProjectOverviewHeaderBox>\r\n            <ProgressBarContainer>\r\n              <CircleProgressContent\r\n                smallSize\r\n                mediumSize\r\n                progressvalue={props.data.goalAchievingProbability}\r\n              ></CircleProgressContent>\r\n            </ProgressBarContainer>\r\n            <HeaderTextContainer>\r\n              <GoalText>Goal</GoalText>\r\n              <ProjectNameContainer>\r\n                {props.data.isnamechanged === true\r\n                  ? props.data.goal\r\n                  : \"Project #\" + props.data.id}\r\n              </ProjectNameContainer>\r\n            </HeaderTextContainer>\r\n          </ProjectOverviewHeaderBox>\r\n          <ProjectContentBox>\r\n            <MainProjectContainer>\r\n              <SubSubProjectBox>\r\n                <SubProjectGroup>\r\n                  <SubSubProjectItem\r\n                    src={SubProjectBoxIcon}\r\n                  ></SubSubProjectItem>\r\n                  <SubSubProjectItem\r\n                    src={SubProjectBoxIcon}\r\n                  ></SubSubProjectItem>\r\n                </SubProjectGroup>\r\n                <SubProjectGroup>\r\n                  <SubSubProjectItem\r\n                    src={SubProjectBoxIcon}\r\n                  ></SubSubProjectItem>\r\n                  <SubSubProjectItem\r\n                    src={SubProjectBoxIcon}\r\n                  ></SubSubProjectItem>\r\n                </SubProjectGroup>\r\n              </SubSubProjectBox>\r\n            </MainProjectContainer>\r\n          </ProjectContentBox>\r\n        </ProjectOverviewContentBox>\r\n      </ProjectOverviewWrapper>\r\n    )\r\n  }\r\n\r\n  return data ? (\r\n    <>\r\n      {data?.map((data: any, index: number) => {\r\n        return <LoadedData data={data} key={index}></LoadedData>\r\n      })}\r\n    </>\r\n  ) : (\r\n    <h2>Project Not Created</h2>\r\n  )\r\n}\r\n\r\nexport default OverviewProject\r\n","export default __webpack_public_path__ + \"static/media/userDefault.f2aaa98e.svg\";","export default __webpack_public_path__ + \"static/media/iflogo.9c5fc5f2.svg\";","export default __webpack_public_path__ + \"static/media/searchbutton.afd34be1.svg\";","export default __webpack_public_path__ + \"static/media/milestonetab.2d37cf3a.svg\";","export default __webpack_public_path__ + \"static/media/addicon.6132b434.svg\";","import { TextField } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ReactDOM from \"react-dom\"\r\nimport axios from \"../../functions/axios\"\r\nimport { truncate } from \"../../functions/cleaningData\"\r\n\r\nexport interface EditFormProjectProps {\r\n  id?: string\r\n  user?: string\r\n  typeofproject?: string\r\n  defaultValue?: any\r\n  isnamechanged?: boolean\r\n  callbackFunction?: any\r\n  ismilestoneedit?: boolean\r\n  issmall?: boolean\r\n  milestoneid?: string\r\n}\r\n\r\nexport const SubmitButton = styled.button`\r\n  display: none;\r\n  width: 0;\r\n  opacity: 0;\r\n  height: 0;\r\n  cursor: none;\r\n  z-index: -9999;\r\n`\r\nexport const ProjectGoalLabel = styled.span<{ isFocused?: boolean }>`\r\n  color: rgba(228, 220, 0, 1);\r\n  font-size: 18px;\r\n  position: relative;\r\n  top: ${p => (p.isFocused ? \"15px\" : \"20px\")};\r\n  transition: top 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;\r\n`\r\nconst EditForm: React.FC<EditFormProjectProps> = props => {\r\n  const projectnameinputref = React.useRef<any>()\r\n  const editformref = React.useRef<React.MutableRefObject<any> | any>()\r\n  const [activeProjectName, setActiveProjectName] = React.useState<\r\n    string | any\r\n  >(props.defaultValue)\r\n  const SubmitButtonRef = React.useRef<React.MutableRefObject<any> | any>()\r\n\r\n  const [isFocus, setisFocus] = React.useState<boolean>(false)\r\n  const handleProjectNameSubmit = (e: any) => {\r\n    e.preventDefault()\r\n    if (\r\n      activeProjectName.length < 70 &&\r\n      activeProjectName !== \"\" &&\r\n      activeProjectName !== props.defaultValue\r\n    ) {\r\n      setisFocus(false)\r\n\r\n      projectnameinputref.current.blur()\r\n      axios\r\n        .put(`project/detail/${props.id}`, {\r\n          user: props.user,\r\n          typeofproject: props.typeofproject,\r\n          goal:\r\n            activeProjectName.charAt(0).toUpperCase() +\r\n            activeProjectName.slice(1),\r\n          isnamechanged: true\r\n        })\r\n        .then(res => {\r\n          props.callbackFunction()\r\n        })\r\n        .catch(err => prompt(err))\r\n    } else if (\r\n      activeProjectName.length < 70 &&\r\n      props.defaultValue !== \"\" &&\r\n      activeProjectName !== props.defaultValue\r\n    ) {\r\n      axios\r\n        .put(`project/detail/${props.id}`, {\r\n          user: props.user,\r\n          typeofproject: props.typeofproject,\r\n          goal: null,\r\n          isnamechanged: true\r\n        })\r\n        .then(res => {\r\n          props.callbackFunction()\r\n        })\r\n        .catch(err => prompt(err))\r\n    }\r\n  }\r\n  const handleMilestoneNameSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n    if (\r\n      activeProjectName.length < 70 &&\r\n      activeProjectName !== \"\" &&\r\n      activeProjectName !== props.defaultValue\r\n    ) {\r\n      await axios\r\n        .put(`project/detail/milestones/${props.milestoneid}`, {\r\n          goal:\r\n            activeProjectName.charAt(0).toUpperCase() +\r\n            activeProjectName.slice(1)\r\n        })\r\n        .then(res => {\r\n          props.callbackFunction()\r\n        })\r\n        .catch(err => prompt(err))\r\n    } else if (\r\n      activeProjectName.length < 70 &&\r\n      props.defaultValue !== \"\" &&\r\n      activeProjectName !== props.defaultValue\r\n    ) {\r\n      await axios\r\n        .put(`project/detail/milestones/${props.milestoneid}`, {\r\n          goal: null\r\n        })\r\n        .then(res => {\r\n          props.callbackFunction()\r\n        })\r\n        .catch(err => prompt(err))\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <ProjectGoalLabel style={{ marginBottom: \"10px\" }} isFocused={isFocus}>\r\n        {props.ismilestoneedit ? \"Goal\" : \"Project Goal\"}\r\n      </ProjectGoalLabel>\r\n      <form\r\n        method=\"put\"\r\n        id=\"projectgoalform\"\r\n        onSubmit={\r\n          props.ismilestoneedit\r\n            ? handleMilestoneNameSubmit\r\n            : handleProjectNameSubmit\r\n        }\r\n        ref={editformref}\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"100%\"\r\n        }}\r\n      >\r\n        <TextField\r\n          onChange={e => {\r\n            setActiveProjectName(e.currentTarget.value)\r\n          }}\r\n          error={activeProjectName.length > 69}\r\n          helperText={\r\n            activeProjectName.length > 69\r\n              ? props.ismilestoneedit\r\n                ? \"The milestone goal name cannot contain more than 70 characters.\"\r\n                : \"The project name cannot contain more than 70 characters.\"\r\n              : null\r\n          }\r\n          inputRef={projectnameinputref}\r\n          fullWidth\r\n          InputLabelProps={{\r\n            shrink: false,\r\n            style: {\r\n              color: \"rgba(240, 240, 255, 1)\",\r\n              fontSize: props.issmall ? \"18px\" : \"24px\",\r\n              fontStyle: \"normal\",\r\n              fontWeight: \"bold\",\r\n              lineHeight: props.issmall ? \"21.6px\" : \"25px\",\r\n              letterSpacing: \"0em\",\r\n              textAlign: \"left\"\r\n            }\r\n          }}\r\n          onFocus={() => {\r\n            setisFocus(true)\r\n          }}\r\n          onBlur={() => {\r\n            setisFocus(false)\r\n            SubmitButtonRef.current.click()\r\n          }}\r\n          name=\"Project name here\"\r\n          // placeholder={props.isnamechanged ? \" \" : props.defaultValue}\r\n          defaultValue={activeProjectName !== \"\" ? activeProjectName : null}\r\n          placeholder={\r\n            activeProjectName === \"\"\r\n              ? props.ismilestoneedit\r\n                ? \"Type your milestone goal here...\"\r\n                : \"Type your project name here...\"\r\n              : activeProjectName\r\n          }\r\n          inputProps={{ maxLength: 70 }}\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            style: {\r\n              color: \"rgba(240, 240, 255, 1)\",\r\n              fontSize: \"24px\",\r\n              fontStyle: \"normal\",\r\n              fontWeight: \"bold\",\r\n              lineHeight: \"29px\",\r\n              letterSpacing: \"0em\",\r\n              textAlign: \"left\"\r\n            }\r\n          }}\r\n        />\r\n        <SubmitButton ref={SubmitButtonRef} type=\"submit\"></SubmitButton>\r\n      </form>\r\n      <span\r\n        style={{\r\n          display: \"flex;\",\r\n          boxSizing: \"border-box\",\r\n          fill: \"rgba(240, 240, 255, 1)\",\r\n          maxHeight: \"1px\",\r\n          minHeight: \"1px\",\r\n          borderRadius: \"5px\",\r\n          backgroundColor: \" rgba(240, 240, 255, 1)\"\r\n        }}\r\n      ></span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditForm\r\n","import { LeftAsideContent2 } from \"../components/ui/ConstantUi\"\r\nimport axios from \"./axios\"\r\nimport {\r\n  backendDateConverter,\r\n  dateDifference,\r\n  frontendDatePlus,\r\n  frontendDatePlus2\r\n} from \"./cleaningData\"\r\ninterface DurationUpdateNeeds {\r\n  currentMilestones: []\r\n  durationNumber: number\r\n  callbackFunction: any\r\n  currentOneStartDate: any\r\n}\r\nconst findIDobj = (id: string, findid: string) => {\r\n  return\r\n}\r\nexport const durationUpdate = async (\r\n  durationNumber: any,\r\n  callbackFunction: any,\r\n  currentOneid: any,\r\n  currentMilestones: any[]\r\n) => {\r\n  const promises: any = []\r\n  let currentDuration = 0\r\n  currentDuration = durationNumber\r\n  const getchangedarr: any = await currentMilestones.filter(\r\n    currentMilestone => {\r\n      return currentMilestone.id == currentOneid\r\n    }\r\n  )\r\n  const getchangedarrStartDate = await getchangedarr.map(elm => {\r\n    return backendDateConverter(elm.startDate)\r\n  })\r\n  const getchangedDueDate = await getchangedarr.map(elm => {\r\n    return frontendDatePlus(elm.startDate, currentDuration)\r\n  })\r\n  const getchangedMainProject = await getchangedarr.map(elm => {\r\n    return elm.main_project\r\n  })\r\n  const getchangedRelativeProgress = await getchangedarr.map(elm => {\r\n    return elm.relativeProgress\r\n  })\r\n  const getchangedProgress = await getchangedarr.map(elm => {\r\n    return elm.progress\r\n  })\r\n\r\n  const arrfirst = [\r\n    {\r\n      id: currentOneid,\r\n      startDate: getchangedarrStartDate[0],\r\n      dueDate: getchangedDueDate[0],\r\n      duration: currentDuration,\r\n      main_project: getchangedMainProject[0],\r\n      relativeProgress: getchangedRelativeProgress[0],\r\n      progress: getchangedProgress[0]\r\n    }\r\n  ]\r\n  let ReadyToSend = new Date()\r\n  const willchangearr = currentMilestones.filter((element, index) => {\r\n    console.log(\r\n      \"PROBLEMHERE\",\r\n      ReadyToSend,\r\n      new Date(String(getchangedarrStartDate[0])),\r\n      new Date(String(element.startDate)),\r\n      ReadyToSend < new Date(String(element.startDate))\r\n    )\r\n    if (index === 0) {\r\n      ReadyToSend = element.startDate\r\n      //pass\r\n    } else {\r\n      return new Date(String(ReadyToSend)) < new Date(String(element.startDate))\r\n    }\r\n  })\r\n  console.log(\"CHECKHEREDUDE\", willchangearr)\r\n\r\n  let arr: any = willchangearr\r\n  willchangearr.forEach((item, index) => {\r\n    if (index == 0) {\r\n      arr[index] = {\r\n        id: item.id,\r\n        startDate: getchangedDueDate[0],\r\n        dueDate: frontendDatePlus(getchangedDueDate[0], item.duration),\r\n        goal: item.goal,\r\n        duration: item.duration,\r\n        main_project: getchangedMainProject[0],\r\n        relativeProgress: item.relativeProgress,\r\n        progress: item.progress\r\n      }\r\n    } else {\r\n      arr[index] = {\r\n        id: item.id,\r\n        startDate: arr[index - 1].dueDate,\r\n        dueDate: frontendDatePlus(arr[index - 1].dueDate, item.duration),\r\n        goal: item.goal,\r\n        duration: item.duration,\r\n        main_project: getchangedMainProject[0],\r\n        relativeProgress: item.relativeProgress,\r\n        progress: item.progress\r\n      }\r\n    }\r\n  })\r\n\r\n  let endResult = await arrfirst.concat(arr)\r\n\r\n  endResult.map((result, index) => {\r\n    promises.push(\r\n      axios.put(`project/detail/milestones/${result.id}`, {\r\n        startDate: result.startDate,\r\n        dueDate: result.dueDate,\r\n        duration: result.duration,\r\n        relativeProgress: result.relativeProgress,\r\n        progress: result.progress\r\n      })\r\n    )\r\n  })\r\n  console.log(\"ENNDDD GAME\", endResult)\r\n  await Promise.all(promises).then(async responses =>\r\n    console.log(\"Durations updated\")\r\n  )\r\n}\r\nexport const dueDateUpdate = async (\r\n  newDueDate: any,\r\n  callbackFunction: any,\r\n  currentOneid: any,\r\n  currentMilestones: any[]\r\n) => {\r\n  const promises: any = []\r\n  let activeData = new Date(String(backendDateConverter(newDueDate)))\r\n\r\n  // var diff = Math.abs(date1 - date2);\r\n  const getchangedarr: any = await currentMilestones.filter(\r\n    currentMilestone => {\r\n      return currentMilestone.id == currentOneid\r\n    }\r\n  )\r\n  const getchangedarrStartDate = await getchangedarr.map(elm => {\r\n    return elm.startDate\r\n  })\r\n  const getchangedDueDate = activeData\r\n  const getchangedMainProject = await getchangedarr.map(elm => {\r\n    return elm.main_project\r\n  })\r\n  const getchangedRelativeProgress = await getchangedarr.map(elm => {\r\n    return elm.relativeProgress\r\n  })\r\n  const getchangedProgress = await getchangedarr.map(elm => {\r\n    return elm.progress\r\n  })\r\n  const getchangedDuration = await getchangedarr.map(elm => {\r\n    return elm.duration\r\n  })\r\n  let dateVar = newDueDate.split(\"-\")\r\n  let newdate = new Date(dateVar[2] + \"/\" + dateVar[0] + \"/\" + dateVar[1])\r\n  const durationcalculated: any = dateDifference(\r\n    newdate,\r\n    new Date(String(getchangedarrStartDate[0]))\r\n  )\r\n  console.log(\r\n    \"HEREEEE LASTT ONEE \",\r\n    newdate,\r\n    getchangedDueDate,\r\n    newDueDate,\r\n    new Date(String(activeData)),\r\n    durationcalculated,\r\n    backendDateConverter(newDueDate),\r\n    activeData,\r\n    getchangedarrStartDate[0],\r\n    new Date(getchangedarrStartDate[0]),\r\n    new Date(String(getchangedarrStartDate[0]))\r\n  )\r\n  const arrfirst = [\r\n    {\r\n      id: currentOneid,\r\n      startDate: backendDateConverter(getchangedarrStartDate[0]),\r\n      dueDate: backendDateConverter(newDueDate),\r\n      duration: durationcalculated,\r\n      main_project: getchangedMainProject[0],\r\n      relativeProgress: getchangedRelativeProgress[0],\r\n      progress: getchangedProgress[0]\r\n    }\r\n  ]\r\n  let ReadyToSend = new Date()\r\n\r\n  const willchangearr = currentMilestones.filter((element, index) => {\r\n    console.log(\r\n      \"PROBLEMHERE\",\r\n      ReadyToSend,\r\n      new Date(String(getchangedarrStartDate[0])),\r\n      new Date(String(element.startDate)),\r\n      ReadyToSend < new Date(String(element.startDate))\r\n    )\r\n    if (index === 0) {\r\n      ReadyToSend = element.startDate\r\n      //pass\r\n    } else {\r\n      return new Date(String(ReadyToSend)) < new Date(String(element.startDate))\r\n    }\r\n  })\r\n  console.log(\"CHECKHEREDUDE\", willchangearr)\r\n  let arr: any = willchangearr\r\n  willchangearr.forEach((item, index) => {\r\n    if (index == 0) {\r\n      arr[index] = {\r\n        id: item.id,\r\n        startDate: backendDateConverter(newDueDate),\r\n        dueDate: frontendDatePlus(newDueDate, item.duration),\r\n        goal: item.goal,\r\n        duration: item.duration,\r\n        relativeProgress: item.relativeProgress,\r\n        progress: item.progress\r\n      }\r\n    } else {\r\n      arr[index] = {\r\n        id: item.id,\r\n        startDate: arr[index - 1].dueDate,\r\n        dueDate: frontendDatePlus(arr[index - 1].dueDate, item.duration),\r\n        goal: item.goal,\r\n        duration: item.duration,\r\n        relativeProgress: item.relativeProgress,\r\n        progress: item.progress\r\n      }\r\n    }\r\n  })\r\n  let endResult = await arrfirst.concat(arr)\r\n\r\n  endResult.map(async (result, index) => {\r\n    await promises.push(\r\n      axios.put(`project/detail/milestones/${result.id}`, {\r\n        startDate: result.startDate,\r\n        dueDate: result.dueDate,\r\n        duration: result.duration,\r\n        relativeProgress: result.relativeProgress,\r\n        progress: result.progress\r\n      })\r\n    )\r\n  })\r\n\r\n  await Promise.all(promises)\r\n    .then(async responses => console.log(\"dueDate updated\"))\r\n    .catch(err => console.log(err))\r\n  console.log(\"CALCULATED\", endResult)\r\n}\r\n\r\nexport const getTotals = async (project_id: string, callback: any) => {\r\n  let totalRelativeProgress = 0\r\n  let totalDuration = 0\r\n  let curretMilestonetype = \" \"\r\n  let currentMilestoneuser = \" \"\r\n  let promises1: any = []\r\n  let milestones: any = []\r\n  let arr: any = milestones\r\n  console.log(\"PROJECTID\", project_id)\r\n  await axios.get(`project/detail/${project_id}`).then(res => {\r\n    milestones = res.data\r\n    currentMilestoneuser = res.data.user\r\n    curretMilestonetype = res.data.typeofproject\r\n  })\r\n  console.log(\"RELATİVESS\", milestones)\r\n\r\n  await milestones.milestones.map((currentMilestoneData: any) => {\r\n    totalDuration += currentMilestoneData.duration\r\n  })\r\n  // await milestones.milestones.map((currentMilestoneData: any) => {\r\n  //   totalRelativeProgress += currentMilestoneData.relativeProgress\r\n  // })\r\n\r\n  await milestones.milestones.forEach((result, index) => {\r\n    arr[index] = {\r\n      id: result.id,\r\n      relativeProgress: result.progress * (result.duration / totalDuration)\r\n    }\r\n  })\r\n\r\n  await arr.forEach((result, index) => {\r\n    promises1.push(\r\n      axios.put(`project/detail/milestones/${result.id}`, {\r\n        relativeProgress: result.relativeProgress\r\n      })\r\n    )\r\n  })\r\n  console.log(\"ARRR\", arr, promises1)\r\n  await Promise.all(promises1).then(responses => {\r\n    console.log(\"relativeProgressUpdated\")\r\n  })\r\n  await arr.forEach((result, index) => {\r\n    totalRelativeProgress += result.relativeProgress\r\n  })\r\n\r\n  console.log(\"doublecheck\", totalRelativeProgress)\r\n  await axios\r\n    .put(`project/detail/${project_id}`, {\r\n      user: \"Fatih\",\r\n      typeofproject: curretMilestonetype,\r\n      progressOfProject: totalRelativeProgress\r\n    })\r\n    .then(res => {\r\n      console.log(\"ProgressofProjectUpdated\")\r\n      callback()\r\n    })\r\n\r\n  // i.relativeProgress = i.progress * (i.duration / totalduration)\r\n  // await axios.put(`project/detail/milestones/${result.id})\r\n}\r\nexport const progressUpdate = async (\r\n  currentMilestone: any[],\r\n  currentProgress: number,\r\n  currentOneid: string\r\n) => {\r\n  const getchangedarrStartDate = await currentMilestone.map(elm => {\r\n    return elm.progress\r\n  })\r\n}\r\n","export default __webpack_public_path__ + \"static/media/calendar.0684814e.svg\";","import \"date-fns\"\r\nimport React from \"react\"\r\nimport DateFnsUtils from \"@date-io/date-fns\"\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\"\r\nimport styled from \"styled-components\"\r\nimport CalendarIcon from \"../../static/svgicon/calendar.svg\"\r\nimport { CleanTypeOfData } from \"../../functions/cleaningData\"\r\n\r\ninterface DatePickerProps {\r\n  defaultStartData?: string | any\r\n  defaultPlannedEndData?: string | any\r\n  handleStartDate: any\r\n  handleEndDate: any\r\n  projecttype?: string\r\n  ismilestoneedit?: boolean\r\n  milestones:any\r\n}\r\n\r\nconst DatePickerContainer = styled.div<{ width: number }>`\r\n  display: flex;\r\n  width: ${p => p.width}%;\r\n  justify-content: space-between;\r\n`\r\nconst DetailContentHeader = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`\r\n\r\nconst ProjectTypeContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  flex-direction: column;\r\n  width: 65%;\r\n`\r\nconst ProjectTypeLabelText = styled.div`\r\n  display: flex;\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  justify-content: flex-end;\r\n  color: rgba(228, 220, 0, 0.7);\r\n`\r\nconst ExactProjectText = styled.div`\r\n  display: flex;\r\n  color: rgba(240, 240, 255, 0.7);\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  justify-content: flex-end;\r\n`\r\nconst CalendarIconComp = styled.img``\r\n\r\nconst DatePicker: React.FC<DatePickerProps> = props => {\r\n  type FontWeight =\r\n    | \"normal\"\r\n    | \"bold\"\r\n    | \"100\"\r\n    | \"200\"\r\n    | \"300\"\r\n    | \"400\"\r\n    | \"500\"\r\n    | \"600\"\r\n    | \"700\"\r\n    | \"800\"\r\n    | \"900\"\r\n\r\n  const boldText = {\r\n    fontWeight: \"400\" as FontWeight\r\n  }\r\n  // The first commit of Material-UI\r\n\r\n  const [ActiveStartDate, setActiveStartDate] = React.useState<any | Date>(\r\n    props.defaultStartData\r\n  )\r\n  const [onFocus, setOnFocus] = React.useState<boolean>(false)\r\n  const [ActivePlannedDate, setActivePlannedDate] = React.useState<any>(\r\n    props.defaultPlannedEndData\r\n  )\r\n\r\n  const handleStartDateChange = (date: any | null) => {\r\n    setActiveStartDate(date)\r\n    // const strdata =\r\n    //   ActiveStartDate?.getDate() +\r\n    //   \"-\" +\r\n    //   ActiveStartDate?.getMonth() +\r\n    //   \"-\" +\r\n    //   ActiveStartDate?.getFullYear()\r\n    props.handleStartDate(date)\r\n  }\r\n  const handlePlanningEndDateChange = (date: any | null) => {\r\n    setActivePlannedDate(date)\r\n    props.handleEndDate(date)\r\n  }\r\n  React.useEffect(() => {\r\n    if (onFocus === true) {\r\n      const getbutton = document.getElementsByClassName(\r\n        \"MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary\"\r\n      )\r\n      getbutton[0].setAttribute(\"type\", \"submit\")\r\n      getbutton[1].setAttribute(\"type\", \"submit\")\r\n      getbutton[0].setAttribute(\"form\", \"datepickerform\")\r\n      getbutton[1].setAttribute(\"form\", \"datepickerform\")\r\n    }\r\n  }, [onFocus])\r\n  let CannotBeEqual = new Date(props.defaultStartData)\r\n  CannotBeEqual.setDate(CannotBeEqual.getDate())\r\n  console.log(CannotBeEqual)\r\n  return (\r\n    <DetailContentHeader>\r\n      <DatePickerContainer width={props.ismilestoneedit ? 86 : 35}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          {!props.ismilestoneedit && (\r\n            <KeyboardDatePicker\r\n              margin={\"normal\"}\r\n              id=\"date-picker-dialog\"\r\n              label=\"Start Date\"\r\n              format=\"MM/dd/yyyy\"\r\n              allowKeyboardControl={false}\r\n              value={ActiveStartDate}\r\n              InputLabelProps={{\r\n                style: {\r\n                  color: \"rgba(228, 220, 0, 1)\",\r\n                  fontSize: \"18px\",\r\n                  fontStyle: \"normal\",\r\n                  fontWeight: \"bold\",\r\n                  lineHeight: \"25px\",\r\n                  letterSpacing: \"0em\",\r\n                  textAlign: \"left\"\r\n                }\r\n              }}\r\n              InputProps={{\r\n                readOnly: true,\r\n                style: {\r\n                  borderBottom: \"2px solid white\",\r\n                  color: \"rgba(240, 240, 255, 0.7)\"\r\n                }\r\n              }}\r\n              DialogProps={{\r\n                onFocus: () => {\r\n                  setOnFocus(true)\r\n                },\r\n                onBlur: () => {\r\n                  setOnFocus(false)\r\n                }\r\n              }}\r\n              onChange={(e: any) => {\r\n                setActiveStartDate(e)\r\n                // const strdata =\r\n                //   ActiveStartDate?.getDate() +\r\n                //   \"-\" +\r\n                //   ActiveStartDate?.getMonth() +\r\n                //   \"-\" +\r\n                //   ActiveStartDate?.getFullYear()\r\n                props.handleStartDate(e)\r\n              }}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\"\r\n              }}\r\n              keyboardIcon={\r\n                <CalendarIconComp src={CalendarIcon}></CalendarIconComp>\r\n              }\r\n            />\r\n          )}\r\n          <KeyboardDatePicker\r\n            margin={props.ismilestoneedit ? \"none\" : \"normal\"}\r\n            id=\"date-picker-dialog\"\r\n            label={props.ismilestoneedit ? \"\" : \"Planning Date\"}\r\n            format=\"MM/dd/yyyy\"\r\n            minDate={\r\n              props.ismilestoneedit\r\n                ? CannotBeEqual.setDate(CannotBeEqual.getDate() + 1)\r\n                : ActiveStartDate\r\n            }\r\n            value={ActivePlannedDate}\r\n            allowKeyboardControl={false}\r\n            InputLabelProps={{\r\n              style: {\r\n                color: \"rgba(228, 220, 0, 1)\",\r\n                fontSize: \"18px\",\r\n                fontStyle: \"normal\",\r\n                fontWeight: \"bold\",\r\n                lineHeight: \"25px\",\r\n                letterSpacing: \"0em\",\r\n                textAlign: \"left\"\r\n              }\r\n            }}\r\n            keyboardIcon={\r\n              <CalendarIconComp src={CalendarIcon}></CalendarIconComp>\r\n            }\r\n            InputProps={{\r\n              readOnly: true,\r\n              style: {\r\n                borderBottom: \"2px solid white\",\r\n                color: props.ismilestoneedit\r\n                  ? \"rgba(240, 240, 255, 1)\"\r\n                  : \"rgba(240, 240, 255, 0.7)\",\r\n                fontSize: props.ismilestoneedit ? \"18px\" : \"auto\",\r\n                fontStyle: props.ismilestoneedit ? \"normal\" : \"auto\",\r\n                lineHeight: props.ismilestoneedit ? \"22px\" : \"auto\",\r\n                letterSpacing: props.ismilestoneedit ? \"0em\" : \"auto\",\r\n                fontWeight: \"-moz-initial\"\r\n              }\r\n            }}\r\n            DialogProps={{\r\n              onFocus: () => {\r\n                setOnFocus(true)\r\n              },\r\n              onBlur: () => {\r\n                setOnFocus(false)\r\n              }\r\n            }}\r\n            onChange={handlePlanningEndDateChange}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\"\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </DatePickerContainer>\r\n      {!props.ismilestoneedit && (\r\n        <ProjectTypeContainer>\r\n          <ProjectTypeLabelText>Project Type</ProjectTypeLabelText>\r\n          <ExactProjectText>\r\n            {CleanTypeOfData(props.projecttype)}\r\n          </ExactProjectText>\r\n        </ProjectTypeContainer>\r\n      )}\r\n    </DetailContentHeader>\r\n  )\r\n}\r\nexport default DatePicker\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport axios from \"../../functions/axios\"\r\nimport { dueDateUpdate, getTotals } from \"../../functions/process\"\r\nimport DatePicker from \"../ui/DatePicker\"\r\n\r\nconst Form = styled.form`\r\n  height: 20%;\r\n`\r\n\r\nconst SubmitButton = styled.button`\r\n  display: none;\r\n  width: 0;\r\n  opacity: 0;\r\n  height: 0;\r\n  cursor: none;\r\n`\r\nexport interface DatePickerFormProps {\r\n  id?: any\r\n  user?: string\r\n  typeofproject?: string\r\n  defaultStartData?: string\r\n  defaultPlannedEndData?: string\r\n  callbackFunction?: any\r\n  ismilestone?: boolean\r\n  milestones: any\r\n  actualprojectid?: any\r\n}\r\n\r\nconst DatePickerForm: React.FC<DatePickerFormProps> = props => {\r\n  const [activeStartDate, setActiveStartDate] = React.useState<Date | null>(\r\n    null\r\n  )\r\n  const datepickerformref = React.useRef<HTMLFormElement>(null)\r\n  const [activeEndDate, setActiveEndDate] = React.useState<Date | null>(null)\r\n  const [defaultStartDate, setDefaultStartDate] = React.useState<Date | null>()\r\n  const [defaultEndDate, setDefaultEndDate] = React.useState<Date | null>()\r\n  React.useEffect(() => {\r\n    let activeStartDate: any = props.defaultStartData?.split(\"-\")\r\n    let active: any = new Date()\r\n    let activePlannedEndDate: any = props.defaultPlannedEndData?.split(\"-\")\r\n    let active2: any = new Date()\r\n    active =\r\n      activeStartDate[1] + \"-\" + activeStartDate[2] + \"-\" + activeStartDate[0]\r\n    active2 =\r\n      activePlannedEndDate[1] +\r\n      \"-\" +\r\n      activePlannedEndDate[2] +\r\n      \"-\" +\r\n      activePlannedEndDate[0]\r\n    setDefaultStartDate(active)\r\n    setDefaultEndDate(active2)\r\n  }, [])\r\n  const handleActiveStartDate = (date: Date | null) => {\r\n    let activemonth: any = date?.getMonth()\r\n    let active: any = new Date()\r\n    let dd = String(date?.getDate()).padStart(2, \"0\")\r\n    let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n\r\n    let yyyy = date?.getFullYear()\r\n    active = mm + \"-\" + dd + \"-\" + yyyy\r\n\r\n    setActiveStartDate(active)\r\n  }\r\n  const handleActivePlanningEndDate = (date: Date | null) => {\r\n    let active: any = new Date()\r\n    let activemonth: any = date?.getMonth()\r\n    let dd = String(date?.getDate()).padStart(2, \"0\")\r\n    let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n    let yyyy = date?.getFullYear()\r\n    active = mm + \"-\" + dd + \"-\" + yyyy\r\n    setActiveEndDate(active)\r\n  }\r\n  const handleActiveMilestoneEndDate = (date: Date | null) => {\r\n    let active: any = new Date()\r\n    let activemonth: any = date?.getMonth()\r\n    let dd = String(date?.getDate()).padStart(2, \"0\")\r\n    let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n    let yyyy = date?.getFullYear()\r\n    active = mm + \"-\" + dd + \"-\" + yyyy\r\n    setActiveEndDate(active)\r\n  }\r\n  const handleActiveMilestoneStartDate = (date: Date | null) => {\r\n    let activemonth: any = date?.getMonth()\r\n    let active: any = new Date()\r\n    let dd = String(date?.getDate()).padStart(2, \"0\")\r\n    let mm = String(activemonth + 1).padStart(2, \"0\") //January is 0!\r\n\r\n    let yyyy = date?.getFullYear()\r\n    active = mm + \"-\" + dd + \"-\" + yyyy\r\n\r\n    setActiveStartDate(active)\r\n  }\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n    const ActiveStarDateClean = activeStartDate || defaultStartDate\r\n    const ActiveEndDateClean = activeEndDate || defaultEndDate\r\n\r\n    await axios\r\n      .put(`project/detail/${props.id}`, {\r\n        user: props.user,\r\n        typeofproject: props.typeofproject,\r\n        startDate: ActiveStarDateClean,\r\n        plannedEndDate: ActiveEndDateClean\r\n      })\r\n      .then(res => {\r\n        console.log(\"plannedenddate and startDate updated\")\r\n      })\r\n      .catch(err => console.log(err))\r\n    await getTotals(props.id, props.callbackFunction)\r\n  }\r\n\r\n  const handleMilestoneDateSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n    const ActiveStarDateClean = activeStartDate || defaultStartDate\r\n    const ActiveEndDateClean = activeEndDate || defaultEndDate\r\n    await dueDateUpdate(\r\n      ActiveEndDateClean,\r\n      props.callbackFunction,\r\n      props.id,\r\n      props.milestones\r\n    )\r\n    console.log(\"props.id\", props.id)\r\n    await getTotals(props.actualprojectid, props.callbackFunction)\r\n    // await axios\r\n    //   .put(`project/detail/milestones/${props.id}`, {\r\n    //     id: props.id,\r\n    //     dueDate: ActiveEndDateClean\r\n    //   })\r\n    //   .then(res => {\r\n    //     props.callbackFunction()\r\n    //   })\r\n    //   .catch(err => console.log(err))\r\n    console.log(\"milestone end adate checkhere\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        id=\"datepickerform\"\r\n        method=\"post\"\r\n        ref={datepickerformref}\r\n        onSubmit={props.ismilestone ? handleMilestoneDateSubmit : handleSubmit}\r\n      >\r\n        <DatePicker\r\n          milestones={props.milestones}\r\n          ismilestoneedit={props.ismilestone}\r\n          projecttype={props.typeofproject}\r\n          handleStartDate={\r\n            props.ismilestone\r\n              ? handleActiveMilestoneStartDate\r\n              : handleActiveStartDate\r\n          }\r\n          handleEndDate={\r\n            props.ismilestone\r\n              ? handleActiveMilestoneEndDate\r\n              : handleActivePlanningEndDate\r\n          }\r\n          defaultStartData={props.defaultStartData}\r\n          defaultPlannedEndData={props.defaultPlannedEndData}\r\n        ></DatePicker>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\nexport default DatePickerForm\r\n","export default __webpack_public_path__ + \"static/media/discard.20875ae6.svg\";","export default __webpack_public_path__ + \"static/media/accept.afce0fd8.svg\";","import styled from \"styled-components\"\r\nimport React from \"react\"\r\nimport axios from \"../../functions/axios\"\r\nimport { IconButton, FormHelperText, TextField } from \"@material-ui/core\"\r\nimport {\r\n  DescriptionBoxContainer,\r\n  SaveIcon,\r\n  SaveDiscardContainer,\r\n  DiscardIcon\r\n} from \"../ui/ConstantUi\"\r\nimport DiscardSvgIcon from \"../../static/svgicon/discard.svg\"\r\nimport AcceptIcon from \"../../static/svgicon/accept.svg\"\r\nimport { stringify } from \"querystring\"\r\nimport { kStringMaxLength } from \"buffer\"\r\n\r\nexport interface DescriptionBoxTextAreaProps {\r\n  id?: string\r\n  user?: string\r\n  typeofproject?: string\r\n  defaultValue?: string\r\n  firstTimeChange?: boolean\r\n  callbackFunction?: any\r\n  typemilestone?: boolean\r\n  milestoneid?: string\r\n}\r\n\r\nconst DescriptionInput = styled.textarea`\r\n  flex: 1;\r\n  display: block;\r\n  border: none;\r\n  min-width: 0;\r\n  border: none;\r\n  overflow: auto;\r\n  outline: none;\r\n  color: rgba(240, 240, 255, 0.7);\r\n  font-size: 15px;\r\n  padding: 5px;\r\n  font-weight: 400;\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n  overflow-y: auto;\r\n  font-family: aileron;\r\n\r\n  background-color: transparent;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    border-radius: 10px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background: rgba(240, 240, 255, 1);\r\n  }\r\n`\r\n\r\nconst DescriptionBoxTextArea: React.FC<DescriptionBoxTextAreaProps> = props => {\r\n  const [activeDescriptionText, setActiveDescriptionText] = React.useState<\r\n    string | any\r\n  >(props.defaultValue)\r\n  const [withoutSave, setWithoutSave] = React.useState<boolean>(true)\r\n  const [processName, setProcessName] = React.useState<string>(\"\")\r\n  const [defaultValue, setDefaultValue] = React.useState<string | any>(\r\n    props.defaultValue\r\n  )\r\n  const [SaveProps, setSaveProps] = React.useState(false)\r\n  const InputBoxRef = React.useRef<React.MutableRefObject<any> | any>()\r\n  // React.useEffect(() => {\r\n  //   if (processName === \"Discard\" && withoutSave && props.firstTimeChange) {\r\n  //     setActiveDescriptionText(defaultValue)\r\n  //     InputBoxRef.current.value = defaultValue\r\n  //   } else if (processName === \"Discard\" && withoutSave) {\r\n  //     InputBoxRef.current.value = props.defaultValue\r\n  //     setActiveDescriptionText(props.defaultValue)\r\n  //   } else if (processName === \"Discard\") {\r\n  //     if (defaultValue.length == 2) {\r\n  //       setActiveDescriptionText(props.defaultValue)\r\n  //       InputBoxRef.current.value = props.defaultValue\r\n  //     } else if (defaultValue.length > 2) {\r\n  //       setActiveDescriptionText(defaultValue)\r\n  //       InputBoxRef.current.value = defaultValue[defaultValue.length - 2]\r\n  //     } else {\r\n  //       setActiveDescriptionText(defaultValue)\r\n  //       InputBoxRef.current.value = defaultValue[0]\r\n  //     }\r\n  //   }\r\n  // }, [processName])\r\n\r\n  const handleDescriptionBoxSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n\r\n    if (activeDescriptionText === \"\") {\r\n    } else if (\r\n      activeDescriptionText !== \"\" &&\r\n      activeDescriptionText !== props.defaultValue\r\n    ) {\r\n      if (processName === \"Save\") {\r\n        await axios\r\n          .put(`project/detail/${props.id}`, {\r\n            user: props.user,\r\n            typeofproject: props.typeofproject,\r\n            description: activeDescriptionText\r\n          })\r\n          .then(res => {\r\n            // setWithoutSave(false)\r\n            // setDefaultValue([...defaultValue, res.data.description])\r\n            props.callbackFunction()\r\n          })\r\n          .catch(err => prompt(err.response))\r\n      }\r\n    }\r\n  }\r\n  const handleDescriptionForMilestone = async (e: any) => {\r\n    e.preventDefault()\r\n    console.log(\"descr\", props.milestoneid)\r\n    if (activeDescriptionText === \"\") {\r\n    } else {\r\n      if (processName === \"Save\") {\r\n        await axios\r\n          .put(`project/detail/milestones/${props.milestoneid}`, {\r\n            description: activeDescriptionText\r\n          })\r\n          .then(res => {\r\n            console.log(\"YOVVVV\")\r\n            // setWithoutSave(false)\r\n            props.callbackFunction()\r\n          })\r\n          .catch(err => console.log(err))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DescriptionBoxContainer>\r\n        <form\r\n          onSubmit={\r\n            props.typemilestone\r\n              ? handleDescriptionForMilestone\r\n              : handleDescriptionBoxSubmit\r\n          }\r\n          id=\"descriptionboxform\"\r\n          style={{ display: \"flex\", width: \"100%\", flexDirection: \"column\" }}\r\n        >\r\n          <TextField\r\n            style={{\r\n              fontFamily: \"aileron\",\r\n              all: \"inherit\",\r\n              flexBasis: \"100%\",\r\n              cursor: \"text\"\r\n            }}\r\n            ref={InputBoxRef}\r\n            onChange={(e: any) => {\r\n              setActiveDescriptionText(e.target.value)\r\n            }}\r\n            value={activeDescriptionText}\r\n            type=\"text-area\"\r\n            multiline={true}\r\n            InputProps={{\r\n              disableUnderline: true,\r\n              style: {\r\n                all: \"inherit\",\r\n                color: \"rgba(240, 240, 255, 0.7)\",\r\n                fontSize: \"15px\"\r\n              }\r\n            }}\r\n            rowsMax={props.typemilestone ? 6 : 20}\r\n            error={activeDescriptionText?.length > 4999}\r\n            helperText={\r\n              activeDescriptionText.length > 4999 &&\r\n              \"The description cannot contain more than 5000 characters.\"\r\n            }\r\n          ></TextField>\r\n        </form>\r\n      </DescriptionBoxContainer>\r\n      <SaveDiscardContainer>\r\n        <IconButton\r\n          disabled={\r\n            activeDescriptionText === props.defaultValue ||\r\n            activeDescriptionText === \"\"\r\n          }\r\n          onClick={() => {\r\n            setProcessName(\"Save\")\r\n            setSaveProps(true)\r\n          }}\r\n          id=\"savebutton\"\r\n          type=\"submit\"\r\n          form=\"descriptionboxform\"\r\n        >\r\n          <SaveIcon src={AcceptIcon}></SaveIcon>\r\n        </IconButton>\r\n        <IconButton\r\n          disabled={\r\n            activeDescriptionText === props.defaultValue ||\r\n            activeDescriptionText === \"\"\r\n          }\r\n          onBlur={() => {\r\n            setProcessName(\"\")\r\n          }}\r\n          onClick={() => {\r\n            setActiveDescriptionText(props.defaultValue)\r\n          }}\r\n          id=\"discardbutton\"\r\n        >\r\n          <DiscardIcon src={DiscardSvgIcon}></DiscardIcon>\r\n        </IconButton>\r\n      </SaveDiscardContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DescriptionBoxTextArea\r\n","export default __webpack_public_path__ + \"static/media/closemilestonetab.7c172061.svg\";","export default __webpack_public_path__ + \"static/media/treeviewlogo.6f3401e8.svg\";","export default __webpack_public_path__ + \"static/media/smallpointer.05221af5.svg\";","export default __webpack_public_path__ + \"static/media/bigpointer.c0e5df45.svg\";","export default __webpack_public_path__ + \"static/media/milestonepointer.ee3b518f.svg\";","import React, { Component } from \"react\"\r\nimport { TopHeaderStatusBar, TopHeaderStatusBarContainer } from \"./ConstantUi\"\r\nimport StatusBarIcon from \"../../static/svgicon/statusbar.svg\"\r\nimport styled from \"styled-components\"\r\nimport SmallPointer from \"../../static/svgicon/smallpointer.svg\"\r\nimport BigPointer from \"../../static/svgicon/bigpointer.svg\"\r\nimport MilestonePointer from \"../../static/svgicon/milestonepointer.svg\"\r\nimport {\r\n  calculateMilestonesPositioning,\r\n  ConvertDateFormat,\r\n  calculateDatesPositioning,\r\n  PercentageConvertation\r\n} from \"../../functions/cleaningData\"\r\nimport {\r\n  Convertpercentage,\r\n  LinearProgressBarCleaningData\r\n} from \"../../functions/cleaningData\"\r\nimport { Tooltip } from \"@material-ui/core\"\r\n\r\nexport interface LinearProgressBarProps {\r\n  smallSize?: boolean\r\n  mediumSize?: boolean\r\n  isMilestoneEditTab?: boolean\r\n  value?: any[] | any\r\n  milestones?: []\r\n  milestoneprogressOfTime?: any\r\n  milestoneprogress?: any\r\n  milestonestartdate?: any\r\n  milestoneeduedate?: any\r\n}\r\nconst MainContainerBody = styled.div<{ small?: boolean; medium?: boolean }>`\r\n  display: flex;\r\n\r\n  flex-direction: row;\r\n  ${p =>\r\n    p.small\r\n      ? p.medium\r\n        ? \"flex-basis: 100%; min-width: 100%;max-height: 13.18px;min-height: 13.18px;\"\r\n        : \"flex-basis: 20%; min-width: 20%;max-height: 12px;min-height: 12px;\"\r\n      : \"flex-basis: 100%; min-width: 100%;max-height: 23px;min-height: 23px;\"}\r\n\r\n  flex-grow: 0;\r\n  border-radius: 5px;\r\n`\r\nconst MainContainerGrayArea = styled.div<{ width: number }>`\r\n  background: ${p =>\r\n    `linear-gradient(to right, #636380 0%, #636380 ${p.width}%, transparent ${p.width}%, transparent 100%)`};\r\n  display: flex;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  padding: 4.19px 7px 4.27px 7px;\r\n`\r\nconst MainContainerTop = styled.div<{ small?: boolean; medium?: boolean }>`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  position: relative;\r\n  flex-basis: 100%;\r\n  min-width: 100%;\r\n  flex-grow: 0;\r\n  ${p => !p.small && \"max-height: 23px;min-height: 23px;\"}\r\n  border-radius: 5px;\r\n  padding: 4.19px 0 4.27px 0;\r\n`\r\nconst MainContainerBottom = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: row;\r\n  position: relative;\r\n  flex-basis: 100%;\r\n  min-width: 100%;\r\n  flex-grow: 0;\r\n  max-height: 23px;\r\n  min-height: 23px;\r\n  border-radius: 5px;\r\n  padding: 4.19px 7px 4.27px 7px;\r\n`\r\nconst MilestonesIcon = styled.img<{ position: number }>`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  left: ${p => p.position + \"%\"};\r\n`\r\nconst FirstLine = styled.div<{ width: any }>`\r\n  display: flex;\r\n  flex-grow: 0;\r\n  cursor: pointer;\r\n\r\n  background: rgba(240, 240, 255, 0.7);\r\n  border-radius: 5px;\r\n  flex-basis: ${p => p.width + \"%\"};\r\n  min-width: ${p => p.width + \"%\"};\r\n`\r\nconst SecondLine = styled.div<{ width: any }>`\r\n  display: flex;\r\n  cursor: pointer;\r\n  flex-grow: 0;\r\n  background: rgba(228, 220, 0, 1);\r\n  border-radius: 5px;\r\n  flex-basis: ${p => p.width + \"%\"};\r\n  min-width: ${p => p.width + \"%\"};\r\n`\r\nconst SmallPointerIcon = styled.img<{ position?: number }>`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  z-index: 999;\r\n  left: ${p => p.position + \"%\"};\r\n`\r\nconst BigPointerIcon = styled.img<{ position?: number; small?: boolean }>`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  z-index: 0px;\r\n  left: ${p => p.position + \"%\"};\r\n  ${p => p.small && \"width:11px;height:11px;\"}\r\n`\r\nconst PlannedAndDatePointer = styled.img<{ position?: number }>`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  left: ${p => p.position + \"%\"};\r\n`\r\nconst LinearProgressBar: React.FC<LinearProgressBarProps> = props => {\r\n  // React.useEffect(() => {\r\n  //   // console.log(\r\n  //   //   calculateMilestonesPositioning(props.value[6]),\r\n  //   //   \"progress of project\",\r\n  //   //   props.value[4],\r\n  //   //   \"progress time of project\",\r\n  //   //   props.value[3],\r\n  //   //   props.value[6],\r\n  //   //   Convertpercentage(props.value[3]).converted,\r\n  //   //   LinearProgressBarCleaningData(props.value[0]).fullwithEndDate,\r\n  //   //   LinearProgressBarCleaningData(props.value[0]).percentageTimeDifference\r\n  //   // )\r\n  // })\r\n  const getLocationOnProgressBar = (expression: string) => {\r\n    switch (expression) {\r\n      case \"progressofproject\":\r\n        // code block\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).progressofproject\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).progressofproject\r\n\r\n      case \"enddate\":\r\n        // code block\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).fullWidth\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).fullWidth\r\n      case \"GrayLine\":\r\n        return props.isMilestoneEditTab\r\n          ? Math.round(\r\n              calculateDatesPositioning(\r\n                props.milestonestartdate,\r\n                props.milestoneeduedate,\r\n                props.value[1],\r\n                props.value[0],\r\n                props.milestoneprogress,\r\n                props.milestoneprogressOfTime,\r\n                true\r\n              ).firstline\r\n            )\r\n          : Math.round(\r\n              calculateDatesPositioning(\r\n                props.value[5],\r\n                props.value[2],\r\n                props.value[1],\r\n                props.value[0],\r\n                props.value[4],\r\n                props.value[3],\r\n                false\r\n              ).firstline\r\n            )\r\n      case \"YellowLine\":\r\n        return props.isMilestoneEditTab\r\n          ? Math.round(\r\n              calculateDatesPositioning(\r\n                props.milestonestartdate,\r\n                props.milestoneeduedate,\r\n                props.value[1],\r\n                props.value[0],\r\n                props.milestoneprogress,\r\n                props.milestoneprogressOfTime,\r\n                true\r\n              ).secondlineWidth\r\n            )\r\n          : Math.round(\r\n              calculateDatesPositioning(\r\n                props.value[5],\r\n                props.value[2],\r\n                props.value[1],\r\n                props.value[0],\r\n                props.value[4],\r\n                props.value[3],\r\n                false\r\n              ).secondlineWidth\r\n            )\r\n      case \"FullWidth\":\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).fullWidth\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).fullWidth\r\n      case \"Isexpired\":\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).isexpired\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).isexpired\r\n      case \"widthofGray\":\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).fullWidthGray\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).fullWidthGray\r\n      case \"enddate-startdate\":\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).diffstartdateenddate\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).diffstartdateenddate\r\n      case \"plannedenddate-startdate\":\r\n        return props.isMilestoneEditTab\r\n          ? calculateDatesPositioning(\r\n              props.milestonestartdate,\r\n              props.milestoneeduedate,\r\n              props.value[1],\r\n              props.value[0],\r\n              props.milestoneprogress,\r\n              props.milestoneprogressOfTime,\r\n              true\r\n            ).diffstartdateplannedenddate\r\n          : calculateDatesPositioning(\r\n              props.value[5],\r\n              props.value[2],\r\n              props.value[1],\r\n              props.value[0],\r\n              props.value[4],\r\n              props.value[3],\r\n              false\r\n            ).diffstartdateplannedenddate\r\n      default:\r\n        return 0\r\n      // code block\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    console.log(getLocationOnProgressBar(\"progressofproject\") > 100)\r\n  }, [])\r\n  return (\r\n    <TopHeaderStatusBarContainer>\r\n      <MainContainerTop small={props.smallSize}>\r\n        {!props.smallSize && (\r\n          <>\r\n            <Tooltip title={`Start Date ${ConvertDateFormat(props.value[5])}`}>\r\n              <SmallPointerIcon\r\n                id=\"startdate\"\r\n                position={-1}\r\n                src={SmallPointer}\r\n              ></SmallPointerIcon>\r\n            </Tooltip>\r\n          </>\r\n        )}\r\n        <Tooltip\r\n          title={`Project Progress %${\r\n            getLocationOnProgressBar(\"progressofproject\") >= 100\r\n              ? 100\r\n              : props.isMilestoneEditTab\r\n              ? Math.floor(getLocationOnProgressBar(\"progressofproject\"))\r\n              : Math.floor(PercentageConvertation(props.value[4]))\r\n          }`}\r\n        >\r\n          <BigPointerIcon\r\n            small={props.smallSize}\r\n            id=\"progressofproject\"\r\n            position={\r\n              getLocationOnProgressBar(\"progressofproject\") >= 100\r\n                ? 97.5\r\n                : getLocationOnProgressBar(\"progressofproject\") - 1.5\r\n            }\r\n            src={BigPointer}\r\n          ></BigPointerIcon>\r\n        </Tooltip>\r\n        {!props.smallSize && (\r\n          <>\r\n            <Tooltip title={`End Date ${ConvertDateFormat(props.value[2])}`}>\r\n              <SmallPointerIcon\r\n                src={SmallPointer}\r\n                position={\r\n                  getLocationOnProgressBar(\"Isexpired\")\r\n                    ? getLocationOnProgressBar(\"enddate\") - 1.5\r\n                    : getLocationOnProgressBar(\"enddate\") - 0.8\r\n                }\r\n                id=\"enddate\"\r\n              ></SmallPointerIcon>\r\n            </Tooltip>\r\n\r\n            {\r\n              <Tooltip\r\n                title={`Planned End Date ${ConvertDateFormat(props.value[1])}`}\r\n              >\r\n                <PlannedAndDatePointer\r\n                  src={SmallPointer}\r\n                  position={getLocationOnProgressBar(\r\n                    \"plannedenddate-startdate\"\r\n                  )}\r\n                  id=\"plannedenddate\"\r\n                ></PlannedAndDatePointer>\r\n              </Tooltip>\r\n            }\r\n          </>\r\n        )}\r\n      </MainContainerTop>\r\n      <Tooltip title=\"100%\">\r\n        <MainContainerBody medium={props.mediumSize} small={props.smallSize}>\r\n          {\r\n            <>\r\n              <MainContainerGrayArea\r\n                width={\r\n                  getLocationOnProgressBar(\"Isexpired\")\r\n                    ? getLocationOnProgressBar(\"widthofGray\") + 1\r\n                    : getLocationOnProgressBar(\"widthofGray\")\r\n                }\r\n              >\r\n                <Tooltip\r\n                  title={`${Math.round(getLocationOnProgressBar(\"GrayLine\"))}%`}\r\n                >\r\n                  <FirstLine\r\n                    width={getLocationOnProgressBar(\"GrayLine\")}\r\n                  ></FirstLine>\r\n                </Tooltip>\r\n                <Tooltip title={`${getLocationOnProgressBar(\"YellowLine\")}%`}>\r\n                  <SecondLine\r\n                    width={Math.round(getLocationOnProgressBar(\"YellowLine\"))}\r\n                  ></SecondLine>\r\n                </Tooltip>\r\n              </MainContainerGrayArea>\r\n            </>\r\n          }\r\n        </MainContainerBody>\r\n      </Tooltip>\r\n      {!props.smallSize && (\r\n        <>\r\n          <MainContainerBottom>\r\n            {calculateMilestonesPositioning(\r\n              props.milestones,\r\n              props.value[5],\r\n              getLocationOnProgressBar(\"FullWidth\"),\r\n              getLocationOnProgressBar(\"Isexpired\"),\r\n              getLocationOnProgressBar(\"widthofGray\"),\r\n              getLocationOnProgressBar(\"enddate-startdate\")\r\n            ).map((elm, index) => {\r\n              return (\r\n                <Tooltip title={`Milestone ${index + 1}`}>\r\n                  <MilestonesIcon\r\n                    position={elm > 99 ? elm - 2 : elm}\r\n                    src={MilestonePointer}\r\n                  ></MilestonesIcon>\r\n                </Tooltip>\r\n              )\r\n            })}\r\n          </MainContainerBottom>\r\n        </>\r\n      )}\r\n    </TopHeaderStatusBarContainer>\r\n  )\r\n}\r\n\r\nexport default LinearProgressBar\r\n","export default __webpack_public_path__ + \"static/media/clock.2e3e9123.svg\";","export default __webpack_public_path__ + \"static/media/threedot.cb90edd3.svg\";","import UserLogo from \"../../static/svgicon/userDefault.svg\"\r\nimport IfLogo from \"../../static/svgicon/iflogo.svg\"\r\nimport StatusBarIcon from \"../../static/svgicon/statusbar.svg\"\r\nimport SearchButtonSvg from \"../../static/svgicon/searchbutton.svg\"\r\nimport MilestoneTabSvg from \"../../static/svgicon/milestonetab.svg\"\r\nimport AddIcon from \"../../static/svgicon/addicon.svg\"\r\nimport EditForm from \"../forms/editprojectnameform\"\r\nimport DatePickerForm from \"../forms/datepickerForm\"\r\nimport DescriptionBoxTextArea from \"../forms/descriptionProjectForm\"\r\nimport ClockIcon from \"../../static/svgicon/clock.svg\"\r\nimport threeDotImage from \"../../static/svgicon/threedot.svg\"\r\nimport BıgProgressIcon from \"../../static/svgicon/bigprogressicon.svg\"\r\nimport {\r\n  MilestonesWrapper,\r\n  MilestonesBodyRoot,\r\n  MilestonesDateContentRoot,\r\n  MilestoneDateContentContanier,\r\n  MilestoneDateContentLabel,\r\n  MilestoneLeftSide,\r\n  MilestoneGoalStatic,\r\n  MilestoneGoalContent,\r\n  MilestoneDateDataContent,\r\n  MilestoneStatusBarsContentContainer,\r\n  MilestoneEndThreeDotContainer,\r\n  ClockIconContainer,\r\n  MilestoneEndThreeDotImage,\r\n  MilestoneGoalStaticsContainer,\r\n  ClockIconImage,\r\n  MilestoneStatusBarContentItems\r\n} from \"../ui/ConstantUi\"\r\nimport CircleProgressContent from \"../ui/CircleProgressContent\"\r\nimport {\r\n  backendDateConverter,\r\n  ConvertDateFormat,\r\n  PercentageConvertation,\r\n  truncate,\r\n  frontendDatePlus\r\n} from \"../../functions/cleaningData\"\r\nimport LinearProgressBar from \"../ui/LinearProgressBar\"\r\nimport React from \"react\"\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\nimport axios from \"../../functions/axios\"\r\nimport { zIndex } from \"material-ui/styles\"\r\n\r\ninterface DragComponentProps {\r\n  goalachiveng: number\r\n  value: any\r\n  milestones: any\r\n  editTab: (target) => void\r\n  getMilestoneData: (activeMilestione: any[]) => void\r\n  isEditTabOpened: boolean\r\n  DraggerRef: any\r\n  callbackFunction: any\r\n  selectedTab: string | any\r\n}\r\ninterface DragWrapperComponent {\r\n  id: any\r\n  goal: any\r\n  duration: any\r\n  index: any\r\n  relativeProgress: any\r\n  startDate: any\r\n  dueDate: any\r\n  progress: any\r\n  editTab: any\r\n  getMilestoneData: any\r\n  isEditTabOpened: any\r\n  goalachiveng: any\r\n  milestones: any\r\n  value: any\r\n  progressoftime: any\r\n  style?: React.CSSProperties\r\n}\r\nconst DragComponent: React.FC<DragComponentProps> = props => {\r\n  const [characters, updateCharacters] = React.useState(props.milestones)\r\n\r\n  // React.useEffect(() => {\r\n  //   console.log(props.data)\r\n  // }, [])\r\n\r\n  function handleOnDragEnd(result: any) {\r\n    if (!result.destination) return\r\n    const items = Array.from(characters)\r\n    const items2 = Array.from(characters)\r\n\r\n    const [reorderedItem]: any[] = items.splice(result.source.index, 1)\r\n\r\n    items.splice(result.destination.index, 0, reorderedItem)\r\n\r\n    updateCharacters(items)\r\n    orderHandle(items, items2)\r\n  }\r\n  const orderHandle = async (newarray: any[], oldarray: any[]) => {\r\n    let arr: any = oldarray\r\n    oldarray.forEach((olditem, index) => {\r\n      if (newarray[index].startDate !== oldarray[index].startDate) {\r\n        if (index == 0) {\r\n          arr[index] = {\r\n            id: newarray[index].id,\r\n            startDate: backendDateConverter(props.value[5]),\r\n            dueDate: frontendDatePlus(props.value[5], newarray[index].duration),\r\n            goal: newarray[index].goal\r\n          }\r\n        } else {\r\n          arr[index] = {\r\n            id: newarray[index].id,\r\n            startDate: arr[index - 1].dueDate,\r\n            dueDate: frontendDatePlus(\r\n              arr[index - 1].dueDate,\r\n              newarray[index].duration\r\n            )\r\n          }\r\n        }\r\n      } else {\r\n        if (index == 0) {\r\n          arr[index] = {\r\n            id: oldarray[index].id,\r\n            startDate: backendDateConverter(oldarray[index].startDate),\r\n            dueDate: backendDateConverter(oldarray[index].dueDate)\r\n          }\r\n        } else {\r\n          arr[index] = {\r\n            id: oldarray[index].id,\r\n            startDate: backendDateConverter(arr[index - 1].dueDate),\r\n            dueDate: frontendDatePlus(\r\n              arr[index - 1].dueDate,\r\n              newarray[index].duration\r\n            )\r\n          }\r\n        }\r\n      }\r\n    })\r\n    let promises: any[] = []\r\n    arr.map((result, index) => {\r\n      promises.push(\r\n        axios.put(`project/detail/milestones/${result.id}`, {\r\n          startDate: result.startDate,\r\n          dueDate: result.dueDate\r\n        })\r\n      )\r\n    })\r\n    await Promise.all(promises).then(responses => props.callbackFunction())\r\n\r\n    // const checkthisone = oldarray.map((olditem, index) => {\r\n    //   console.log(\"just olds\", olditem.startDate)\r\n    //   newarray.map((newitem: any, index) => {\r\n    //     console.log(newitem.startDate, olditem.startDate)\r\n    //     if (olditem.startDate !== newitem.startDate) {\r\n    //       console.log(\"this is changed\", newitem.goal, newitem.id)\r\n    //       return arr.push(newitem)\r\n    //     }\r\n    //   })\r\n    //   return arr\r\n    // })\r\n\r\n    // var arr = newarray\r\n\r\n    // newarray.forEach(function (item, index) {\r\n    //   arr[index] = {\r\n    //     id: item.id,\r\n    //     position: index,\r\n    //     goal: item.goal\r\n    //   }\r\n    // })\r\n    // arr.map(async (readytosendeddata, index) => {\r\n    //   console.log(\r\n    //     \"id\",\r\n    //     readytosendeddata.id,\r\n    //     \"position\",\r\n    //     readytosendeddata.position\r\n    //   )\r\n    //   await axios\r\n    //     .put(`project/detail/milestones/${readytosendeddata.id}`, {\r\n    //       position: readytosendeddata.position\r\n    //     })\r\n    //     .then(res => console.log(res.data))\r\n    // })\r\n\r\n    // const checkitout = oldarray.forEach(\r\n    //   elm => (elm.startDate = newarray.map(newelm => newelm.startDate))\r\n    // )\r\n    // console.log(\"checkher\", checkitout)\r\n\r\n    // await axios\r\n    //   .put(`project/detail/milestones/${props.milestoneid}`, {\r\n    //     goal:\r\n    //       activeProjectName.charAt(0).toUpperCase() + activeProjectName.slice(1)\r\n    //   })\r\n    //   .then(res => {\r\n    //     props.callbackFunction()\r\n    //   })\r\n    //   .catch(err => prompt(err))\r\n  }\r\n  let letdefaultopen = false\r\n\r\n  const iseditTabCallbackFunction = React.useCallback(() => {\r\n    if (props.isEditTabOpened) {\r\n      let getSelected = document.getElementById(props.selectedTab)\r\n      getSelected!.style.border = \"3px solid rgba(228, 220, 0, 1)\"\r\n    } else {\r\n      if (props.selectedTab) {\r\n        let getSelected = document.getElementById(props.selectedTab)\r\n        getSelected!.style.border = \" \"\r\n      }\r\n    }\r\n  }, [props.isEditTabOpened])\r\n\r\n  React.useEffect(() => {\r\n    iseditTabCallbackFunction()\r\n  }, [])\r\n\r\n  const WrapperComponent: React.FC<DragWrapperComponent> = ({\r\n    id,\r\n    goal,\r\n    duration,\r\n    index,\r\n    relativeProgress,\r\n    startDate,\r\n    dueDate,\r\n    progress,\r\n    editTab,\r\n    getMilestoneData,\r\n    isEditTabOpened,\r\n    goalachiveng,\r\n    milestones,\r\n    value,\r\n    progressoftime,\r\n    style\r\n  }) => {\r\n    const [onMouse, setOnMouse] = React.useState<boolean>(false)\r\n    const onMouseOverWrapper = () => {\r\n      setOnMouse(true)\r\n    }\r\n    const onMouseLeaveWrapper = () => {\r\n      setOnMouse(false)\r\n    }\r\n    return (\r\n      <Draggable key={id} draggableId={id} index={index}>\r\n        {provided => (\r\n          <>\r\n            <MilestonesWrapper\r\n              onMouseEnter={onMouseOverWrapper}\r\n              onMouseLeave={onMouseLeaveWrapper}\r\n              mouseOver={onMouse}\r\n              id={`${\"milestonewrapper\" + id}`}\r\n              onClick={e => {\r\n                console.log(\r\n                  \"innerref\",\r\n                  provided.innerRef,\r\n                  provided.draggableProps,\r\n                  provided.dragHandleProps\r\n                )\r\n                props.editTab(e.currentTarget)\r\n\r\n                props.getMilestoneData([\r\n                  {\r\n                    id,\r\n                    goal,\r\n                    duration,\r\n                    startDate: ConvertDateFormat(startDate),\r\n                    dueDate: ConvertDateFormat(dueDate),\r\n                    progress: PercentageConvertation(progress),\r\n                    relativeProgress: PercentageConvertation(relativeProgress)\r\n                  }\r\n                ])\r\n              }}\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              key={id}\r\n            >\r\n              <MilestoneLeftSide>\r\n                <ClockIconContainer>\r\n                  <ClockIconImage src={ClockIcon}></ClockIconImage>\r\n                </ClockIconContainer>\r\n                <MilestoneGoalStaticsContainer>\r\n                  {\" \"}\r\n                  <MilestoneGoalStatic>Goal</MilestoneGoalStatic>\r\n                  <MilestoneGoalContent>\r\n                    {goal\r\n                      ? truncate(goal, 26, 32)\r\n                      : \"Type your milestone goal here...\"}\r\n                  </MilestoneGoalContent>\r\n                </MilestoneGoalStaticsContainer>\r\n              </MilestoneLeftSide>\r\n              <MilestonesDateContentRoot\r\n                isEditTapOpened={props.isEditTabOpened}\r\n              >\r\n                <MilestoneDateContentContanier>\r\n                  <MilestoneDateContentLabel>\r\n                    Start Date\r\n                  </MilestoneDateContentLabel>\r\n                  <MilestoneDateDataContent>\r\n                    {ConvertDateFormat(startDate)}\r\n                  </MilestoneDateDataContent>\r\n                </MilestoneDateContentContanier>\r\n                <MilestoneDateContentContanier>\r\n                  <MilestoneDateContentLabel>\r\n                    End Date\r\n                  </MilestoneDateContentLabel>\r\n                  <MilestoneDateDataContent>\r\n                    {ConvertDateFormat(dueDate)}\r\n                  </MilestoneDateDataContent>\r\n                </MilestoneDateContentContanier>\r\n                {!props.isEditTabOpened && (\r\n                  <MilestoneDateContentContanier>\r\n                    <MilestoneDateContentLabel>\r\n                      Duration\r\n                    </MilestoneDateContentLabel>\r\n                    <MilestoneDateDataContent>\r\n                      {duration}\r\n                    </MilestoneDateDataContent>\r\n                  </MilestoneDateContentContanier>\r\n                )}\r\n              </MilestonesDateContentRoot>\r\n              {!props.isEditTabOpened && (\r\n                <>\r\n                  <MilestoneStatusBarsContentContainer>\r\n                    <CircleProgressContent\r\n                      progressvalue={goalachiveng}\r\n                      smallSize\r\n                    ></CircleProgressContent>\r\n                    <div style={{ display: \"flex\", width: \"50%\" }}>\r\n                      <LinearProgressBar\r\n                        milestones={props.milestones}\r\n                        milestoneprogressOfTime={progressoftime}\r\n                        milestoneprogress={progress}\r\n                        milestonestartdate={startDate}\r\n                        milestoneeduedate={dueDate}\r\n                        isMilestoneEditTab\r\n                        value={props.value}\r\n                        smallSize\r\n                      ></LinearProgressBar>\r\n                    </div>\r\n                  </MilestoneStatusBarsContentContainer>\r\n                  <MilestoneEndThreeDotContainer>\r\n                    <MilestoneEndThreeDotImage\r\n                      src={threeDotImage}\r\n                    ></MilestoneEndThreeDotImage>\r\n                  </MilestoneEndThreeDotContainer>\r\n                </>\r\n              )}\r\n            </MilestonesWrapper>\r\n          </>\r\n        )}\r\n      </Draggable>\r\n    )\r\n  }\r\n  return (\r\n    <DragDropContext onDragEnd={handleOnDragEnd}>\r\n      <Droppable droppableId=\"characters\">\r\n        {provided => (\r\n          <MilestonesBodyRoot\r\n            className=\"characters\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {characters.map(\r\n              (\r\n                {\r\n                  id,\r\n                  duration,\r\n                  progress,\r\n                  relativeProgress,\r\n                  startDate,\r\n                  dueDate,\r\n                  is_main_project,\r\n                  goal,\r\n                  goalAchievingProbability,\r\n                  progressOfTime\r\n                },\r\n                index: number\r\n              ) => {\r\n                return (\r\n                  <WrapperComponent\r\n                    id={id}\r\n                    dueDate={dueDate}\r\n                    progress={progress}\r\n                    relativeProgress={relativeProgress}\r\n                    duration={duration}\r\n                    startDate={startDate}\r\n                    goal={goal}\r\n                    editTab={props.editTab}\r\n                    index={index}\r\n                    progressoftime={progressOfTime}\r\n                    getMilestoneData={props.getMilestoneData}\r\n                    goalachiveng={goalAchievingProbability}\r\n                    isEditTabOpened={props.isEditTabOpened}\r\n                    milestones={props.milestones}\r\n                    value={props.value}\r\n                    key={id}\r\n                  ></WrapperComponent>\r\n                )\r\n              }\r\n            )}\r\n            {provided.placeholder}\r\n          </MilestonesBodyRoot>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  )\r\n}\r\n\r\nexport default DragComponent\r\n","import { TextField, Typography } from \"@material-ui/core\"\r\nimport React, { Component } from \"react\"\r\nimport { inherits } from \"util\"\r\nimport axios from \"../../functions/axios\"\r\nimport { SubmitButton } from \"./editprojectnameform\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport { useStyles } from \"@material-ui/pickers/views/Calendar/Day\"\r\nimport { durationUpdate, getTotals } from \"../../functions/process\"\r\nexport interface DurationFormProps {\r\n  defaultValue: number\r\n  milestoneid: string\r\n  callbackFunction?: any\r\n  milestones: any\r\n  projectid: any\r\n}\r\n\r\n// import { withStyles } from \"@material-ui/core/styles\"\r\n\r\n// const styles = theme => ({\r\n//   number: {\r\n//     \"& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button\": {\r\n//       \"-webkit-appearance\": \"none\",\r\n//       margin: 0\r\n//     }\r\n//   },\r\n//   input: {\r\n//     \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\r\n//       \"-webkit-appearance\": \"none\",\r\n//       margin: 0\r\n//     }\r\n//   }\r\n// })\r\nconst DurationForm: React.FC<DurationFormProps> = props => {\r\n  const handleDurationEdit = async e => {\r\n    console.log(\r\n      \"heyooo\",\r\n      props.milestoneid,\r\n      activeProjectName,\r\n      props.milestones\r\n    )\r\n    e.preventDefault()\r\n    await durationUpdate(\r\n      Number(activeProjectName),\r\n      props.callbackFunction,\r\n      props.milestoneid,\r\n      props.milestones\r\n    )\r\n    await axios\r\n      .get(`project/detail/${props.projectid}`)\r\n      .then(res => getTotals(props.projectid, props.callbackFunction))\r\n  }\r\n  const [isFocus, setisFocus] = React.useState<boolean>(false)\r\n  const SubmitButtonRef = React.useRef<React.MutableRefObject<any> | any>()\r\n  const [activeProjectName, setActiveProjectName] = React.useState(\"\")\r\n\r\n  const editformref = React.useRef<React.MutableRefObject<any> | any>()\r\n\r\n  return (\r\n    <>\r\n      <form ref={editformref} onSubmit={handleDurationEdit}>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <TextField\r\n            style={{ width: \"30%\" }}\r\n            onFocus={() => {\r\n              setisFocus(true)\r\n            }}\r\n            onChange={e => {\r\n              setActiveProjectName(e.currentTarget.value)\r\n            }}\r\n            onBlur={() => {\r\n              setisFocus(false)\r\n\r\n              SubmitButtonRef.current.click()\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            InputProps={{\r\n              disableUnderline: true,\r\n              style: {\r\n                color: \"inherit\",\r\n                fontSize: \"inherit\",\r\n                fontStyle: \"inherit\",\r\n                fontWeight: \"inherit\",\r\n                lineHeight: \"inherit\",\r\n                letterSpacing: \"inherit\",\r\n                textAlign: \"center\"\r\n              }\r\n            }}\r\n            variant=\"filled\"\r\n            type=\"number\"\r\n            inputProps={{\r\n              style: { padding: 0, textAlign: \"right\" },\r\n              min: 1,\r\n              inputMode: \"numeric\"\r\n            }}\r\n            defaultValue={props.defaultValue}\r\n          >\r\n            {\" \"}\r\n          </TextField>\r\n          <SubmitButton\r\n            ref={SubmitButtonRef}\r\n            disabled={!activeProjectName}\r\n            type=\"submit\"\r\n          ></SubmitButton>\r\n          <Typography style={{ marginLeft: \"5px\" }}>\r\n            {props.defaultValue > 1 ? \"Days\" : \"Day\"}\r\n          </Typography>\r\n        </div>\r\n      </form>\r\n\r\n      <span\r\n        style={{\r\n          display: \"flex;\",\r\n          boxSizing: \"border-box\",\r\n          fill: \"rgba(240, 240, 255, 1)\",\r\n          maxHeight: \"1px\",\r\n          minHeight: \"1px\",\r\n          borderRadius: \"5px\",\r\n          width: \"30%\",\r\n          backgroundColor: \" rgba(240, 240, 255, 1)\"\r\n        }}\r\n      ></span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DurationForm\r\n","import { TextField, Typography } from \"@material-ui/core\"\r\nimport React, { Component } from \"react\"\r\nimport { inherits } from \"util\"\r\nimport axios from \"../../functions/axios\"\r\nimport { SubmitButton } from \"./editprojectnameform\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport { useStyles } from \"@material-ui/pickers/views/Calendar/Day\"\r\nimport {\r\n  Convertpercentageforbackend,\r\n  PercentageConvertation\r\n} from \"../../functions/cleaningData\"\r\nimport { getTotals } from \"../../functions/process\"\r\nexport interface ProgressFormProps {\r\n  defaultValue: number\r\n  milestoneid: string\r\n  callbackFunction?: any\r\n  projectid: any\r\n}\r\n\r\n// import { withStyles } from \"@material-ui/core/styles\"\r\n\r\n// const styles = theme => ({\r\n//   number: {\r\n//     \"& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button\": {\r\n//       \"-webkit-appearance\": \"none\",\r\n//       margin: 0\r\n//     }\r\n//   },\r\n//   input: {\r\n//     \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\r\n//       \"-webkit-appearance\": \"none\",\r\n//       margin: 0\r\n//     }\r\n//   }\r\n// })\r\nconst ProgressForm: React.FC<ProgressFormProps> = props => {\r\n  const handleDurationEdit = async e => {\r\n    console.log(\r\n      \"heyooo\",\r\n      props.milestoneid,\r\n      activeProjectName,\r\n      Convertpercentageforbackend(activeProjectName)\r\n    )\r\n    e.preventDefault()\r\n    await axios\r\n      .put(`project/detail/milestones/${props.milestoneid}`, {\r\n        progress: Convertpercentageforbackend(activeProjectName)\r\n      })\r\n      .then(res => {\r\n        console.log(`Milestone progress updated${res.data.id}`)\r\n      })\r\n      .catch(err => prompt(err))\r\n\r\n    await getTotals(props.projectid, props.callbackFunction)\r\n  }\r\n  const [isFocus, setisFocus] = React.useState<boolean>(false)\r\n  const SubmitButtonRef = React.useRef<React.MutableRefObject<any> | any>()\r\n  const [activeProjectName, setActiveProjectName] = React.useState(\"\")\r\n\r\n  const editformref = React.useRef<React.MutableRefObject<any> | any>()\r\n\r\n  return (\r\n    <>\r\n      <form ref={editformref} onSubmit={handleDurationEdit}>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <TextField\r\n            style={{ width: \"20%\" }}\r\n            onFocus={() => {\r\n              setisFocus(true)\r\n            }}\r\n            onChange={e => {\r\n              setActiveProjectName(e.currentTarget.value)\r\n            }}\r\n            onBlur={() => {\r\n              setisFocus(false)\r\n\r\n              SubmitButtonRef.current.click()\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            InputProps={{\r\n              disableUnderline: true,\r\n              style: {\r\n                color: \"inherit\",\r\n                fontSize: \"inherit\",\r\n                fontStyle: \"inherit\",\r\n                fontWeight: \"inherit\",\r\n                lineHeight: \"inherit\",\r\n                letterSpacing: \"inherit\",\r\n                textAlign: \"center\"\r\n              }\r\n            }}\r\n            variant=\"filled\"\r\n            type=\"number\"\r\n            inputProps={{\r\n              style: { padding: 0, textAlign: \"right\" },\r\n              min: 0,\r\n              max: 100,\r\n              inputMode: \"numeric\"\r\n            }}\r\n            defaultValue={Math.ceil(PercentageConvertation(props.defaultValue))}\r\n          >\r\n            {\" \"}\r\n          </TextField>\r\n          <SubmitButton\r\n            ref={SubmitButtonRef}\r\n            disabled={!activeProjectName}\r\n            type=\"submit\"\r\n          ></SubmitButton>\r\n          <Typography style={{ marginLeft: \"5px\" }}>%</Typography>\r\n        </div>\r\n      </form>\r\n\r\n      <span\r\n        style={{\r\n          display: \"flex;\",\r\n          boxSizing: \"border-box\",\r\n          fill: \"rgba(240, 240, 255, 1)\",\r\n          maxHeight: \"1px\",\r\n          minHeight: \"1px\",\r\n          borderRadius: \"5px\",\r\n          width: \"20%\",\r\n          backgroundColor: \" rgba(240, 240, 255, 1)\"\r\n        }}\r\n      ></span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProgressForm\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport {\r\n  ConvertDateFormat,\r\n  PercentageConvertation,\r\n  truncate\r\n} from \"../../functions/cleaningData\"\r\nimport DatePickerForm from \"../forms/datepickerForm\"\r\nimport DescriptionBoxTextArea from \"../forms/descriptionProjectForm\"\r\nimport DurationForm from \"../forms/durationForm\"\r\nimport EditForm from \"../forms/editprojectnameform\"\r\nimport ProgressForm from \"../forms/ProgressForm\"\r\nimport CircleProgressContent from \"./CircleProgressContent\"\r\n\r\nimport {\r\n  MilestoneCloseEditTabIcon,\r\n  MilestoneDateContentContanier,\r\n  MilestoneDateContentLabel,\r\n  MilestoneDateDataContent\r\n} from \"./ConstantUi\"\r\nimport LinearProgressBar from \"./LinearProgressBar\"\r\nexport interface MilestoneEditComponentProps {\r\n  isOpened: boolean\r\n  data: any[]\r\n  callbackFunction: () => void\r\n  projectdata: any[]\r\n  goalachivevalue: any\r\n  projectid: any\r\n  milestones: any\r\n}\r\n\r\nconst MilestoneEditContainer = styled.div<{ isOpened: boolean }>`\r\n  display: flex;\r\n  flex-basis: ${p => (p.isOpened ? \"30%\" : \"0%\")};\r\n  min-width: ${p => (p.isOpened ? \"30%\" : \"0%\")};\r\n  max-width: 802px;\r\n  flex-grow: 0;\r\n  margin-left: 2px;\r\n  border-radius: 10px;\r\n  opacity: ${p => (p.isOpened ? \"1\" : \"0\")};\r\n  transition: opacity 5s linear;\r\n  z-index: 999;\r\n  min-height: 100%;\r\n  visibility: ${p => (p.isOpened ? \"visible\" : \"hidden\")};\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\nconst MilestoneEditHeader = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n`\r\nconst MilestoneEditBody = styled.div`\r\n  display: flex;\r\n  height: 40%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\nconst MilestoneEditBottom = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 30%;\r\n`\r\nconst MilestoneEditStatusContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`\r\nconst MilestoneEditCircleProgressContainer = styled.div`\r\n  display: flex;\r\n  flex-basis: 10%;\r\n  min-width: 10%;\r\n`\r\nconst MilestoneEditLinearProgressContanier = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-basis: 80%;\r\n  min-width: 20%;\r\n`\r\nconst MilestoneEditDatasContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 50%;\r\n  justify-content: space-between;\r\n`\r\nconst MilestoneEditDatasTop = styled.div`\r\n  display: flex;\r\n  width: 45%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\nconst MilestoneEditDatasBottom = styled.div`\r\n  display: flex;\r\n  width: 80%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\nconst MilestoneEditDataTopItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40%;\r\n`\r\n\r\nconst MilestoneEditComponent: React.FC<MilestoneEditComponentProps> = props => {\r\n  React.useEffect(() => {\r\n    console.log(\"here\", props.milestones)\r\n  }, [props.milestones])\r\n  return (\r\n    <MilestoneEditContainer isOpened={props.isOpened}>\r\n      {props.data.map(elm => {\r\n        {\r\n          console.log(\"YOPPP\", elm.goal)\r\n        }\r\n        return (\r\n          <>\r\n            <MilestoneEditHeader>\r\n              <EditForm\r\n                callbackFunction={props.callbackFunction}\r\n                issmall={true}\r\n                defaultValue={elm.goal ? elm.goal : \"\"}\r\n                ismilestoneedit={true}\r\n                milestoneid={elm.id}\r\n              ></EditForm>\r\n            </MilestoneEditHeader>\r\n            <MilestoneEditBody>\r\n              <MilestoneEditStatusContainer>\r\n                <MilestoneEditCircleProgressContainer>\r\n                  <CircleProgressContent\r\n                    smallSize\r\n                    mediumSize={true}\r\n                    progressvalue={elm.goalAchievingProbability}\r\n                  ></CircleProgressContent>\r\n                </MilestoneEditCircleProgressContainer>\r\n                <MilestoneEditLinearProgressContanier>\r\n                  <LinearProgressBar\r\n                    milestoneprogressOfTime={elm.progressOfTime}\r\n                    milestoneprogress={elm.progress}\r\n                    milestonestartdate={elm.startDate}\r\n                    milestoneeduedate={elm.dueDate}\r\n                    value={props.projectdata}\r\n                    isMilestoneEditTab\r\n                    smallSize\r\n                    mediumSize\r\n                  ></LinearProgressBar>\r\n                </MilestoneEditLinearProgressContanier>\r\n              </MilestoneEditStatusContainer>\r\n              <MilestoneEditDatasContainer>\r\n                <MilestoneEditDatasTop>\r\n                  <MilestoneEditDataTopItem>\r\n                    <MilestoneDateContentLabel>\r\n                      Start Date\r\n                    </MilestoneDateContentLabel>\r\n                    <MilestoneDateDataContent>\r\n                      {ConvertDateFormat(elm.startDate)}\r\n                    </MilestoneDateDataContent>\r\n                  </MilestoneEditDataTopItem>\r\n                  <MilestoneEditDataTopItem>\r\n                    <MilestoneDateContentLabel>\r\n                      Duration\r\n                    </MilestoneDateContentLabel>\r\n                    <MilestoneDateDataContent\r\n                      style={{ flexDirection: \"column\" }}\r\n                    >\r\n                      <DurationForm\r\n                        projectid={props.projectid}\r\n                        defaultValue={elm.duration}\r\n                        callbackFunction={props.callbackFunction}\r\n                        milestoneid={elm.id}\r\n                        milestones={props.milestones}\r\n                      ></DurationForm>\r\n                    </MilestoneDateDataContent>\r\n                  </MilestoneEditDataTopItem>\r\n                </MilestoneEditDatasTop>\r\n                <MilestoneEditDatasBottom>\r\n                  <MilestoneEditDataTopItem>\r\n                    <MilestoneDateContentLabel>\r\n                      End Date\r\n                    </MilestoneDateContentLabel>\r\n                    <MilestoneDateDataContent>\r\n                      <DatePickerForm\r\n                        defaultStartData={elm.startDate}\r\n                        defaultPlannedEndData={elm.dueDate}\r\n                        ismilestone\r\n                        callbackFunction={props.callbackFunction}\r\n                        id={elm.id}\r\n                        actualprojectid={props.projectid}\r\n                        milestones={props.milestones}\r\n                      ></DatePickerForm>\r\n                      {/* {ConvertDateFormat(elm.dueDate)} */}\r\n                    </MilestoneDateDataContent>\r\n                  </MilestoneEditDataTopItem>\r\n                  <MilestoneEditDataTopItem>\r\n                    <MilestoneDateContentLabel>\r\n                      Progress\r\n                    </MilestoneDateContentLabel>\r\n                    <MilestoneDateDataContent\r\n                      style={{ flexDirection: \"column\" }}\r\n                    >\r\n                      <ProgressForm\r\n                        callbackFunction={props.callbackFunction}\r\n                        milestoneid={elm.id}\r\n                        defaultValue={elm.progress}\r\n                        projectid={props.projectid}\r\n                      ></ProgressForm>\r\n                    </MilestoneDateDataContent>\r\n                  </MilestoneEditDataTopItem>\r\n                  <MilestoneEditDataTopItem>\r\n                    <MilestoneDateContentLabel>\r\n                      Relative Progress\r\n                    </MilestoneDateContentLabel>\r\n                    <MilestoneDateDataContent>\r\n                      {Math.ceil(PercentageConvertation(elm.relativeProgress))}%\r\n                    </MilestoneDateDataContent>\r\n                  </MilestoneEditDataTopItem>\r\n                </MilestoneEditDatasBottom>\r\n              </MilestoneEditDatasContainer>\r\n              {/* DescriptionBox */}\r\n            </MilestoneEditBody>\r\n            <MilestoneEditBottom>\r\n              <DescriptionBoxTextArea\r\n                typemilestone\r\n                milestoneid={elm.id}\r\n                firstTimeChange={!elm.description ? true : false}\r\n                defaultValue={elm.description ? elm.description : \"\"}\r\n                callbackFunction={props.callbackFunction}\r\n              ></DescriptionBoxTextArea>\r\n            </MilestoneEditBottom>\r\n          </>\r\n        )\r\n      })}\r\n    </MilestoneEditContainer>\r\n  )\r\n}\r\n\r\nexport default MilestoneEditComponent\r\n","import { Typography } from \"@material-ui/core\"\r\nimport styled from \"styled-components\"\r\nimport React from \"react\"\r\nimport {\r\n  ConvertDateFormat,\r\n  PercentageConvertation\r\n} from \"../../functions/cleaningData\"\r\nexport interface SquaredProgressProps {\r\n  goalAchievingValue: number\r\n  width: number\r\n  height: number\r\n  id: string\r\n  gaps: number\r\n  progressValue: number\r\n  getMilestoneData: ([]) => void\r\n  goal: any\r\n  duration: any\r\n  startDate: any\r\n  dueDate: any\r\n  relativeProgress: any\r\n  OpenEditMilestoneTab: (\r\n    target: any,\r\n    isTreeview?: boolean,\r\n    insideTreeView?: boolean\r\n  ) => void\r\n  closeDialog: () => void\r\n}\r\nexport interface SquarredActualProgresProps {\r\n  progressValue: number\r\n  width: number\r\n  height: number\r\n}\r\n\r\nconst SquaredProgressBarOutline = styled.div<{\r\n  width: number\r\n  height: number\r\n  gap: number\r\n  mouseOver: boolean\r\n}>`\r\n  display: flex;\r\n  position: relative;\r\n  margin-right: ${p => p.gap + \"px\"};\r\n  width: ${p => p.width + \"px\"};\r\n  height: ${p => p.height + \"px\"};\r\n  box-sizing: border-box;\r\n  border: ${p =>\r\n    p.mouseOver\r\n      ? \"1px solid rgba(228, 220, 0, 1)\"\r\n      : \"1px solid rgba(196, 196, 196, 1)\"};\r\n  cursor: pointer;\r\n`\r\nconst SquarredProgressBarNumber = styled.p<{\r\n  width: number\r\n  height: number\r\n  fontSize: number\r\n}>`\r\n  margin: 0;\r\n  font-family: Aileron;\r\n  font-size: ${p => p.fontSize + \"px\"};\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  position: absolute;\r\n  left: 3.03%;\r\n  bottom: 2%;\r\n  color: rgba(240, 240, 255, 0.8);\r\n  margin: 0;\r\n  margin-block-start: 0em;\r\n  margin-block-end: 0em;\r\n  margin-inline-start: 0px;\r\n  margin-inline-end: 0px;\r\n`\r\n\r\nconst SquaredProgress: React.FC<SquaredProgressProps> = props => {\r\n  const [isSquarredMouseOver, setIsSquarredMouseOver] = React.useState(false)\r\n  const generateSquaredOutline = (howmanygolden: number, misspart: number) => {\r\n    let i: number\r\n    const parts = [\"bottom\", \"right\", \"top\", \"left\"]\r\n    const result: JSX.Element[] = []\r\n    const acceptedparts: string[] = []\r\n    const flooredhowmnaygoldenbar = Math.floor(howmanygolden)\r\n    for (i = 0; i < flooredhowmnaygoldenbar; i++) {\r\n      acceptedparts.push(parts[i])\r\n      let preparedstyleforborder: any = {}\r\n      if (parts[i] === \"bottom\") {\r\n        preparedstyleforborder = {\r\n          width: \"100.7%\",\r\n          borderBottom: \"5px solid #E4DC00\",\r\n          position: \"absolute\",\r\n          bottom: \"-0.7%\"\r\n        }\r\n      } else if (parts[i] === \"right\") {\r\n        preparedstyleforborder = {\r\n          height: \"100%\",\r\n          borderRight: \"5px solid #E4DC00\",\r\n          position: \"absolute\",\r\n          right: \"-0.7%\"\r\n        }\r\n      } else if (parts[i] == \"top\") {\r\n        preparedstyleforborder = {\r\n          width: \"101%\",\r\n          borderTop: \"5px solid #E4DC00\",\r\n          position: \"absolute\",\r\n          top: \"-0.8%\",\r\n          right: \"-0.7%\"\r\n        }\r\n      } else if (parts[i] == \"left\") {\r\n        preparedstyleforborder = {\r\n          height: \"100.97%\",\r\n          borderLeft: \"5px solid #E4DC00\",\r\n          position: \"absolute\",\r\n          left: \"-0.7%\",\r\n          top: \"-0.7%\"\r\n        }\r\n      }\r\n\r\n      let border = (\r\n        <span id={parts[i]} key={i} style={preparedstyleforborder}></span>\r\n      )\r\n      result.push(border)\r\n    }\r\n\r\n    if (misspart > 0) {\r\n      var x = howmanygolden\r\n      var decimals = x - Math.floor(x)\r\n      var decimalPlaces = x.toString().split(\".\")[1].length\r\n      var tofixed = decimals.toFixed(decimalPlaces)\r\n      var resultnumber = Number(tofixed) * 100 + 5\r\n      let preparedstyleforborder: any = {}\r\n      let fullparts = acceptedparts\r\n      let difference = parts.filter(x => !acceptedparts.includes(x))\r\n\r\n      if (fullparts.length >= 1) {\r\n        if (difference[0] == \"right\") {\r\n          preparedstyleforborder = {\r\n            height: resultnumber + \"%\",\r\n            borderRight: \"5px solid #E4DC00\",\r\n            position: \"absolute\",\r\n            right: \"-0.7%\",\r\n            bottom: \"0\"\r\n          }\r\n        } else if (difference[0] == \"top\") {\r\n          preparedstyleforborder = {\r\n            width: resultnumber + \"%\",\r\n            borderTop: \"5px solid #E4DC00\",\r\n            position: \"absolute\",\r\n            top: \"-0.8%\",\r\n            right: \"-0.7%\"\r\n          }\r\n        } else if (difference[0] == \"left\") {\r\n          preparedstyleforborder = {\r\n            height: resultnumber + \"%\",\r\n            borderLeft: \"5px solid #E4DC00\",\r\n            position: \"absolute\",\r\n            left: \"-0.7%\",\r\n            top: \"-0.7%\"\r\n          }\r\n        }\r\n        let border = (\r\n          <span id={parts[i]} key={i} style={preparedstyleforborder}></span>\r\n        )\r\n        result.push(border)\r\n      } else {\r\n        preparedstyleforborder = {\r\n          width: resultnumber + \"%\",\r\n          borderBottom: \"5px solid #E4DC00\",\r\n          position: \"absolute\",\r\n          bottom: \"-0.7%\"\r\n        }\r\n        let border = (\r\n          <span id={parts[i]} key={i} style={preparedstyleforborder}></span>\r\n        )\r\n        result.push(border)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  const SquaredProgress: React.FC<SquarredActualProgresProps> = subprops => {\r\n    let howmanygolden = subprops.progressValue / 25\r\n    let whatisleft = subprops.progressValue % 25\r\n    const SquarredProgressContent = generateSquaredOutline(\r\n      howmanygolden,\r\n      whatisleft\r\n    )\r\n\r\n    return (\r\n      <>\r\n        {SquarredProgressContent.map((Element: any, index) => {\r\n          return Element\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SquaredProgressBarOutline\r\n        gap={props.gaps}\r\n        width={props.width}\r\n        height={props.height}\r\n        id={props.id}\r\n        mouseOver={isSquarredMouseOver}\r\n        onMouseEnter={() => {\r\n          setIsSquarredMouseOver(true)\r\n        }}\r\n        onMouseLeave={() => {\r\n          setIsSquarredMouseOver(false)\r\n        }}\r\n        onClick={e => {\r\n          e.stopPropagation()\r\n          props.OpenEditMilestoneTab(e.currentTarget, true, true)\r\n          props.getMilestoneData([\r\n            {\r\n              id: props.id,\r\n              goal: props.goal,\r\n              duration: props.duration,\r\n              startDate: ConvertDateFormat(props.startDate),\r\n              dueDate: ConvertDateFormat(props.dueDate),\r\n              progress: props.progressValue,\r\n              relativeProgress: PercentageConvertation(props.relativeProgress)\r\n            }\r\n          ])\r\n          props.closeDialog()\r\n        }}\r\n      >\r\n        <SquarredProgressBarNumber\r\n          fontSize={props.width / 6}\r\n          width={props.width / 4}\r\n          height={props.height / 4}\r\n        >\r\n          {props.goalAchievingValue > 100\r\n            ? \">100\"\r\n            : Math.ceil(props.goalAchievingValue)}\r\n          %\r\n        </SquarredProgressBarNumber>\r\n        <SquaredProgress\r\n          width={props.width}\r\n          height={props.height}\r\n          progressValue={props.progressValue}\r\n        ></SquaredProgress>\r\n      </SquaredProgressBarOutline>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SquaredProgress\r\n","import { Box } from \"@material-ui/core\"\r\nimport SquaredProgress from \"./SquaredProgress\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport {\r\n  PercentageConvertation,\r\n  useContainerDimensions\r\n} from \"../../functions/cleaningData\"\r\nexport interface TreeViewMainContentComponentProps {\r\n  milestones: any[]\r\n  getMilestoneData: ([]) => void\r\n  OpenEditMilestoneTab: (\r\n    target: any,\r\n    isTreeview?: boolean,\r\n    insideTreeView?: boolean\r\n  ) => void\r\n  closeDialog: () => void\r\n}\r\n\r\nconst ProjectArea = styled.div<{ maxheight: any; mouseOver: boolean }>`\r\n  display: flex;\r\n  width: 95%;\r\n  padding: 5px 0 5px 0px;\r\n  max-width: 95%;\r\n  height: auto !important;\r\n  max-height: ${p => p.maxheight + \"px\"};\r\n  border: ${p =>\r\n    p.mouseOver\r\n      ? \"3px solid rgba(228, 220, 0, 1)\"\r\n      : \"3px solid rgba(240, 240, 255, 0.1)\"};\r\n  background: rgba(99, 99, 128, 0.1);\r\n  border-radius: 5px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-self: center;\r\n  cursor: pointer;\r\n`\r\nconst AllMilestonesPlusGaps = styled.div<{\r\n  maxWidth: number\r\n  maxheight?: number\r\n}>`\r\n  height: \"100%\";\r\n  max-height: ${p => p.maxheight + \"px\"};\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: ${p => p.maxWidth + \"px\"} !important;\r\n  align-items: center;\r\n`\r\nconst TreeViewMainContentComponent: React.FC<TreeViewMainContentComponentProps> = props => {\r\n  const [maxWidth, setMaxWidth] = React.useState<number>(95)\r\n  const [\r\n    mouseOverProjectArea,\r\n    setMouseOverProjectArea\r\n  ] = React.useState<boolean>(false)\r\n  const ProjectAreaWidthRef = React.useRef<any>(null)\r\n  const AllMilestonesPlusGapsWidthRef = React.useRef<any>(null)\r\n\r\n  const AllMilestonesPlusGapsWidth = useContainerDimensions(\r\n    AllMilestonesPlusGapsWidthRef\r\n  ).width\r\n  const AllMilestonesPlusGapsHeight = useContainerDimensions(\r\n    AllMilestonesPlusGapsWidthRef\r\n  ).height\r\n\r\n  const widthOfProjectArea = useContainerDimensions(ProjectAreaWidthRef).width\r\n  const heightOfProjectArea = useContainerDimensions(ProjectAreaWidthRef).height\r\n  const SquaredProgressCallBack: any = React.useCallback(() => {\r\n    console.log(\"plusgap changed\")\r\n    return (\r\n      <ProjectArea\r\n        mouseOver={mouseOverProjectArea}\r\n        onClick={e => {\r\n          console.log(\"NOOOO WAY\")\r\n          props.OpenEditMilestoneTab(\"NoMilestone\", true, false)\r\n          props.closeDialog()\r\n        }}\r\n        onMouseEnter={() => {\r\n          setMouseOverProjectArea(true)\r\n        }}\r\n        onMouseLeave={() => {\r\n          setMouseOverProjectArea(false)\r\n        }}\r\n        maxheight={\r\n          props.milestones.length == 1\r\n            ? \"fit-content\"\r\n            : ((widthOfProjectArea * 0.95 * 0.9) / props.milestones.length) *\r\n              1.2\r\n        }\r\n        ref={ProjectAreaWidthRef}\r\n        id=\"projectareaWidth\"\r\n      >\r\n        <AllMilestonesPlusGaps\r\n          id=\"allmilestoneswithgaps\"\r\n          maxheight={\r\n            (widthOfProjectArea * 0.95 * 0.9) / props.milestones.length\r\n          }\r\n          ref={AllMilestonesPlusGapsWidthRef}\r\n          maxWidth={widthOfProjectArea * 0.95}\r\n        >\r\n          {props.milestones.map((elm, index) => {\r\n            return (\r\n              <SquaredProgress\r\n                OpenEditMilestoneTab={props.OpenEditMilestoneTab}\r\n                closeDialog={props.closeDialog}\r\n                getMilestoneData={props.getMilestoneData}\r\n                progressValue={PercentageConvertation(elm.progress)}\r\n                id={elm.id}\r\n                goal={elm.goal}\r\n                duration={elm.duration}\r\n                startDate={elm.startDate}\r\n                dueDate={elm.dueDate}\r\n                relativeProgress={elm.relativeProgress}\r\n                goalAchievingValue={PercentageConvertation(\r\n                  elm.goalAchievingProbability\r\n                )}\r\n                gaps={\r\n                  props.milestones.length === 1\r\n                    ? 0\r\n                    : props.milestones[props.milestones.length - 1] ===\r\n                      props.milestones[index]\r\n                    ? 0\r\n                    : (widthOfProjectArea * 0.95 * 0.1) /\r\n                        props.milestones.length +\r\n                      1\r\n                }\r\n                width={\r\n                  props.milestones.length < 3\r\n                    ? 500\r\n                    : (widthOfProjectArea * 0.95 * 0.9) /\r\n                      props.milestones.length\r\n                }\r\n                height={\r\n                  props.milestones.length < 3\r\n                    ? 500\r\n                    : (widthOfProjectArea * 0.95 * 0.9) /\r\n                      props.milestones.length\r\n                }\r\n              ></SquaredProgress>\r\n            )\r\n          })}{\" \"}\r\n        </AllMilestonesPlusGaps>\r\n      </ProjectArea>\r\n    )\r\n  }, [\r\n    widthOfProjectArea,\r\n    heightOfProjectArea,\r\n    AllMilestonesPlusGapsWidth,\r\n    AllMilestonesPlusGapsHeight,\r\n    mouseOverProjectArea\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      <SquaredProgressCallBack></SquaredProgressCallBack>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TreeViewMainContentComponent\r\n","import React from \"react\"\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Typography\r\n} from \"@material-ui/core\"\r\nimport createTypography from \"@material-ui/core/styles/createTypography\"\r\nimport CircleProgressContent from \"./CircleProgressContent\"\r\nimport SquaredProgress from \"./SquaredProgress\"\r\nimport { ProjectGoalText } from \"./ConstantUi\"\r\nimport { ProjectGoalLabel } from \"../forms/editprojectnameform\"\r\nimport TreeViewMainContentComponent from \"./TreeViewsMainContent\"\r\ninterface TreeViewComponentProps {\r\n  open: boolean\r\n  milestones: []\r\n  projectname: string\r\n  projectgoalachieveng: number\r\n  close: () => void\r\n  getMilestoneData: ([]) => void\r\n  OpenEditMilestoneTab: (\r\n    target: any,\r\n    isTreeview?: boolean,\r\n    insideTreeView?: boolean\r\n  ) => void\r\n}\r\n\r\nconst TreeViewComponent: React.FC<TreeViewComponentProps> = props => {\r\n  const useStyles = makeStyles(() => ({\r\n    paper: {\r\n      background: \"rgba(50, 50, 77, 0.95)\",\r\n      overflowX: \"hidden\",\r\n      margin: \"0\",\r\n      padding: \"0\"\r\n    }\r\n  }))\r\n\r\n  const classes = useStyles()\r\n  const TreeViewComponentContent = React.useCallback(() => {\r\n    return (\r\n      <Dialog\r\n        classes={{ paper: classes.paper }}\r\n        maxWidth={false}\r\n        open={props.open}\r\n        fullWidth={true}\r\n        onClose={() => {\r\n          props.close()\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: \"100vh\",\r\n            padding: \"50px 69px 0px 69px\"\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              height: \"100%\",\r\n              maxHeight: \"65%\",\r\n              position: \"relative\"\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                flexDirection: \"row\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                paddingBottom: \"2%\"\r\n              }}\r\n            >\r\n              <CircleProgressContent\r\n                smallSize\r\n                treeView\r\n                mediumSize\r\n                progressvalue={props.projectgoalachieveng}\r\n              ></CircleProgressContent>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  marginLeft: \"42px\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                <ProjectGoalLabel style={{ top: \"0px\" }}>\r\n                  Project Goal\r\n                </ProjectGoalLabel>\r\n                <ProjectGoalText>{props.projectname}</ProjectGoalText>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                position: \"relative\",\r\n                top: props.milestones.length < 3 ? \"10%\" : \"40%\"\r\n              }}\r\n            >\r\n              <TreeViewMainContentComponent\r\n                getMilestoneData={props.getMilestoneData}\r\n                OpenEditMilestoneTab={props.OpenEditMilestoneTab}\r\n                milestones={props.milestones}\r\n                closeDialog={props.close}\r\n              ></TreeViewMainContentComponent>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    )\r\n  }, [props.open])\r\n  React.useEffect(() => {\r\n    console.log(\"yep TreeViewOpened\")\r\n  }, [props.open])\r\n  return (\r\n    <>\r\n      <TreeViewComponentContent></TreeViewComponentContent>\r\n    </>\r\n  )\r\n}\r\nexport default TreeViewComponent\r\n","import React from \"react\"\r\nimport axios from \"../../functions/axios\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport UserLogo from \"../../static/svgicon/userDefault.svg\"\r\nimport IfLogo from \"../../static/svgicon/iflogo.svg\"\r\nimport StatusBarIcon from \"../../static/svgicon/statusbar.svg\"\r\nimport SearchButtonSvg from \"../../static/svgicon/searchbutton.svg\"\r\nimport MilestoneTabSvg from \"../../static/svgicon/milestonetab.svg\"\r\nimport AddIcon from \"../../static/svgicon/addicon.svg\"\r\nimport EditForm from \"../forms/editprojectnameform\"\r\nimport DatePickerForm from \"../forms/datepickerForm\"\r\nimport DescriptionBoxTextArea from \"../forms/descriptionProjectForm\"\r\nimport ClockIcon from \"../../static/svgicon/clock.svg\"\r\nimport threeDotImage from \"../../static/svgicon/threedot.svg\"\r\nimport BıgProgressIcon from \"../../static/svgicon/bigprogressicon.svg\"\r\nimport CloseMilestonEditTabIcon from \"../../static/svgicon/closemilestonetab.svg\"\r\nimport TreeViewSvgIcon from \"../../static/svgicon/treeviewlogo.svg\"\r\n\r\nimport {\r\n  ControlPanel,\r\n  ControlPanelItemsContainer,\r\n  DetailContent,\r\n  DetailContentContainer,\r\n  LeaftAsideContent2Image,\r\n  LeftAside,\r\n  LeftAsideContent2,\r\n  LeftAsideContent2TextBox,\r\n  LeftAsideContentBox,\r\n  LeftAsideUserContent,\r\n  MilestoneTabIcon,\r\n  ProjectDetailsContainer,\r\n  ProjectNameInputContainer,\r\n  TopHeader,\r\n  TopHeaderLeft,\r\n  TopHeaderLeftBıgProgressIcon,\r\n  TopHeaderRight,\r\n  TopHeaderStatusBar,\r\n  TopHeaderStatusBarContainer,\r\n  TopHeaderTitleBox,\r\n  UserLogoImage,\r\n  UserNameContainer,\r\n  MilestonesHeader,\r\n  MilestoneHeaderText,\r\n  MilestoneHeaderHintText,\r\n  MilestoneAddButtonIcon,\r\n  MilestoneAddButtonContainer,\r\n  MilestonesWrapper,\r\n  MilestonesBodyRoot,\r\n  MilestonesDateContentRoot,\r\n  MilestoneDateContentContanier,\r\n  MilestoneDateContentLabel,\r\n  MilestoneLeftSide,\r\n  MilestoneGoalStatic,\r\n  MilestoneGoalContent,\r\n  MilestoneDateDataContent,\r\n  MilestoneStatusBarsContentContainer,\r\n  MilestoneEndThreeDotContainer,\r\n  ClockIconContainer,\r\n  MilestoneEndThreeDotImage,\r\n  MilestoneGoalStaticsContainer,\r\n  ClockIconImage,\r\n  MilestoneStatusBarContentItems,\r\n  MilestoneSearchTabIcon,\r\n  DetailMilestonesRoot,\r\n  DetailMilestoneContainer,\r\n  Detail2,\r\n  MilestoneCloseEditTabIcon,\r\n  MilestoneTreeViewIcon\r\n} from \"../ui/ConstantUi\"\r\nimport CircleProgressContent from \"../ui/CircleProgressContent\"\r\nimport { ConvertDateFormat } from \"../../functions/cleaningData\"\r\nimport LinearProgressBar from \"../ui/LinearProgressBar\"\r\nimport DragComponent from \"../ui/Draggable\"\r\nimport MilestoneEditComponent from \"../ui/MilestoneEdit\"\r\nimport { AnySoaRecord } from \"dns\"\r\nimport TreeViewComponent from \"../ui/TreeViewComponent\"\r\n\r\nimport { CircularProgress } from \"@material-ui/core\"\r\n\r\nexport interface ProjectDetailPageProps {\r\n  id: any\r\n}\r\n\r\ntype Props = RouteComponentProps & ProjectDetailPageProps\r\nconst ProjectDetailPage: React.FC<Props> = props => {\r\n  const [data, setData] = React.useState<any[] | null>()\r\n  const [milestonesTab, setMilestonesTab] = React.useState<boolean>(false)\r\n  const [milestoneEditTab, setMilestoneEditTab] = React.useState<boolean>(false)\r\n  const [activeMilestoneData, setActiveMilestoneData] = React.useState<any[]>(\r\n    []\r\n  )\r\n  const [\r\n    isCreatingNewMilestones,\r\n    setisCreatingNewMilestones\r\n  ] = React.useState<boolean>(false)\r\n  const [TreeViewOpened, setTreeViewOpened] = React.useState<boolean>(false)\r\n  const [selectedTab, setSelectedTab] = React.useState<string | undefined>()\r\n  let DraggerRef = React.useRef<React.MutableRefObject<any> | any>()\r\n  const ChangeDraggerRef = dom => {\r\n    console.log(\"checkitout\", dom)\r\n    DraggerRef = dom\r\n  }\r\n  const getdata = async () => {\r\n    const state = props.match.params\r\n    const id = (state as any)?.id\r\n    await axios\r\n      .get(`project/detail/${id}`)\r\n      .then(res => {\r\n        setData([res.data])\r\n        setisCreatingNewMilestones(false)\r\n      })\r\n      .catch(err => prompt(err))\r\n  }\r\n\r\n  const OpenEditMilestoneTab = (\r\n    target?: any,\r\n    isTreeview?: boolean,\r\n    insideTreeView?: boolean\r\n  ) => {\r\n    if (isTreeview && insideTreeView) {\r\n      setSelectedTab(`${\"milestonewrapper\" + target.id}`)\r\n      setMilestoneEditTab(true)\r\n      setMilestonesTab(true)\r\n    } else if (isTreeview && !insideTreeView) {\r\n      setMilestoneEditTab(false)\r\n      setMilestonesTab(false)\r\n    } else {\r\n      setSelectedTab(target.id)\r\n      setMilestoneEditTab(true)\r\n    }\r\n  }\r\n  const getMilestoneDataInfo = (activeMilestione: any[]) => {\r\n    setActiveMilestoneData(activeMilestione)\r\n  }\r\n  React.useEffect(() => {\r\n    console.log(\"look\", data)\r\n  }, [data])\r\n  // React.useState(()=>{\r\n  //   if activeMilestoneData.length>1{\r\n\r\n  //   }\r\n\r\n  // },[activeMilestoneData])\r\n  const CloseTreeView = () => {\r\n    setTreeViewOpened(false)\r\n  }\r\n  const ProjectDetailContent: any = React.useCallback(() => {\r\n    return data?.map((elm, index) => (\r\n      <>\r\n        <MilestoneTreeViewIcon\r\n          onClick={() => {\r\n            console.log(\"you clicked that\")\r\n            setTreeViewOpened(true)\r\n          }}\r\n          src={TreeViewSvgIcon}\r\n          color={TreeViewOpened ? \"rgb(228, 220, 0)\" : \"\"}\r\n        ></MilestoneTreeViewIcon>\r\n\r\n        <TreeViewComponent\r\n          getMilestoneData={getMilestoneDataInfo}\r\n          milestones={elm.milestones}\r\n          OpenEditMilestoneTab={OpenEditMilestoneTab}\r\n          projectname={elm.goal}\r\n          projectgoalachieveng={elm.goalAchievingProbability}\r\n          close={CloseTreeView}\r\n          open={TreeViewOpened}\r\n        ></TreeViewComponent>\r\n        <ProjectDetailsContainer ismilestoneedit={milestoneEditTab} key={index}>\r\n          <LeftAside>\r\n            <LeftAsideContentBox>\r\n              {\" \"}\r\n              <LeftAsideUserContent>\r\n                {\" \"}\r\n                <UserLogoImage src={UserLogo}></UserLogoImage>\r\n                <UserNameContainer>{elm.user}</UserNameContainer>\r\n              </LeftAsideUserContent>\r\n              <LeftAsideContent2>\r\n                <LeaftAsideContent2Image src={IfLogo}></LeaftAsideContent2Image>\r\n                <LeftAsideContent2TextBox>Project</LeftAsideContent2TextBox>\r\n              </LeftAsideContent2>\r\n            </LeftAsideContentBox>\r\n          </LeftAside>\r\n          <TopHeader>\r\n            <TopHeaderLeft>\r\n              <CircleProgressContent\r\n                mainone\r\n                progressvalue={\r\n                  elm.milestones.length > 0 ? elm.goalAchievingProbability : 0\r\n                }\r\n              ></CircleProgressContent>\r\n            </TopHeaderLeft>\r\n            <TopHeaderRight>\r\n              <TopHeaderTitleBox>\r\n                <ProjectNameInputContainer style={{ marginTop: \"5px\" }}>\r\n                  <EditForm\r\n                    ismilestoneedit={false}\r\n                    callbackFunction={getdata}\r\n                    isnamechanged={elm.isnamechanged}\r\n                    user={elm.user}\r\n                    defaultValue={elm.goal ? elm.goal : \"\"}\r\n                    typeofproject={elm.typeofproject}\r\n                    id={elm.id}\r\n                  ></EditForm>\r\n                </ProjectNameInputContainer>\r\n              </TopHeaderTitleBox>\r\n\r\n              <LinearProgressBar\r\n                // timeDifference={elm.timeDifference}\r\n                // plannedEndDate={elm.plannedEndDate}\r\n                // endDate={elm.endDate}\r\n                // progressOfTime={elm.progressOfTime}\r\n                // progressOfProject={elm.progressOfProject}\r\n                // startDate={elm.startDate}\r\n                // milestones={elm.milestones}\r\n                value={[\r\n                  elm.timeDifference,\r\n                  elm.plannedEndDate,\r\n                  elm.endDate,\r\n                  elm.progressOfTime,\r\n                  elm.progressOfProject,\r\n                  elm.startDate\r\n                ]}\r\n                milestones={elm.milestones}\r\n              ></LinearProgressBar>\r\n            </TopHeaderRight>\r\n          </TopHeader>\r\n          <ControlPanel>\r\n            <ControlPanelItemsContainer>\r\n              <MilestoneSearchTabIcon\r\n                color={\r\n                  !milestonesTab ? \"rgb(228, 220, 0)\" : \"rgb(240, 240, 255)\"\r\n                }\r\n                onClick={() => {\r\n                  setMilestonesTab(false)\r\n                  setMilestoneEditTab(false)\r\n                }}\r\n                src={SearchButtonSvg}\r\n              ></MilestoneSearchTabIcon>\r\n              <MilestoneTabIcon\r\n                color={\r\n                  milestonesTab ? \"rgb(228, 220, 0)\" : \"rgb(240, 240, 255)\"\r\n                }\r\n                onClick={() => {\r\n                  setMilestonesTab(true)\r\n                }}\r\n                src={MilestoneTabSvg}\r\n              ></MilestoneTabIcon>\r\n            </ControlPanelItemsContainer>\r\n          </ControlPanel>\r\n          <DetailContent id=\"DetailsRoot\">\r\n            {milestonesTab ? (\r\n              <DetailMilestonesRoot id=\"MilestoneRoot\">\r\n                <DetailMilestoneContainer width={100}>\r\n                  <MilestonesHeader>\r\n                    <MilestoneHeaderText>Milestones</MilestoneHeaderText>\r\n                    <MilestoneHeaderHintText>\r\n                      In this section you can manage the milestones of your\r\n                      project\r\n                    </MilestoneHeaderHintText>\r\n                  </MilestonesHeader>\r\n                  <MilestoneAddButtonContainer>\r\n                    {isCreatingNewMilestones ? (\r\n                      <CircularProgress\r\n                        style={{ color: \"rgb(228, 220, 0)\" }}\r\n                        disableShrink\r\n                      />\r\n                    ) : (\r\n                      <MilestoneAddButtonIcon\r\n                        onClick={async () => {\r\n                          setisCreatingNewMilestones(true)\r\n                          await addMilestoneFunction(elm.id)\r\n                        }}\r\n                        src={AddIcon}\r\n                      ></MilestoneAddButtonIcon>\r\n                    )}\r\n                  </MilestoneAddButtonContainer>\r\n\r\n                  <DragComponent\r\n                    editTab={OpenEditMilestoneTab}\r\n                    isEditTabOpened={milestoneEditTab}\r\n                    selectedTab={selectedTab}\r\n                    getMilestoneData={getMilestoneDataInfo}\r\n                    value={[\r\n                      elm.timeDifference,\r\n                      elm.plannedEndDate,\r\n                      elm.endDate,\r\n                      elm.progressOfTime,\r\n                      elm.progressOfProject,\r\n                      elm.startDate,\r\n                      elm.goal\r\n                    ]}\r\n                    DraggerRef={ChangeDraggerRef}\r\n                    milestones={elm.milestones}\r\n                    callbackFunction={getdata}\r\n                    goalachiveng={\r\n                      elm.milestones.length > 0\r\n                        ? elm.goalAchievingProbability\r\n                        : 0\r\n                    }\r\n                  ></DragComponent>\r\n                </DetailMilestoneContainer>\r\n              </DetailMilestonesRoot>\r\n            ) : (\r\n              <DetailContentContainer key={index}>\r\n                {\" \"}\r\n                <DatePickerForm\r\n                  callbackFunction={getdata}\r\n                  user={elm.user}\r\n                  typeofproject={elm.typeofproject}\r\n                  defaultStartData={elm.startDate}\r\n                  defaultPlannedEndData={elm.plannedEndDate}\r\n                  id={elm.id}\r\n                  milestones={elm.milestones}\r\n                ></DatePickerForm>\r\n                <span\r\n                  style={{\r\n                    fontFamily: \"Roboto\",\r\n                    fontSize: \"12px\",\r\n                    fontStyle: \"normal\",\r\n                    letterSpacing: \"0em\",\r\n                    color: \"rgba(228, 220, 0, 1)\",\r\n                    marginBottom: \"2px\"\r\n                  }}\r\n                >\r\n                  Description{\" \"}\r\n                </span>\r\n                <DescriptionBoxTextArea\r\n                  callbackFunction={getdata}\r\n                  id={elm.id}\r\n                  typeofproject={elm.typeofproject}\r\n                  user={elm.user}\r\n                  defaultValue={elm.description ? elm.description : \"\"}\r\n                  firstTimeChange={!elm.description ? true : false}\r\n                ></DescriptionBoxTextArea>\r\n              </DetailContentContainer>\r\n            )}\r\n          </DetailContent>\r\n          {milestoneEditTab && (\r\n            <Detail2>\r\n              <MilestoneTreeViewIcon\r\n                style={{\r\n                  top: \"30%\",\r\n                  right: \"0\"\r\n                }}\r\n                onClick={() => {\r\n                  console.log(\"you clicked that\")\r\n                  setTreeViewOpened(true)\r\n                }}\r\n                src={TreeViewSvgIcon}\r\n                color={TreeViewOpened ? \"rgb(228, 220, 0)\" : \"\"}\r\n              ></MilestoneTreeViewIcon>\r\n              <MilestoneCloseEditTabIcon\r\n                src={CloseMilestonEditTabIcon}\r\n                onClick={() => {\r\n                  setMilestoneEditTab(false)\r\n                }}\r\n              ></MilestoneCloseEditTabIcon>\r\n              <DetailContentContainer id=\"milestoneedittabcontainer\">\r\n                <MilestoneEditComponent\r\n                  projectdata={[\r\n                    elm.timeDifference,\r\n                    elm.plannedEndDate,\r\n                    elm.endDate,\r\n                    elm.progressOfTime,\r\n                    elm.progressOfProject,\r\n                    elm.startDate\r\n                  ]}\r\n                  projectid={elm.id}\r\n                  goalachivevalue={\r\n                    elm.milestones.length > 0 ? elm.goalAchievingProbability : 0\r\n                  }\r\n                  data={elm.milestones.filter(\r\n                    elm => elm.id === activeMilestoneData[0].id\r\n                  )}\r\n                  callbackFunction={getdata}\r\n                  milestones={elm.milestones}\r\n                  isOpened={milestoneEditTab}\r\n                ></MilestoneEditComponent>\r\n              </DetailContentContainer>\r\n            </Detail2>\r\n          )}\r\n        </ProjectDetailsContainer>\r\n      </>\r\n    ))\r\n  }, [\r\n    data,\r\n    milestoneEditTab,\r\n    milestonesTab,\r\n    activeMilestoneData,\r\n    TreeViewOpened,\r\n    isCreatingNewMilestones\r\n  ])\r\n  React.useEffect(() => {\r\n    getdata()\r\n  }, [props.match.params])\r\n\r\n  const addMilestoneFunction = async (main_project_id: any) => {\r\n    return await axios\r\n      .post(\"project/milestones/create\", {\r\n        main_project: main_project_id\r\n      })\r\n      .then(res => getdata())\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  return data ? (\r\n    <>\r\n      <ProjectDetailContent></ProjectDetailContent>\r\n    </>\r\n  ) : (\r\n    <h2>404 Detailed Not Found</h2>\r\n  )\r\n}\r\n\r\nexport default ProjectDetailPage\r\n","import Navbar from \"./Navbar\"\r\nimport { getdata } from \"../functions/api\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useLocation\r\n} from \"react-router-dom\"\r\nimport BodyComponent from \"./Body\"\r\nimport React from \"react\"\r\nimport OverviewProject from \"./screens/Overview\"\r\nimport ProjectDetailPageProps from \"./screens/ProjectDetails\"\r\nimport axios from \"../functions/axios\"\r\nimport DragComponent from \"./ui/Draggable\"\r\nexport interface BaseProps {}\r\n\r\nfunction NavbarComponent() {\r\n  let location = useLocation()\r\n  if (location.pathname.includes(\"project/detail\")) {\r\n    return <Navbar context={\"Projects\"}></Navbar>\r\n  }\r\n\r\n  return <Navbar></Navbar>\r\n}\r\n\r\nconst BaseApp: React.FC<BaseProps> = () => {\r\n  const [detailPage, setDetailPage] = React.useState<boolean>(false)\r\n  React.useEffect(() => {\r\n    if (window.location.href.includes(\"detail\")) {\r\n      setDetailPage(true)\r\n    } else if (window.location.href.includes(\"all\")) {\r\n      setDetailPage(false)\r\n    }\r\n  }, [window.location.href, detailPage])\r\n  return (\r\n    <Router>\r\n      <Route>\r\n        <NavbarComponent></NavbarComponent>\r\n        <BodyComponent>\r\n          <Switch>\r\n            <Route exact path=\"/frontend\" component={OverviewProject} />\r\n            <Route path=\"/project/all\" component={OverviewProject} />\r\n            <Route\r\n              path=\"/project/detail/:id\"\r\n              component={ProjectDetailPageProps}\r\n            />\r\n            <Route path=\"/users\" />\r\n          </Switch>\r\n        </BodyComponent>\r\n      </Route>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default BaseApp\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport BaseApp from \"./components/base\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BaseApp />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}