[{"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\base.tsx":"1","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\screens\\Overview.tsx":"3","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\Body.tsx":"4","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\descriptionProjectForm.tsx":"5","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\functions\\axios.tsx":"6","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\LinearProgressBar.tsx":"7","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\RadioButtons.tsx":"8","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\Draggable.tsx":"9","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\DatePicker.tsx":"10","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\functions\\cleaningData.tsx":"11","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\index.tsx":"12","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\Navbar.tsx":"13","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\screens\\ProjectDetails.tsx":"14","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\ConstantUi.tsx":"15","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\CircleProgressContent.tsx":"16","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\createProjectForm.tsx":"17","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\editprojectnameform.tsx":"18","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\Checkbox.tsx":"19","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\datepickerForm.tsx":"20"},{"size":1626,"mtime":1612250380312,"results":"21","hashOfConfig":"22"},{"size":440,"mtime":1612217930800,"results":"23","hashOfConfig":"22"},{"size":3485,"mtime":1612249634229,"results":"24","hashOfConfig":"22"},{"size":275,"mtime":1612217930777,"results":"25","hashOfConfig":"22"},{"size":5003,"mtime":1612217930780,"results":"26","hashOfConfig":"22"},{"size":178,"mtime":1612219709455,"results":"27","hashOfConfig":"22"},{"size":10576,"mtime":1612469460006,"results":"28","hashOfConfig":"22"},{"size":1154,"mtime":1612217930794,"results":"29","hashOfConfig":"22"},{"size":6735,"mtime":1612217930793,"results":"30","hashOfConfig":"22"},{"size":6116,"mtime":1612217930793,"results":"31","hashOfConfig":"22"},{"size":5966,"mtime":1612217551378,"results":"32","hashOfConfig":"22"},{"size":530,"mtime":1612217930799,"results":"33","hashOfConfig":"22"},{"size":3479,"mtime":1612251143898,"results":"34","hashOfConfig":"22"},{"size":8994,"mtime":1612217930790,"results":"35","hashOfConfig":"22"},{"size":16094,"mtime":1612217930792,"results":"36","hashOfConfig":"22"},{"size":3352,"mtime":1612217930792,"results":"37","hashOfConfig":"22"},{"size":2378,"mtime":1612249644988,"results":"38","hashOfConfig":"22"},{"size":4381,"mtime":1612217930780,"results":"39","hashOfConfig":"22"},{"size":1878,"mtime":1612217930791,"results":"40","hashOfConfig":"22"},{"size":3384,"mtime":1612217930779,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"1b1uq56",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\base.tsx",["92","93","94","95","96","97"],"import Navbar from \"./Navbar\"\r\nimport { getdata } from \"../functions/api\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useLocation\r\n} from \"react-router-dom\"\r\nimport BodyComponent from \"./Body\"\r\nimport React from \"react\"\r\nimport OverviewProject from \"./screens/Overview\"\r\nimport ProjectDetailPageProps from \"./screens/ProjectDetails\"\r\nimport axios from \"../functions/axios\"\r\nimport DragComponent from \"./ui/Draggable\"\r\nexport interface BaseProps {}\r\n\r\nfunction NavbarComponent() {\r\n  let location = useLocation()\r\n  if (location.pathname.includes(\"project/detail\")) {\r\n    return <Navbar context={\"Projects\"}></Navbar>\r\n  }\r\n\r\n  return <Navbar></Navbar>\r\n}\r\n\r\nconst BaseApp: React.FC<BaseProps> = () => {\r\n  const [detailPage, setDetailPage] = React.useState<boolean>(false)\r\n  React.useEffect(() => {\r\n    if (window.location.href.includes(\"detail\")) {\r\n      setDetailPage(true)\r\n    } else if (window.location.href.includes(\"all\")) {\r\n      setDetailPage(false)\r\n    }\r\n  }, [window.location.href, detailPage])\r\n  return (\r\n    <Router>\r\n      <Route>\r\n        <NavbarComponent></NavbarComponent>\r\n        <BodyComponent>\r\n          <Switch>\r\n            <Route exact path=\"/frontend\" component={OverviewProject} />\r\n            <Route path=\"/frontend/project/all\" component={OverviewProject} />\r\n            <Route\r\n              path=\"/frontend/project/detail/:id\"\r\n              component={ProjectDetailPageProps}\r\n            />\r\n            <Route path=\"/users\" />\r\n          </Switch>\r\n        </BodyComponent>\r\n      </Route>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default BaseApp\r\n",["98","99"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\screens\\Overview.tsx",["100"],"import React from \"react\"\r\nimport axios from \"../../functions/axios\"\r\nimport styled from \"styled-components\"\r\nimport ProgressBar from \"../../static/svgicon/progressbar.svg\"\r\nimport SubProjectBoxIcon from \"../../static/svgicon/subprojectelement.svg\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { JsxElement } from \"typescript\"\r\nimport {\r\n  GoalText,\r\n  HeaderTextContainer,\r\n  MainProjectContainer,\r\n  ProgressBarContainer,\r\n  ProgressBarImage,\r\n  ProjectContentBox,\r\n  ProjectNameContainer,\r\n  ProjectOverviewContentBox,\r\n  ProjectOverviewHeaderBox,\r\n  ProjectOverviewWrapper,\r\n  SubProjectGroup,\r\n  SubSubProjectBox,\r\n  SubSubProjectItem\r\n} from \"../ui/ConstantUi\"\r\n\r\nconst SubSubProjectGroupBox = styled.div``\r\ninterface OverviewProjectProps {\r\n  children: JsxElement[]\r\n}\r\ninterface LoadedDataProps {\r\n  data: any\r\n  key: number\r\n}\r\n\r\nconst OverviewProject: React.FC<OverviewProjectProps> = props => {\r\n  const [data, setData] = React.useState<any[] | null>()\r\n  const getdata = async () => {\r\n    await axios\r\n      .get(`project/all/`)\r\n      .then(res => {\r\n        res.data.length > 0 ? setData(res.data) : setData(null)\r\n      })\r\n      .catch(err => prompt(err))\r\n  }\r\n  React.useEffect(() => {\r\n    getdata()\r\n  }, [])\r\n  const history = useHistory()\r\n\r\n  const LoadedData = (props: LoadedDataProps) => {\r\n    const [onMouse, setOnMouse] = React.useState<boolean>(false)\r\n\r\n    return (\r\n      <ProjectOverviewWrapper\r\n        onMouseEnter={() => setOnMouse(true)}\r\n        onMouseLeave={() => {\r\n          setOnMouse(false)\r\n        }}\r\n        id={props.data.id}\r\n        mouseOver={onMouse}\r\n        key={props.key}\r\n        onClick={() => history.push(`project/detail/${props.data.id}`)}\r\n      >\r\n        <ProjectOverviewContentBox>\r\n          <ProjectOverviewHeaderBox>\r\n            <ProgressBarContainer>\r\n              <ProgressBarImage src={ProgressBar}></ProgressBarImage>\r\n            </ProgressBarContainer>\r\n            <HeaderTextContainer>\r\n              <GoalText>Goal</GoalText>\r\n              <ProjectNameContainer>\r\n                {props.data.isnamechanged === true\r\n                  ? props.data.goal\r\n                  : \"Project #\" + props.data.id}\r\n              </ProjectNameContainer>\r\n            </HeaderTextContainer>\r\n          </ProjectOverviewHeaderBox>\r\n          <ProjectContentBox>\r\n            <MainProjectContainer>\r\n              <SubSubProjectBox>\r\n                <SubProjectGroup>\r\n                  <SubSubProjectItem\r\n                    src={SubProjectBoxIcon}\r\n                  ></SubSubProjectItem>\r\n                  <SubSubProjectItem\r\n                    src={SubProjectBoxIcon}\r\n                  ></SubSubProjectItem>\r\n                </SubProjectGroup>\r\n                <SubProjectGroup>\r\n                  <SubSubProjectItem\r\n                    src={SubProjectBoxIcon}\r\n                  ></SubSubProjectItem>\r\n                  <SubSubProjectItem\r\n                    src={SubProjectBoxIcon}\r\n                  ></SubSubProjectItem>\r\n                </SubProjectGroup>\r\n              </SubSubProjectBox>\r\n            </MainProjectContainer>\r\n          </ProjectContentBox>\r\n        </ProjectOverviewContentBox>\r\n      </ProjectOverviewWrapper>\r\n    )\r\n  }\r\n\r\n  return data ? (\r\n    <>\r\n      {data?.map((data: any, index: number) => {\r\n        return <LoadedData data={data} key={index}></LoadedData>\r\n      })}\r\n    </>\r\n  ) : (\r\n    <h2>Project Not Created</h2>\r\n  )\r\n}\r\n\r\nexport default OverviewProject\r\n",["101","102"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\Body.tsx",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\descriptionProjectForm.tsx",["103","104","105","106"],"import styled from \"styled-components\"\r\nimport React from \"react\"\r\nimport axios from \"../../functions/axios\"\r\nimport { IconButton } from \"@material-ui/core\"\r\nimport {\r\n  DescriptionBoxContainer,\r\n  SaveIcon,\r\n  SaveDiscardContainer,\r\n  DiscardIcon\r\n} from \"../ui/ConstantUi\"\r\nimport DiscardSvgIcon from \"../../static/svgicon/discard.svg\"\r\nimport AcceptIcon from \"../../static/svgicon/accept.svg\"\r\nimport { stringify } from \"querystring\"\r\n\r\nexport interface DescriptionBoxTextAreaProps {\r\n  id: string\r\n  user: string\r\n  typeofproject: string\r\n  defaultValue: null | string\r\n  firstTimeChange: boolean\r\n  callbackFunction: any\r\n}\r\n\r\nconst DescriptionInput = styled.textarea`\r\n  flex: 1;\r\n  display: block;\r\n  border: none;\r\n  min-width: 0;\r\n  border: none;\r\n  overflow: auto;\r\n  outline: none;\r\n  color: rgba(240, 240, 255, 0.7);\r\n  font-size: 15px;\r\n  padding: 5px;\r\n  font-weight: 400;\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n  overflow-y: auto;\r\n  font-family: aileron;\r\n\r\n  background-color: transparent;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    border-radius: 10px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background: rgba(240, 240, 255, 1);\r\n  }\r\n`\r\n\r\nconst DescriptionBoxTextArea: React.FC<DescriptionBoxTextAreaProps> = props => {\r\n  const [activeDescriptionText, setActiveDescriptionText] = React.useState<\r\n    string | any\r\n  >(\"\")\r\n  const [withoutSave, setWithoutSave] = React.useState<boolean>(true)\r\n  const [processName, setProcessName] = React.useState<string>(\"\")\r\n  const [defaultValue, setDefaultValue] = React.useState<any>([\"\"])\r\n  const InputBoxRef = React.useRef<React.MutableRefObject<any> | any>()\r\n  React.useEffect(() => {\r\n    if (processName === \"Discard\" && withoutSave && props.firstTimeChange) {\r\n      setActiveDescriptionText(defaultValue[0])\r\n      InputBoxRef.current.value = defaultValue[0]\r\n    } else if (processName === \"Discard\" && withoutSave) {\r\n      InputBoxRef.current.value = props.defaultValue\r\n      setActiveDescriptionText(props.defaultValue)\r\n    } else if (processName === \"Discard\") {\r\n      if (defaultValue.length == 2) {\r\n        setActiveDescriptionText(props.defaultValue)\r\n        InputBoxRef.current.value = props.defaultValue\r\n      } else if (defaultValue.length > 2) {\r\n        setActiveDescriptionText(defaultValue[defaultValue.length - 2])\r\n        InputBoxRef.current.value = defaultValue[defaultValue.length - 2]\r\n      } else {\r\n        setActiveDescriptionText(defaultValue[0])\r\n        InputBoxRef.current.value = defaultValue[0]\r\n      }\r\n    }\r\n  }, [processName])\r\n  React.useEffect(() => {\r\n    if (props.firstTimeChange) {\r\n      //pass\r\n      InputBoxRef.current.value = defaultValue[0]\r\n    } else {\r\n      InputBoxRef.current.value = props.defaultValue\r\n    }\r\n  }, [])\r\n  const handleDescriptionBoxSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n\r\n    if (activeDescriptionText === \"\") {\r\n    } else {\r\n      if (processName === \"Save\") {\r\n        await axios\r\n          .put(`project/detail/${props.id}`, {\r\n            user: props.user,\r\n            typeofproject: props.typeofproject,\r\n            description: activeDescriptionText\r\n          })\r\n          .then(res => {\r\n            setWithoutSave(false)\r\n            setDefaultValue([...defaultValue, res.data.description])\r\n            props.callbackFunction()\r\n            InputBoxRef.current.value = res.data.description\r\n          })\r\n          .catch(err => prompt(err.response))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DescriptionBoxContainer>\r\n        <form\r\n          onSubmit={handleDescriptionBoxSubmit}\r\n          id=\"descriptionboxform\"\r\n          style={{ display: \"flex\", width: \"100%\" }}\r\n        >\r\n          <DescriptionInput\r\n            style={{ fontFamily: \"aileron\" }}\r\n            ref={InputBoxRef}\r\n            onChange={(e: any) => {\r\n              setActiveDescriptionText(e.target.value)\r\n            }}\r\n          ></DescriptionInput>\r\n        </form>\r\n      </DescriptionBoxContainer>\r\n      <SaveDiscardContainer>\r\n        <IconButton\r\n          disabled={!activeDescriptionText}\r\n          onClick={() => {\r\n            setProcessName(\"Save\")\r\n          }}\r\n          id=\"savebutton\"\r\n          type=\"submit\"\r\n          form=\"descriptionboxform\"\r\n        >\r\n          <SaveIcon src={AcceptIcon}></SaveIcon>\r\n        </IconButton>\r\n        <IconButton\r\n          disabled={!activeDescriptionText}\r\n          onBlur={() => {\r\n            setProcessName(\"\")\r\n          }}\r\n          onClick={() => {\r\n            setProcessName(\"Discard\")\r\n          }}\r\n          id=\"discardbutton\"\r\n        >\r\n          <DiscardIcon src={DiscardSvgIcon}></DiscardIcon>\r\n        </IconButton>\r\n      </SaveDiscardContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DescriptionBoxTextArea\r\n","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\functions\\axios.tsx",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\LinearProgressBar.tsx",["107","108","109","110","111","112"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\RadioButtons.tsx",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\Draggable.tsx",["113","114","115","116","117","118","119","120","121","122","123"],"import UserLogo from \"../../static/svgicon/userDefault.svg\"\r\nimport IfLogo from \"../../static/svgicon/iflogo.svg\"\r\nimport StatusBarIcon from \"../../static/svgicon/statusbar.svg\"\r\nimport SearchButtonSvg from \"../../static/svgicon/searchbutton.svg\"\r\nimport MilestoneTabSvg from \"../../static/svgicon/milestonetab.svg\"\r\nimport AddIcon from \"../../static/svgicon/addicon.svg\"\r\nimport EditForm from \"../forms/editprojectnameform\"\r\nimport DatePickerForm from \"../forms/datepickerForm\"\r\nimport DescriptionBoxTextArea from \"../forms/descriptionProjectForm\"\r\nimport ClockIcon from \"../../static/svgicon/clock.svg\"\r\nimport threeDotImage from \"../../static/svgicon/threedot.svg\"\r\nimport BıgProgressIcon from \"../../static/svgicon/bigprogressicon.svg\"\r\nimport {\r\n  MilestonesWrapper,\r\n  MilestonesBodyRoot,\r\n  MilestonesDateContentRoot,\r\n  MilestoneDateContentContanier,\r\n  MilestoneDateContentLabel,\r\n  MilestoneLeftSide,\r\n  MilestoneGoalStatic,\r\n  MilestoneGoalContent,\r\n  MilestoneDateDataContent,\r\n  MilestoneStatusBarsContentContainer,\r\n  MilestoneEndThreeDotContainer,\r\n  ClockIconContainer,\r\n  MilestoneEndThreeDotImage,\r\n  MilestoneGoalStaticsContainer,\r\n  ClockIconImage,\r\n  MilestoneStatusBarContentItems\r\n} from \"../ui/ConstantUi\"\r\nimport CircleProgressContent from \"../ui/CircleProgressContent\"\r\nimport { ConvertDateFormat } from \"../../functions/cleaningData\"\r\nimport LinearProgressBar from \"../ui/LinearProgressBar\"\r\n\r\nimport React, { useState } from \"react\"\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\n\r\ninterface DragComponentProps {\r\n  goalachiveng: number\r\n  value: any\r\n  milestones: any\r\n}\r\nconst DragComponent: React.FC<DragComponentProps> = props => {\r\n  const [characters, updateCharacters] = useState(props.milestones)\r\n  // React.useEffect(() => {\r\n  //   console.log(props.data)\r\n  // }, [])\r\n  function handleOnDragEnd(result: any) {\r\n    if (!result.destination) return\r\n    const items = Array.from(characters)\r\n    const [reorderedItem] = items.splice(result.source.index, 1)\r\n    items.splice(result.destination.index, 0, reorderedItem)\r\n    updateCharacters(items)\r\n  }\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={handleOnDragEnd}>\r\n      <Droppable droppableId=\"characters\">\r\n        {provided => (\r\n          <MilestonesBodyRoot\r\n            className=\"characters\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {characters.map(\r\n              (\r\n                {\r\n                  id,\r\n                  duration,\r\n                  progress,\r\n                  relativeProgress,\r\n                  startDate,\r\n                  dueDate,\r\n                  is_main_project\r\n                },\r\n                index: number\r\n              ) => {\r\n                return (\r\n                  <Draggable key={id} draggableId={id} index={index}>\r\n                    {provided => (\r\n                      <>\r\n                        <MilestonesWrapper\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          key={index}\r\n                        >\r\n                          <MilestoneLeftSide>\r\n                            <ClockIconContainer>\r\n                              <ClockIconImage src={ClockIcon}></ClockIconImage>\r\n                            </ClockIconContainer>\r\n                            <MilestoneGoalStaticsContainer>\r\n                              {\" \"}\r\n                              <MilestoneGoalStatic>Goal</MilestoneGoalStatic>\r\n                              <MilestoneGoalContent>\r\n                                Type in the goal of the milestone here\r\n                              </MilestoneGoalContent>\r\n                            </MilestoneGoalStaticsContainer>\r\n                          </MilestoneLeftSide>\r\n                          <MilestonesDateContentRoot>\r\n                            <MilestoneDateContentContanier>\r\n                              <MilestoneDateContentLabel>\r\n                                Start Date\r\n                              </MilestoneDateContentLabel>\r\n                              <MilestoneDateDataContent>\r\n                                {ConvertDateFormat(startDate)}\r\n                              </MilestoneDateDataContent>\r\n                            </MilestoneDateContentContanier>\r\n                            <MilestoneDateContentContanier>\r\n                              <MilestoneDateContentLabel>\r\n                                End Date\r\n                              </MilestoneDateContentLabel>\r\n                              <MilestoneDateDataContent>\r\n                                {ConvertDateFormat(dueDate)}\r\n                              </MilestoneDateDataContent>\r\n                            </MilestoneDateContentContanier>\r\n                            <MilestoneDateContentContanier>\r\n                              <MilestoneDateContentLabel>\r\n                                Duration\r\n                              </MilestoneDateContentLabel>\r\n                              <MilestoneDateDataContent>\r\n                                {duration}\r\n                              </MilestoneDateDataContent>\r\n                            </MilestoneDateContentContanier>\r\n                          </MilestonesDateContentRoot>\r\n                          <MilestoneStatusBarsContentContainer>\r\n                            <CircleProgressContent\r\n                              progressvalue={props.goalachiveng}\r\n                              smallSize\r\n                            ></CircleProgressContent>\r\n                            <div style={{ display: \"flex\", width: \"50%\" }}>\r\n                              <LinearProgressBar\r\n                                milestones={props.milestones}\r\n                                value={props.value}\r\n                                smallSize\r\n                              ></LinearProgressBar>\r\n                            </div>\r\n                          </MilestoneStatusBarsContentContainer>\r\n                          <MilestoneEndThreeDotContainer>\r\n                            <MilestoneEndThreeDotImage\r\n                              src={threeDotImage}\r\n                            ></MilestoneEndThreeDotImage>\r\n                          </MilestoneEndThreeDotContainer>\r\n                        </MilestonesWrapper>\r\n                      </>\r\n                    )}\r\n                  </Draggable>\r\n                )\r\n              }\r\n            )}\r\n            {provided.placeholder}\r\n          </MilestonesBodyRoot>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  )\r\n}\r\n\r\nexport default DragComponent\r\n","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\DatePicker.tsx",["124"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\functions\\cleaningData.tsx",["125"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\index.tsx",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\Navbar.tsx",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\screens\\ProjectDetails.tsx",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"import React from \"react\"\r\nimport axios from \"../../functions/axios\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport UserLogo from \"../../static/svgicon/userDefault.svg\"\r\nimport IfLogo from \"../../static/svgicon/iflogo.svg\"\r\nimport StatusBarIcon from \"../../static/svgicon/statusbar.svg\"\r\nimport SearchButtonSvg from \"../../static/svgicon/searchbutton.svg\"\r\nimport MilestoneTabSvg from \"../../static/svgicon/milestonetab.svg\"\r\nimport AddIcon from \"../../static/svgicon/addicon.svg\"\r\nimport EditForm from \"../forms/editprojectnameform\"\r\nimport DatePickerForm from \"../forms/datepickerForm\"\r\nimport DescriptionBoxTextArea from \"../forms/descriptionProjectForm\"\r\nimport ClockIcon from \"../../static/svgicon/clock.svg\"\r\nimport threeDotImage from \"../../static/svgicon/threedot.svg\"\r\nimport BıgProgressIcon from \"../../static/svgicon/bigprogressicon.svg\"\r\n\r\nimport {\r\n  ControlPanel,\r\n  ControlPanelItemsContainer,\r\n  DetailContent,\r\n  DetailContentContainer,\r\n  LeaftAsideContent2Image,\r\n  LeftAside,\r\n  LeftAsideContent2,\r\n  LeftAsideContent2TextBox,\r\n  LeftAsideContentBox,\r\n  LeftAsideUserContent,\r\n  MilestoneTabIcon,\r\n  ProjectDetailsContainer,\r\n  ProjectNameInputContainer,\r\n  TopHeader,\r\n  TopHeaderLeft,\r\n  TopHeaderLeftBıgProgressIcon,\r\n  TopHeaderRight,\r\n  TopHeaderStatusBar,\r\n  TopHeaderStatusBarContainer,\r\n  TopHeaderTitleBox,\r\n  UserLogoImage,\r\n  UserNameContainer,\r\n  DetailMilestonesContainer,\r\n  MilestonesHeader,\r\n  MilestoneHeaderText,\r\n  MilestoneHeaderHintText,\r\n  MilestoneAddButtonIcon,\r\n  MilestoneAddButtonContainer,\r\n  MilestonesWrapper,\r\n  MilestonesBodyRoot,\r\n  MilestonesDateContentRoot,\r\n  MilestoneDateContentContanier,\r\n  MilestoneDateContentLabel,\r\n  MilestoneLeftSide,\r\n  MilestoneGoalStatic,\r\n  MilestoneGoalContent,\r\n  MilestoneDateDataContent,\r\n  MilestoneStatusBarsContentContainer,\r\n  MilestoneEndThreeDotContainer,\r\n  ClockIconContainer,\r\n  MilestoneEndThreeDotImage,\r\n  MilestoneGoalStaticsContainer,\r\n  ClockIconImage,\r\n  MilestoneStatusBarContentItems,\r\n  MilestoneSearchTabIcon\r\n} from \"../ui/ConstantUi\"\r\nimport CircleProgressContent from \"../ui/CircleProgressContent\"\r\nimport { ConvertDateFormat } from \"../../functions/cleaningData\"\r\nimport LinearProgressBar from \"../ui/LinearProgressBar\"\r\nimport DragComponent from \"../ui/Draggable\"\r\n\r\nexport interface ProjectDetailPageProps {\r\n  id: any\r\n}\r\n\r\ntype Props = RouteComponentProps & ProjectDetailPageProps\r\nconst ProjectDetailPage: React.FC<Props> = props => {\r\n  const [data, setData] = React.useState<any[] | null>()\r\n  const [milestonesTab, setMilestonesTab] = React.useState<boolean>(false)\r\n  const getdata = async () => {\r\n    const state = props.match.params\r\n    const id = (state as any)?.id\r\n    await axios\r\n      .get(`project/detail/${id}`)\r\n      .then(res => {\r\n        setData([res.data])\r\n      })\r\n      .catch(err => prompt(err))\r\n  }\r\n  const ProjectDetailContent: any = React.useCallback(() => {\r\n    return data?.map((elm, index) => (\r\n      <ProjectDetailsContainer key={index}>\r\n        <LeftAside>\r\n          <LeftAsideContentBox>\r\n            {\" \"}\r\n            <LeftAsideUserContent>\r\n              {\" \"}\r\n              <UserLogoImage src={UserLogo}></UserLogoImage>\r\n              <UserNameContainer>{elm.user}</UserNameContainer>\r\n            </LeftAsideUserContent>\r\n            <LeftAsideContent2>\r\n              <LeaftAsideContent2Image src={IfLogo}></LeaftAsideContent2Image>\r\n              <LeftAsideContent2TextBox>Project</LeftAsideContent2TextBox>\r\n            </LeftAsideContent2>\r\n          </LeftAsideContentBox>\r\n        </LeftAside>\r\n        <TopHeader>\r\n          <TopHeaderLeft>\r\n            <CircleProgressContent\r\n              progressvalue={\r\n                elm.milestones.length > 1 ? elm.goalAchievingProbability : 0\r\n              }\r\n            ></CircleProgressContent>\r\n          </TopHeaderLeft>\r\n          <TopHeaderRight>\r\n            <TopHeaderTitleBox>\r\n              <ProjectNameInputContainer style={{ marginTop: \"5px\" }}>\r\n                <EditForm\r\n                  callbackFunction={getdata}\r\n                  isnamechanged={elm.isnamechanged}\r\n                  user={elm.user}\r\n                  defaultValue={elm.isnamechanged === true ? elm.goal : \"\"}\r\n                  typeofproject={elm.typeofproject}\r\n                  id={elm.id}\r\n                ></EditForm>\r\n              </ProjectNameInputContainer>\r\n            </TopHeaderTitleBox>\r\n\r\n            <LinearProgressBar\r\n              // timeDifference={elm.timeDifference}\r\n              // plannedEndDate={elm.plannedEndDate}\r\n              // endDate={elm.endDate}\r\n              // progressOfTime={elm.progressOfTime}\r\n              // progressOfProject={elm.progressOfProject}\r\n              // startDate={elm.startDate}\r\n              // milestones={elm.milestones}\r\n              value={[\r\n                elm.timeDifference,\r\n                elm.plannedEndDate,\r\n                elm.endDate,\r\n                elm.progressOfTime,\r\n                elm.progressOfProject,\r\n                elm.startDate\r\n              ]}\r\n              milestones={elm.milestones}\r\n            ></LinearProgressBar>\r\n          </TopHeaderRight>\r\n        </TopHeader>\r\n        <ControlPanel>\r\n          <ControlPanelItemsContainer>\r\n            <MilestoneSearchTabIcon\r\n              color={!milestonesTab ? \"rgb(228, 220, 0)\" : \"rgb(240, 240, 255)\"}\r\n              onClick={() => {\r\n                setMilestonesTab(false)\r\n              }}\r\n              src={SearchButtonSvg}\r\n            ></MilestoneSearchTabIcon>\r\n            <MilestoneTabIcon\r\n              color={milestonesTab ? \"rgb(228, 220, 0)\" : \"rgb(240, 240, 255)\"}\r\n              onClick={() => {\r\n                setMilestonesTab(true)\r\n              }}\r\n              src={MilestoneTabSvg}\r\n            ></MilestoneTabIcon>\r\n          </ControlPanelItemsContainer>\r\n        </ControlPanel>\r\n        <DetailContent>\r\n          {milestonesTab ? (\r\n            <DetailMilestonesContainer>\r\n              <MilestonesHeader>\r\n                <MilestoneHeaderText>Milestones</MilestoneHeaderText>\r\n                <MilestoneHeaderHintText>\r\n                  In this section you can manage the milestones of your project\r\n                </MilestoneHeaderHintText>\r\n              </MilestonesHeader>\r\n              <MilestoneAddButtonContainer>\r\n                <MilestoneAddButtonIcon\r\n                  onClick={() => addMilestoneFunction(elm.id)}\r\n                  src={AddIcon}\r\n                ></MilestoneAddButtonIcon>\r\n              </MilestoneAddButtonContainer>\r\n\r\n              <DragComponent\r\n                value={[\r\n                  elm.timeDifference,\r\n                  elm.plannedEndDate,\r\n                  elm.endDate,\r\n                  elm.progressOfTime,\r\n                  elm.progressOfProject,\r\n                  elm.startDate\r\n                ]}\r\n                milestones={elm.milestones}\r\n                goalachiveng={\r\n                  elm.milestones.length > 1 ? elm.goalAchievingProbability : 0\r\n                }\r\n              ></DragComponent>\r\n            </DetailMilestonesContainer>\r\n          ) : (\r\n            <DetailContentContainer key={index}>\r\n              {\" \"}\r\n              <DatePickerForm\r\n                callbackFunction={getdata}\r\n                user={elm.user}\r\n                typeofproject={elm.typeofproject}\r\n                defaultStartData={elm.startDate}\r\n                defaultPlannedEndData={elm.plannedEndDate}\r\n                id={elm.id}\r\n              ></DatePickerForm>\r\n              <span\r\n                style={{\r\n                  fontFamily: \"Roboto\",\r\n                  fontSize: \"12px\",\r\n                  fontStyle: \"normal\",\r\n                  letterSpacing: \"0em\",\r\n                  color: \"rgba(228, 220, 0, 1)\",\r\n                  marginBottom: \"2px\"\r\n                }}\r\n              >\r\n                Description{\" \"}\r\n              </span>\r\n              <DescriptionBoxTextArea\r\n                callbackFunction={getdata}\r\n                id={elm.id}\r\n                typeofproject={elm.typeofproject}\r\n                user={elm.user}\r\n                defaultValue={elm.description}\r\n                firstTimeChange={!elm.description ? true : false}\r\n              ></DescriptionBoxTextArea>\r\n            </DetailContentContainer>\r\n          )}\r\n        </DetailContent>\r\n      </ProjectDetailsContainer>\r\n    ))\r\n  }, [data, milestonesTab])\r\n  React.useEffect(() => {\r\n    getdata()\r\n  }, [props.match.params])\r\n\r\n  const addMilestoneFunction = async (main_project_id: any) => {\r\n    return await axios\r\n      .post(\"project/milestones/create\", {\r\n        main_project: main_project_id\r\n      })\r\n      .then(res => getdata())\r\n      .catch(err => console.log(err))\r\n    // axios.post('milestones/create',{\r\n    //   main_project=\r\n\r\n    // })\r\n  }\r\n\r\n  return data ? (\r\n    <ProjectDetailContent></ProjectDetailContent>\r\n  ) : (\r\n    <h2>404 Detailed Not Found</h2>\r\n  )\r\n}\r\n\r\nexport default ProjectDetailPage\r\n","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\ConstantUi.tsx",["152"],"import React, { SVGProps } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport SVG from \"react-inlinesvg\"\r\n\r\nexport const MilestoneTabIcon = styled(SVG)<SVGProps<any>>`\r\n  width: 33px;\r\n  height: 33px;\r\n  cursor: pointer;\r\n  & path {\r\n    fill: ${({ color }) => color};\r\n  }\r\n`\r\nexport const MilestoneSearchTabIcon = styled(SVG)<SVGProps<any>>`\r\n  width: 42px;\r\n  height: 32px;\r\n  cursor: pointer;\r\n  & path {\r\n    fill: ${({ color }) => color};\r\n  }\r\n`\r\n// Body\r\nexport const BodyContainer = styled.div`\r\n  display: flex;\r\n  height: 90vh;\r\n  width: 100%;\r\n  flex: 1;\r\n  flex-wrap: wrap;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px grey;\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(240, 240, 255, 1);\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 7px;\r\n    max-height: 11px;\r\n    border-radius: 5px;\r\n  }\r\n`\r\n//Navbar\r\n\r\nexport const NavbarRoot = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  width: 100%;\r\n  background: rgb(50, 50, 77, 1);\r\n  box-sizing: border-box;\r\n  min-width: 100%;\r\n  min-height: 60px;\r\n  border-bottom: 5px solid #636380;\r\n  padding: 20px 25px 20px 25px;\r\n`\r\n\r\nexport const NavbarContainer = styled.div`\r\n  display: flex;\r\n  flex: 4;\r\n`\r\nexport const NavbarLinksContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n\r\n  flex: 4;\r\n  align-items: center;\r\n  text-align: center;\r\n  flex-direction: row;\r\n`\r\nexport const NavbarLinksContainerItems = styled.div`\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  flex-direction: row;\r\n`\r\nexport const NavbarUserContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  position: relative;\r\n`\r\n\r\nexport const NavbarItem = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n`\r\nexport const FrameIconElement = styled.img`\r\n  width: 45px;\r\n  height: 45px;\r\n`\r\nexport const SettingsIconElement = styled.img`\r\n  width: 45px;\r\n  height: 45px;\r\n`\r\nexport const CreateNewProjectButtonContainer = styled.div`\r\n  display: flex;\r\n  max-width: 163px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  max-height: 43px;\r\n  height: 100%;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  border-radius: 5px;\r\n  border: 3px solid #484862;\r\n  text-align: center;\r\n  justify-content: center;\r\n  color: white;\r\n  padding: 6px 2px 5px 2px;\r\n`\r\nexport const DropDownCreateMenuContainer = styled.div<{ opened: boolean }>`\r\n  min-width: 364px;\r\n  display: flex;\r\n  opacity: ${p => (p.opened ? \"1\" : \"0\")};\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\r\n    z-index 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  position: absolute;\r\n  min-height: 389px;\r\n  top: 47px;\r\n  z-index: ${p => (p.opened ? \"9999\" : \"-5555\")};\r\n  right: 145px;\r\n  background-color: rgba(50, 50, 77, 0.95);\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 3px solid rgba(240, 240, 255, 0.1);\r\n  border-radius: 5px;\r\n  padding-left: 25px;\r\n  padding-top: 34px;\r\n  padding-bottom: 20px;\r\n  padding-right: 21px;\r\n  box-sizing: border-box;\r\n  flex-direction: column;\r\n`\r\nexport const DropDownHeaderContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  height: 20%;\r\n`\r\nexport const DropDownMenuHeaderText = styled.div`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  display: flex;\r\n  line-height: 14.4px;\r\n  color: rgba(228, 220, 0, 1);\r\n  min-width: 99px;\r\n  max-height: 14px;\r\n  min-height: 14px;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\nexport const DropDownHintText = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  height: 100%;\r\n  min-width: 318px;\r\n  font-size: 18px;\r\n  min-height: 22px;\r\n  max-width: 318px;\r\n  max-height: 22px;\r\n  font-weight: 400;\r\n  color: rgba(240, 240, 255, 1);\r\n  line-height: 21.6px;\r\n`\r\nexport const DropDownMenuBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`\r\n// Project Details\r\nexport const ProjectDetailsContainer = styled.div`\r\n  display: inline-grid;\r\n  width: 100%;\r\n  grid-template-columns: 0.3fr 0.2fr 2.5fr 1fr;\r\n  grid-template-rows: 0.8fr 1.2fr 1fr;\r\n  gap: 4px 5px;\r\n  grid-template-areas:\r\n    \"LeftAside TopHeader TopHeader TopHeader\"\r\n    \"LeftAside controlpanel Detail-Content Detail-Content\"\r\n    \"LeftAside controlpanel Detail-Content Detail-Content\";\r\n`\r\nexport const LeftAside = styled.div`\r\n  grid-area: LeftAside;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  object-fit: cover;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const LeftAsideContentBox = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 40%;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`\r\nexport const LeftAsideUserContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 35%;\r\n`\r\nexport const LeftAsideContent2 = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-direction: row;\r\n`\r\nexport const LeaftAsideContent2Image = styled.img``\r\nexport const LeftAsideContent2TextBox = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  color: rgba(228, 220, 0, 1);\r\n  text-align: left;\r\n`\r\n\r\nexport const UserLogoImage = styled.img``\r\nexport const UserNameContainer = styled.div`\r\n  display: flex;\r\n  max-width: 116px;\r\n  align-self: center;\r\n  color: rgba(240, 240, 255, 1);\r\n  width: 100%;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: center;\r\n  justify-content: center;\r\n  margin-top: 12px;\r\n`\r\nexport const TopHeader = styled.div`\r\n  grid-area: TopHeader;\r\n  border-radius: 5px;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 27px 90px 44px 51px;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const TopHeaderLeft = styled.div`\r\n  display: flex;\r\n`\r\nexport const TopHeaderLeftBıgProgressIcon = styled.img<{ small?: boolean }>`\r\n  ${p => (p.small ? \"height:48px;width:48px;\" : \"height:auto;width:auto;\")}\r\n`\r\nexport const TopHeaderRight = styled.div`\r\n  width: 80%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  max-height: 188px;\r\n`\r\nexport const TopHeaderTitleBox = styled.div`\r\n  display: flex;\r\n  height: 20%;\r\n  flex-direction: column;\r\n  max-width: 449px;\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 29px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\nexport const ProjectGoalText = styled.div`\r\n  color: rgba(240, 240, 255, 0.7);\r\n`\r\nexport const ProjectNameInputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: rgba(240, 240, 255, 0.7);\r\n  justify-content: space-between;\r\n`\r\nexport const EditPencilIcon = styled.img`\r\n  height: 50%;\r\n  z-index: 9999;\r\n  cursor: pointer;\r\n`\r\nexport const TopHeaderStatusBarContainer = styled.div<{ small?: boolean }>`\r\n  display: flex;\r\n  height: 35%;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\nexport const TopHeaderStatusBar = styled.img<{ small?: boolean }>`\r\n  ${p =>\r\n    p.small ? \"height:2.76px;width:106.94px;\" : \"height:auto;width:auto;\"}\r\n`\r\nexport const ControlPanel = styled.div`\r\n  grid-area: controlpanel;\r\n  border-radius: 5px;\r\n  padding: 48px 18px;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const ControlPanelItemsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 96px;\r\n  justify-content: space-between;\r\n`\r\nexport const SearchButtonIcon = styled.img`\r\n  width: 42px;\r\n  cursor: pointer;\r\n  height: 32px;\r\n`\r\nexport const MilestonesTabIcon = styled.img`\r\n  width: 33px;\r\n  height: 33px;\r\n  cursor: pointer;\r\n  color: green;\r\n  ::&svg {\r\n    fill: green;\r\n  }\r\n`\r\n\r\nexport const DetailContent = styled.div`\r\n  grid-area: Detail-Content;\r\n  border-radius: 5px;\r\n  padding: 45px 95px 55px 35px;\r\n  background: rgba(50, 50, 77, 1);\r\n`\r\nexport const DetailContentContainer = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n\r\n  width: 100%;\r\n  flex-direction: column;\r\n`\r\nexport const DescriptionBoxContainer = styled.div`\r\n  display: flex;\r\n  height: 65% !important;\r\n  border: 3px solid rgba(240, 240, 255, 0.1);\r\n  height: auto;\r\n  border-radius: 5px;\r\n`\r\nexport const SaveDiscardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n`\r\nexport const SaveIcon = styled.img`\r\n  cursor: pointer;\r\n`\r\nexport const DiscardIcon = styled.img`\r\n  cursor: pointer;\r\n`\r\nexport const DetailMilestonesContainer = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-height: 728px;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const MilestonesHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  font-family: Aileron;\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 29px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\nexport const MilestoneHeaderText = styled.div`\r\n  display: flex;\r\n  color: rgba(228, 220, 0, 1);\r\n`\r\nexport const MilestoneHeaderHintText = styled.div`\r\n  display: flex;\r\n  color: rgba(240, 240, 255, 0.7);\r\n`\r\nexport const MilestoneAddButtonContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n`\r\nexport const MilestoneAddButtonIcon = styled.img`\r\n  height: 31px;\r\n  cursor: pointer;\r\n  width: 31px;\r\n`\r\nexport const MilestonesBodyRoot = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 80%;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px grey;\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(240, 240, 255, 1);\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 7px;\r\n    max-height: 11px;\r\n    border-radius: 5px;\r\n  }\r\n`\r\nexport const MilestonesWrapper = styled.div`\r\n  display: flex;\r\n  padding: 12px 0px 12px 0px;\r\n  height: 10%;\r\n  max-height: 10%;\r\n  border-radius: 5px;\r\n  border: 3px solid rgba(240, 240, 255, 0.1);\r\n  max-width: 100%;\r\n  flex-basis: 100%;\r\n  justify-content: space-between;\r\n  background-color: #373752;\r\n  flex-direction: row;\r\n  flex-grow: 0;\r\n  margin-bottom: 11px;\r\n`\r\nexport const MilestoneLeftSide = styled.div`\r\n  display: flex;\r\n  flex-grow: 0;\r\n  min-width: fit-content;\r\n  flex-basis: 30%;\r\n  max-width: 30%;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n`\r\nexport const ClockIconContainer = styled.div`\r\n  display: flex;\r\n`\r\nexport const ClockIconImage = styled.img`\r\n  height: 42px;\r\n  width: 42px;\r\n`\r\n\r\nexport const MilestoneGoalStaticsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nexport const MilestoneGoalStatic = styled.div`\r\n  display: flex;\r\n  font-family: Aileron;\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: rgba(228, 220, 0, 1);\r\n`\r\nexport const MilestoneGoalContent = styled.div`\r\n  display: flex;\r\n  font-family: Aileron;\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 29px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: rgba(240, 240, 255, 0.7);\r\n`\r\nexport const MilestonesDateContentRoot = styled.div`\r\n  display: flex;\r\n  flex-grow: 0;\r\n  flex-basis: 30%;\r\n  max-width: 30%;\r\n  max-height: 50px;\r\n  justify-content: space-evenly;\r\n  flex-direction: row;\r\n  border-right: 4px solid rgba(240, 240, 255, 0.5);\r\n  border-radius: 1px;\r\n`\r\nexport const MilestoneDateContentContanier = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-height: 44px;\r\n  flex-direction: column;\r\n`\r\nexport const MilestoneDateContentLabel = styled.div`\r\n  display: flex;\r\n  font-family: Aileron;\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: rgba(228, 220, 0, 1);\r\n`\r\nexport const MilestoneDateDataContent = styled.div`\r\n  display: flex;\r\n  color: rgba(240, 240, 255, 1);\r\n  font-family: Aileron;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\nexport const MilestoneStatusBarsContentContainer = styled.div`\r\n  display: flex;\r\n\r\n  flex-grow: 0;\r\n  flex-basis: 35%;\r\n  max-width: 35%;\r\n  max-height: 50px;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  flex-direction: row;\r\n`\r\nexport const MilestoneStatusBarContentItems = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-basis: 10%;\r\n  max-width: 10%;\r\n`\r\nexport const MilestoneEndThreeDotContainer = styled.div`\r\n  display: flex;\r\n  flex-grow: 0;\r\n  flex-basis: 3%;\r\n  border-left: 4px solid rgba(240, 240, 255, 0.5);\r\n  border-radius: 1px;\r\n  max-width: 3%;\r\n  justify-content: center;\r\n`\r\nexport const MilestoneEndThreeDotImage = styled.img`\r\n  height:30px\r\n  width:8px;\r\n`\r\n\r\n//\r\n\r\n// Overview\r\nexport const ProjectOverviewWrapper = styled.div<{ mouseOver?: boolean }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex: 1;\r\n  height: 100%;\r\n  max-height: 492px;\r\n  min-width: 947px;\r\n  margin-bottom: 5px;\r\n  cursor: pointer;\r\n  margin-right: 5px;\r\n  overflow-y: hidden;\r\n  max-width: 947px;\r\n  border: ${p => (p.mouseOver ? \"3px solid rgba(228, 220, 0, 1)\" : \"0px\")};\r\n\r\n  border-radius: 5px;\r\n\r\n  background: rgba(50, 50, 77, 1);\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(240, 240, 255, 1);\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 7px;\r\n    max-height: 11px;\r\n    border-radius: 5px;\r\n  }\r\n`\r\nexport const ProjectOverviewContentBox = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 27px 41px 69px 48px;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\nexport const ProjectOverviewHeaderBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  max-width: 440px;\r\n  justify-content: space-between;\r\n  flex: 1;\r\n`\r\nexport const ProjectContentBox = styled.div`\r\n  display: flex;\r\n  flex: 4;\r\n  flex-direction: row;\r\n`\r\nexport const ProgressBarContainer = styled.div`\r\n  display: flex;\r\n`\r\nexport const ProgressBarImage = styled.img`\r\n  width: 70px;\r\n  height: 70px;\r\n`\r\nexport const MainProjectContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: rgba(99, 99, 128, 0.1);\r\n  border: 3px solid rgba(240, 240, 255, 0.1);\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  min-width: 200px;\r\n  max-height: 52px;\r\n  max-width: 858px;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`\r\n\r\nexport const SubSubProjectBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n`\r\nexport const SubProjectGroup = styled.div`\r\n  display: flex;\r\n  width: 60px;\r\n  justify-content: space-between;\r\n  min-width: 30px;\r\n`\r\nexport const SubSubProjectItem = styled.img`\r\n  width: 28px;\r\n  height: 28px;\r\n`\r\nexport const HeaderTextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\nexport const GoalText = styled.div`\r\n  display: flex;\r\n  color: rgba(228, 220, 0, 1);\r\n\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\nexport const ProjectNameContainer = styled.div`\r\n  display: flex;\r\n  color: rgba(240, 240, 255, 1);\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`\r\n","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\CircleProgressContent.tsx",["153"],"import { Box, CircularProgress } from \"@material-ui/core\"\r\nimport React, { Component } from \"react\"\r\nimport { TopHeaderLeftBıgProgressIcon } from \"./ConstantUi\"\r\nimport BıgProgressIcon from \"../../static/svgicon/bigprogressicon.svg\"\r\nimport {\r\n  Convertpercentage,\r\n  PercentageConvertation\r\n} from \"../../functions/cleaningData\"\r\n\r\nexport interface CircleProgressContentProps {\r\n  smallSize?: boolean\r\n  progressvalue?: number | any\r\n}\r\n\r\nconst CircleProgressContent: React.FC<CircleProgressContentProps> = props => {\r\n  return (\r\n    <Box\r\n      position=\"relative\"\r\n      display=\"inline-flex\"\r\n      visibility={\r\n        !props.smallSize && props.progressvalue === 0 ? \"hidden\" : \"visible\"\r\n      }\r\n    >\r\n      <CircularProgress\r\n        style={{\r\n          height: props.smallSize ? \"48px\" : \"188px\",\r\n          width: props.smallSize ? \"48px\" : \"188px\",\r\n          color: \"yellow\",\r\n          zIndex: 999\r\n        }}\r\n        thickness={5}\r\n        variant=\"determinate\"\r\n        value={\r\n          props.progressvalue >= 1\r\n            ? 100\r\n            : Convertpercentage(props.progressvalue).converted\r\n        }\r\n      />\r\n      <Box\r\n        style={{\r\n          height: props.smallSize ? \"48px\" : \"188px\",\r\n          width: props.smallSize ? \"48px\" : \"188px\"\r\n        }}\r\n        top={0}\r\n        left={props.smallSize ? -1.5 : 0}\r\n        bottom={props.smallSize ? -3 : 0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <TopHeaderLeftBıgProgressIcon\r\n          small={props.smallSize}\r\n          src={BıgProgressIcon}\r\n        ></TopHeaderLeftBıgProgressIcon>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            textAlign: \"center\",\r\n            height: \"80%\",\r\n            width: \"80%\",\r\n            minHeight: \"80%\",\r\n            minWidth: \"80%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: props.smallSize ? \"#373752\" : \"#32324D\",\r\n            borderRadius: props.smallSize ? \"80%\" : \"50%\",\r\n            display: \"inline-flex\",\r\n            color: \"rgba(240, 240, 255, 1)\"\r\n          }}\r\n        >\r\n          {!props.smallSize && (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                fontFamily: \"aileron\",\r\n                fontSize: \"72px\",\r\n                fontStyle: \"normal\",\r\n                fontWeight: 400,\r\n                lineHeight: \"86px\",\r\n                letterSpacing: \"0em\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              {props.progressvalue >= 1\r\n                ? 100\r\n                : PercentageConvertation(props.progressvalue)}\r\n              <div\r\n                style={{\r\n                  display: \"inline-flex\",\r\n                  fontFamily: \"aileron\",\r\n                  fontSize: \"36px\",\r\n                  fontStyle: \"normal\",\r\n                  fontWeight: 400,\r\n                  lineHeight: \"43px\",\r\n                  letterSpacing: \"0em\",\r\n                  textAlign: \"left\",\r\n                  alignItems: \"center\"\r\n                }}\r\n              >\r\n                %\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CircleProgressContent\r\n","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\createProjectForm.tsx",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\editprojectnameform.tsx",["154","155","156","157","158"],"import { TextField } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ReactDOM from \"react-dom\"\r\nimport axios from \"../../functions/axios\"\r\n\r\nexport interface EditFormProjectProps {\r\n  id: string\r\n  user: string\r\n  typeofproject: string\r\n  defaultValue: string\r\n  isnamechanged: boolean\r\n  callbackFunction: any\r\n}\r\n\r\nexport const SubmitButton = styled.button`\r\n  display: none;\r\n  width: 0;\r\n  opacity: 0;\r\n  height: 0;\r\n  cursor: none;\r\n  z-index: -9999;\r\n`\r\nconst ProjectGoalLabel = styled.span<{ isFocused: boolean }>`\r\n  color: rgba(228, 220, 0, 1);\r\n  font-size: 18px;\r\n  position: relative;\r\n  top: ${p => (p.isFocused ? \"15px\" : \"20px\")};\r\n  transition: top 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;\r\n`\r\nconst EditForm: React.FC<EditFormProjectProps> = props => {\r\n  const projectnameinputref = React.useRef<any>()\r\n  const editformref = React.useRef<React.MutableRefObject<any> | any>()\r\n  const [activeProjectName, setActiveProjectName] = React.useState(\"\")\r\n  const [editActiveArray, seteditActiveArray] = React.useState<any[]>([])\r\n  const SubmitButtonRef = React.useRef<React.MutableRefObject<any> | any>()\r\n\r\n  const [Label, setLabel] = React.useState<string>(props.defaultValue)\r\n  const [isFocus, setisFocus] = React.useState<boolean>(false)\r\n  const [isnameChanged, setisNameChanged] = React.useState<boolean>(\r\n    props.isnamechanged\r\n  )\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault()\r\n    if (activeProjectName.length < 69 && activeProjectName !== \"\") {\r\n      setisFocus(false)\r\n\r\n      projectnameinputref.current.blur()\r\n      axios\r\n        .put(`project/detail/${props.id}`, {\r\n          user: props.user,\r\n          typeofproject: props.typeofproject,\r\n          goal:\r\n            activeProjectName.charAt(0).toUpperCase() +\r\n            activeProjectName.slice(1),\r\n          isnamechanged: true\r\n        })\r\n        .then(res => {\r\n          props.callbackFunction()\r\n        })\r\n        .catch(err => prompt(err))\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <ProjectGoalLabel isFocused={isFocus}>Project Goal</ProjectGoalLabel>\r\n      <form\r\n        method=\"put\"\r\n        id=\"projectgoalform\"\r\n        onSubmit={handleSubmit}\r\n        ref={editformref}\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"100%\"\r\n        }}\r\n      >\r\n        <TextField\r\n          onChange={e => {\r\n            setActiveProjectName(e.currentTarget.value)\r\n          }}\r\n          error={activeProjectName.length > 69}\r\n          helperText={\r\n            activeProjectName.length > 69 &&\r\n            \"The project name  cannot be more than 70 character\"\r\n          }\r\n          inputRef={projectnameinputref}\r\n          fullWidth\r\n          InputLabelProps={{\r\n            style: {\r\n              color: \"rgba(240, 240, 255, 1)\",\r\n              fontSize: \"24px\",\r\n              fontStyle: \"normal\",\r\n              fontWeight: \"bold\",\r\n              lineHeight: \"25px\",\r\n              letterSpacing: \"0em\",\r\n              textAlign: \"left\",\r\n              visibility: isFocus ? \"hidden\" : \"visible\"\r\n            }\r\n          }}\r\n          onFocus={() => {\r\n            setisFocus(true)\r\n          }}\r\n          onBlur={() => {\r\n            setisFocus(false)\r\n            SubmitButtonRef.current.click()\r\n          }}\r\n          label={isnameChanged ? Label : \"Project Goal Here*\"}\r\n          name=\"Project name here\"\r\n          value={activeProjectName}\r\n          inputProps={{ maxLength: 70 }}\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            style: {\r\n              color: \"rgba(240, 240, 255, 1)\",\r\n              fontSize: \"24px\",\r\n              fontStyle: \"normal\",\r\n              fontWeight: \"bold\",\r\n              lineHeight: \"29px\",\r\n              letterSpacing: \"0em\",\r\n              textAlign: \"left\"\r\n            }\r\n          }}\r\n        />\r\n\r\n        <SubmitButton\r\n          ref={SubmitButtonRef}\r\n          disabled={!activeProjectName}\r\n          type=\"submit\"\r\n        ></SubmitButton>\r\n      </form>\r\n      <span\r\n        style={{\r\n          display: \"flex;\",\r\n          boxSizing: \"border-box\",\r\n          fill: \"rgba(240, 240, 255, 1)\",\r\n          maxHeight: \"1px\",\r\n          minHeight: \"1px\",\r\n          borderRadius: \"5px\",\r\n          backgroundColor: \" rgba(240, 240, 255, 1)\"\r\n        }}\r\n      ></span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditForm\r\n","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\Checkbox.tsx",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\datepickerForm.tsx",["159","160"],{"ruleId":"161","severity":1,"message":"162","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":17},{"ruleId":"161","severity":1,"message":"165","line":7,"column":3,"nodeType":"163","messageId":"164","endLine":7,"endColumn":7},{"ruleId":"161","severity":1,"message":"166","line":8,"column":3,"nodeType":"163","messageId":"164","endLine":8,"endColumn":12},{"ruleId":"161","severity":1,"message":"167","line":15,"column":8,"nodeType":"163","messageId":"164","endLine":15,"endColumn":13},{"ruleId":"161","severity":1,"message":"168","line":16,"column":8,"nodeType":"163","messageId":"164","endLine":16,"endColumn":21},{"ruleId":"169","severity":1,"message":"170","line":36,"column":6,"nodeType":"171","endLine":36,"endColumn":40,"suggestions":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"161","severity":1,"message":"177","line":24,"column":7,"nodeType":"163","messageId":"164","endLine":24,"endColumn":28},{"ruleId":"173","replacedBy":"178"},{"ruleId":"175","replacedBy":"179"},{"ruleId":"161","severity":1,"message":"180","line":13,"column":10,"nodeType":"163","messageId":"164","endLine":13,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":80,"column":31,"nodeType":"183","messageId":"184","endLine":80,"endColumn":33},{"ruleId":"169","severity":1,"message":"185","line":91,"column":6,"nodeType":"171","endLine":91,"endColumn":19,"suggestions":"186"},{"ruleId":"169","severity":1,"message":"187","line":99,"column":6,"nodeType":"171","endLine":99,"endColumn":8,"suggestions":"188"},{"ruleId":"161","severity":1,"message":"189","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"190","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":28},{"ruleId":"161","severity":1,"message":"191","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":21},{"ruleId":"161","severity":1,"message":"192","line":14,"column":3,"nodeType":"163","messageId":"164","endLine":14,"endColumn":20},{"ruleId":"161","severity":1,"message":"193","line":15,"column":3,"nodeType":"163","messageId":"164","endLine":15,"endColumn":32},{"ruleId":"169","severity":1,"message":"194","line":222,"column":6,"nodeType":"171","endLine":222,"endColumn":8,"suggestions":"195"},{"ruleId":"161","severity":1,"message":"196","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":16},{"ruleId":"161","severity":1,"message":"197","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"191","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":21},{"ruleId":"161","severity":1,"message":"198","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":23},{"ruleId":"161","severity":1,"message":"199","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":23},{"ruleId":"161","severity":1,"message":"200","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":15},{"ruleId":"161","severity":1,"message":"201","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"161","severity":1,"message":"202","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":22},{"ruleId":"161","severity":1,"message":"203","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":30},{"ruleId":"161","severity":1,"message":"204","line":12,"column":8,"nodeType":"163","messageId":"164","endLine":12,"endColumn":23},{"ruleId":"161","severity":1,"message":"205","line":29,"column":3,"nodeType":"163","messageId":"164","endLine":29,"endColumn":33},{"ruleId":"161","severity":1,"message":"206","line":73,"column":9,"nodeType":"163","messageId":"164","endLine":73,"endColumn":30},{"ruleId":"161","severity":1,"message":"207","line":1,"column":10,"nodeType":"163","messageId":"164","endLine":1,"endColumn":34},{"ruleId":"161","severity":1,"message":"191","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":21},{"ruleId":"161","severity":1,"message":"208","line":13,"column":8,"nodeType":"163","messageId":"164","endLine":13,"endColumn":17},{"ruleId":"161","severity":1,"message":"209","line":14,"column":8,"nodeType":"163","messageId":"164","endLine":14,"endColumn":21},{"ruleId":"161","severity":1,"message":"204","line":15,"column":8,"nodeType":"163","messageId":"164","endLine":15,"endColumn":23},{"ruleId":"161","severity":1,"message":"210","line":33,"column":3,"nodeType":"163","messageId":"164","endLine":33,"endColumn":31},{"ruleId":"161","severity":1,"message":"190","line":35,"column":3,"nodeType":"163","messageId":"164","endLine":35,"endColumn":21},{"ruleId":"161","severity":1,"message":"211","line":36,"column":3,"nodeType":"163","messageId":"164","endLine":36,"endColumn":30},{"ruleId":"161","severity":1,"message":"212","line":46,"column":3,"nodeType":"163","messageId":"164","endLine":46,"endColumn":20},{"ruleId":"161","severity":1,"message":"213","line":47,"column":3,"nodeType":"163","messageId":"164","endLine":47,"endColumn":21},{"ruleId":"161","severity":1,"message":"214","line":48,"column":3,"nodeType":"163","messageId":"164","endLine":48,"endColumn":28},{"ruleId":"161","severity":1,"message":"215","line":49,"column":3,"nodeType":"163","messageId":"164","endLine":49,"endColumn":32},{"ruleId":"161","severity":1,"message":"216","line":50,"column":3,"nodeType":"163","messageId":"164","endLine":50,"endColumn":28},{"ruleId":"161","severity":1,"message":"217","line":51,"column":3,"nodeType":"163","messageId":"164","endLine":51,"endColumn":20},{"ruleId":"161","severity":1,"message":"218","line":52,"column":3,"nodeType":"163","messageId":"164","endLine":52,"endColumn":22},{"ruleId":"161","severity":1,"message":"219","line":53,"column":3,"nodeType":"163","messageId":"164","endLine":53,"endColumn":23},{"ruleId":"161","severity":1,"message":"220","line":54,"column":3,"nodeType":"163","messageId":"164","endLine":54,"endColumn":27},{"ruleId":"161","severity":1,"message":"221","line":55,"column":3,"nodeType":"163","messageId":"164","endLine":55,"endColumn":38},{"ruleId":"161","severity":1,"message":"222","line":56,"column":3,"nodeType":"163","messageId":"164","endLine":56,"endColumn":32},{"ruleId":"161","severity":1,"message":"223","line":57,"column":3,"nodeType":"163","messageId":"164","endLine":57,"endColumn":21},{"ruleId":"161","severity":1,"message":"224","line":58,"column":3,"nodeType":"163","messageId":"164","endLine":58,"endColumn":28},{"ruleId":"161","severity":1,"message":"225","line":59,"column":3,"nodeType":"163","messageId":"164","endLine":59,"endColumn":32},{"ruleId":"161","severity":1,"message":"226","line":60,"column":3,"nodeType":"163","messageId":"164","endLine":60,"endColumn":17},{"ruleId":"161","severity":1,"message":"205","line":61,"column":3,"nodeType":"163","messageId":"164","endLine":61,"endColumn":33},{"ruleId":"161","severity":1,"message":"227","line":65,"column":10,"nodeType":"163","messageId":"164","endLine":65,"endColumn":27},{"ruleId":"169","severity":1,"message":"228","line":231,"column":6,"nodeType":"171","endLine":231,"endColumn":27,"suggestions":"229"},{"ruleId":"169","severity":1,"message":"230","line":234,"column":6,"nodeType":"171","endLine":234,"endColumn":26,"suggestions":"231"},{"ruleId":"161","severity":1,"message":"232","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":13},{"ruleId":"161","severity":1,"message":"189","line":2,"column":17,"nodeType":"163","messageId":"164","endLine":2,"endColumn":26},{"ruleId":"161","severity":1,"message":"233","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":16},{"ruleId":"161","severity":1,"message":"234","line":35,"column":10,"nodeType":"163","messageId":"164","endLine":35,"endColumn":25},{"ruleId":"161","severity":1,"message":"235","line":35,"column":27,"nodeType":"163","messageId":"164","endLine":35,"endColumn":45},{"ruleId":"161","severity":1,"message":"236","line":38,"column":17,"nodeType":"163","messageId":"164","endLine":38,"endColumn":25},{"ruleId":"161","severity":1,"message":"237","line":40,"column":25,"nodeType":"163","messageId":"164","endLine":40,"endColumn":41},{"ruleId":"161","severity":1,"message":"238","line":10,"column":7,"nodeType":"163","messageId":"164","endLine":10,"endColumn":19},{"ruleId":"169","severity":1,"message":"239","line":49,"column":6,"nodeType":"171","endLine":49,"endColumn":8,"suggestions":"240"},"@typescript-eslint/no-unused-vars","'getdata' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useParams' is defined but never used.","'axios' is defined but never used.","'DragComponent' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has an unnecessary dependency: 'window.location.href'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["241"],"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"'SubSubProjectGroupBox' is assigned a value but never used.",["242"],["243"],"'stringify' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook React.useEffect has missing dependencies: 'defaultValue', 'props.defaultValue', 'props.firstTimeChange', and 'withoutSave'. Either include them or remove the dependency array. If 'setActiveDescriptionText' needs the current value of 'props.defaultValue', you can also switch to useReducer instead of useState and read 'props.defaultValue' in the reducer.",["244"],"React Hook React.useEffect has missing dependencies: 'defaultValue', 'props.defaultValue', and 'props.firstTimeChange'. Either include them or remove the dependency array.",["245"],"'Component' is defined but never used.","'TopHeaderStatusBar' is defined but never used.","'StatusBarIcon' is defined but never used.","'Convertpercentage' is defined but never used.","'LinearProgressBarCleaningData' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getLocationOnProgressBar'. Either include it or remove the dependency array.",["246"],"'UserLogo' is defined but never used.","'IfLogo' is defined but never used.","'SearchButtonSvg' is defined but never used.","'MilestoneTabSvg' is defined but never used.","'AddIcon' is defined but never used.","'EditForm' is defined but never used.","'DatePickerForm' is defined but never used.","'DescriptionBoxTextArea' is defined but never used.","'BıgProgressIcon' is defined but never used.","'MilestoneStatusBarContentItems' is defined but never used.","'handleStartDateChange' is assigned a value but never used.","'differenceInBusinessDays' is defined but never used.","'ClockIcon' is defined but never used.","'threeDotImage' is defined but never used.","'TopHeaderLeftBıgProgressIcon' is defined but never used.","'TopHeaderStatusBarContainer' is defined but never used.","'MilestonesWrapper' is defined but never used.","'MilestonesBodyRoot' is defined but never used.","'MilestonesDateContentRoot' is defined but never used.","'MilestoneDateContentContanier' is defined but never used.","'MilestoneDateContentLabel' is defined but never used.","'MilestoneLeftSide' is defined but never used.","'MilestoneGoalStatic' is defined but never used.","'MilestoneGoalContent' is defined but never used.","'MilestoneDateDataContent' is defined but never used.","'MilestoneStatusBarsContentContainer' is defined but never used.","'MilestoneEndThreeDotContainer' is defined but never used.","'ClockIconContainer' is defined but never used.","'MilestoneEndThreeDotImage' is defined but never used.","'MilestoneGoalStaticsContainer' is defined but never used.","'ClockIconImage' is defined but never used.","'ConvertDateFormat' is defined but never used.","React Hook React.useCallback has missing dependencies: 'addMilestoneFunction' and 'getdata'. Either include them or remove the dependency array.",["247"],"React Hook React.useEffect has a missing dependency: 'getdata'. Either include it or remove the dependency array.",["248"],"'React' is defined but never used.","'ReactDOM' is defined but never used.","'editActiveArray' is assigned a value but never used.","'seteditActiveArray' is assigned a value but never used.","'setLabel' is assigned a value but never used.","'setisNameChanged' is assigned a value but never used.","'SubmitButton' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.defaultPlannedEndData' and 'props.defaultStartData'. Either include them or remove the dependency array.",["249"],{"desc":"250","fix":"251"},"no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [detailPage]",{"range":"264","text":"265"},"Update the dependencies array to be: [defaultValue, processName, props.defaultValue, props.firstTimeChange, withoutSave]",{"range":"266","text":"267"},"Update the dependencies array to be: [defaultValue, props.defaultValue, props.firstTimeChange]",{"range":"268","text":"269"},"Update the dependencies array to be: [getLocationOnProgressBar]",{"range":"270","text":"271"},"Update the dependencies array to be: [addMilestoneFunction, data, getdata, milestonesTab]",{"range":"272","text":"273"},"Update the dependencies array to be: [getdata, props.match.params]",{"range":"274","text":"275"},"Update the dependencies array to be: [props.defaultPlannedEndData, props.defaultStartData]",{"range":"276","text":"277"},[1018,1052],"[detailPage]",[2778,2791],"[defaultValue, processName, props.defaultValue, props.firstTimeChange, withoutSave]",[3000,3002],"[defaultValue, props.defaultValue, props.firstTimeChange]",[6533,6535],"[getLocationOnProgressBar]",[8398,8419],"[addMilestoneFunction, data, getdata, milestonesTab]",[8469,8489],"[getdata, props.match.params]",[1511,1513],"[props.defaultPlannedEndData, props.defaultStartData]"]