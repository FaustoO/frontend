[{"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\base.tsx":"1","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\screens\\Overview.tsx":"3","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\Body.tsx":"4","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\descriptionProjectForm.tsx":"5","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\functions\\axios.tsx":"6","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\LinearProgressBar.tsx":"7","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\RadioButtons.tsx":"8","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\Draggable.tsx":"9","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\DatePicker.tsx":"10","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\functions\\cleaningData.tsx":"11","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\index.tsx":"12","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\Navbar.tsx":"13","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\screens\\ProjectDetails.tsx":"14","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\ConstantUi.tsx":"15","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\CircleProgressContent.tsx":"16","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\createProjectForm.tsx":"17","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\editprojectnameform.tsx":"18","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\Checkbox.tsx":"19"},{"size":1626,"mtime":1612250380312,"results":"20","hashOfConfig":"21"},{"size":440,"mtime":1612217930800,"results":"22","hashOfConfig":"21"},{"size":3485,"mtime":1612249634229,"results":"23","hashOfConfig":"21"},{"size":275,"mtime":1612217930777,"results":"24","hashOfConfig":"21"},{"size":5003,"mtime":1612217930780,"results":"25","hashOfConfig":"21"},{"size":178,"mtime":1612219709455,"results":"26","hashOfConfig":"21"},{"size":9985,"mtime":1612216860734,"results":"27","hashOfConfig":"21"},{"size":1154,"mtime":1612217930794,"results":"28","hashOfConfig":"21"},{"size":6735,"mtime":1612217930793,"results":"29","hashOfConfig":"21"},{"size":6116,"mtime":1612217930793,"results":"30","hashOfConfig":"21"},{"size":5966,"mtime":1612217551378,"results":"31","hashOfConfig":"21"},{"size":530,"mtime":1612217930799,"results":"32","hashOfConfig":"21"},{"size":3479,"mtime":1612250987994,"results":"33","hashOfConfig":"21"},{"size":8994,"mtime":1612217930790,"results":"34","hashOfConfig":"21"},{"size":16094,"mtime":1612217930792,"results":"35","hashOfConfig":"21"},{"size":3352,"mtime":1612217930792,"results":"36","hashOfConfig":"21"},{"size":2378,"mtime":1612249644988,"results":"37","hashOfConfig":"21"},{"size":4381,"mtime":1612217930780,"results":"38","hashOfConfig":"21"},{"size":1878,"mtime":1612217930791,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1b1uq56",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\base.tsx",["84","85","86","87","88","89"],"import Navbar from \"./Navbar\"\r\nimport { getdata } from \"../functions/api\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useLocation\r\n} from \"react-router-dom\"\r\nimport BodyComponent from \"./Body\"\r\nimport React from \"react\"\r\nimport OverviewProject from \"./screens/Overview\"\r\nimport ProjectDetailPageProps from \"./screens/ProjectDetails\"\r\nimport axios from \"../functions/axios\"\r\nimport DragComponent from \"./ui/Draggable\"\r\nexport interface BaseProps {}\r\n\r\nfunction NavbarComponent() {\r\n  let location = useLocation()\r\n  if (location.pathname.includes(\"project/detail\")) {\r\n    return <Navbar context={\"Projects\"}></Navbar>\r\n  }\r\n\r\n  return <Navbar></Navbar>\r\n}\r\n\r\nconst BaseApp: React.FC<BaseProps> = () => {\r\n  const [detailPage, setDetailPage] = React.useState<boolean>(false)\r\n  React.useEffect(() => {\r\n    if (window.location.href.includes(\"detail\")) {\r\n      setDetailPage(true)\r\n    } else if (window.location.href.includes(\"all\")) {\r\n      setDetailPage(false)\r\n    }\r\n  }, [window.location.href, detailPage])\r\n  return (\r\n    <Router>\r\n      <Route>\r\n        <NavbarComponent></NavbarComponent>\r\n        <BodyComponent>\r\n          <Switch>\r\n            <Route exact path=\"/frontend\" component={OverviewProject} />\r\n            <Route path=\"/frontend/project/all\" component={OverviewProject} />\r\n            <Route\r\n              path=\"/frontend/project/detail/:id\"\r\n              component={ProjectDetailPageProps}\r\n            />\r\n            <Route path=\"/users\" />\r\n          </Switch>\r\n        </BodyComponent>\r\n      </Route>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default BaseApp\r\n",["90","91"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\screens\\Overview.tsx",["92"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\Body.tsx",[],["93","94"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\descriptionProjectForm.tsx",["95","96","97","98"],"import styled from \"styled-components\"\r\nimport React from \"react\"\r\nimport axios from \"../../functions/axios\"\r\nimport { IconButton } from \"@material-ui/core\"\r\nimport {\r\n  DescriptionBoxContainer,\r\n  SaveIcon,\r\n  SaveDiscardContainer,\r\n  DiscardIcon\r\n} from \"../ui/ConstantUi\"\r\nimport DiscardSvgIcon from \"../../static/svgicon/discard.svg\"\r\nimport AcceptIcon from \"../../static/svgicon/accept.svg\"\r\nimport { stringify } from \"querystring\"\r\n\r\nexport interface DescriptionBoxTextAreaProps {\r\n  id: string\r\n  user: string\r\n  typeofproject: string\r\n  defaultValue: null | string\r\n  firstTimeChange: boolean\r\n  callbackFunction: any\r\n}\r\n\r\nconst DescriptionInput = styled.textarea`\r\n  flex: 1;\r\n  display: block;\r\n  border: none;\r\n  min-width: 0;\r\n  border: none;\r\n  overflow: auto;\r\n  outline: none;\r\n  color: rgba(240, 240, 255, 0.7);\r\n  font-size: 15px;\r\n  padding: 5px;\r\n  font-weight: 400;\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n  overflow-y: auto;\r\n  font-family: aileron;\r\n\r\n  background-color: transparent;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    margin-right: 8px;\r\n    border-radius: 10px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background: rgba(240, 240, 255, 1);\r\n  }\r\n`\r\n\r\nconst DescriptionBoxTextArea: React.FC<DescriptionBoxTextAreaProps> = props => {\r\n  const [activeDescriptionText, setActiveDescriptionText] = React.useState<\r\n    string | any\r\n  >(\"\")\r\n  const [withoutSave, setWithoutSave] = React.useState<boolean>(true)\r\n  const [processName, setProcessName] = React.useState<string>(\"\")\r\n  const [defaultValue, setDefaultValue] = React.useState<any>([\"\"])\r\n  const InputBoxRef = React.useRef<React.MutableRefObject<any> | any>()\r\n  React.useEffect(() => {\r\n    if (processName === \"Discard\" && withoutSave && props.firstTimeChange) {\r\n      setActiveDescriptionText(defaultValue[0])\r\n      InputBoxRef.current.value = defaultValue[0]\r\n    } else if (processName === \"Discard\" && withoutSave) {\r\n      InputBoxRef.current.value = props.defaultValue\r\n      setActiveDescriptionText(props.defaultValue)\r\n    } else if (processName === \"Discard\") {\r\n      if (defaultValue.length == 2) {\r\n        setActiveDescriptionText(props.defaultValue)\r\n        InputBoxRef.current.value = props.defaultValue\r\n      } else if (defaultValue.length > 2) {\r\n        setActiveDescriptionText(defaultValue[defaultValue.length - 2])\r\n        InputBoxRef.current.value = defaultValue[defaultValue.length - 2]\r\n      } else {\r\n        setActiveDescriptionText(defaultValue[0])\r\n        InputBoxRef.current.value = defaultValue[0]\r\n      }\r\n    }\r\n  }, [processName])\r\n  React.useEffect(() => {\r\n    if (props.firstTimeChange) {\r\n      //pass\r\n      InputBoxRef.current.value = defaultValue[0]\r\n    } else {\r\n      InputBoxRef.current.value = props.defaultValue\r\n    }\r\n  }, [])\r\n  const handleDescriptionBoxSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n\r\n    if (activeDescriptionText === \"\") {\r\n    } else {\r\n      if (processName === \"Save\") {\r\n        await axios\r\n          .put(`project/detail/${props.id}`, {\r\n            user: props.user,\r\n            typeofproject: props.typeofproject,\r\n            description: activeDescriptionText\r\n          })\r\n          .then(res => {\r\n            setWithoutSave(false)\r\n            setDefaultValue([...defaultValue, res.data.description])\r\n            props.callbackFunction()\r\n            InputBoxRef.current.value = res.data.description\r\n          })\r\n          .catch(err => prompt(err.response))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DescriptionBoxContainer>\r\n        <form\r\n          onSubmit={handleDescriptionBoxSubmit}\r\n          id=\"descriptionboxform\"\r\n          style={{ display: \"flex\", width: \"100%\" }}\r\n        >\r\n          <DescriptionInput\r\n            style={{ fontFamily: \"aileron\" }}\r\n            ref={InputBoxRef}\r\n            onChange={(e: any) => {\r\n              setActiveDescriptionText(e.target.value)\r\n            }}\r\n          ></DescriptionInput>\r\n        </form>\r\n      </DescriptionBoxContainer>\r\n      <SaveDiscardContainer>\r\n        <IconButton\r\n          disabled={!activeDescriptionText}\r\n          onClick={() => {\r\n            setProcessName(\"Save\")\r\n          }}\r\n          id=\"savebutton\"\r\n          type=\"submit\"\r\n          form=\"descriptionboxform\"\r\n        >\r\n          <SaveIcon src={AcceptIcon}></SaveIcon>\r\n        </IconButton>\r\n        <IconButton\r\n          disabled={!activeDescriptionText}\r\n          onBlur={() => {\r\n            setProcessName(\"\")\r\n          }}\r\n          onClick={() => {\r\n            setProcessName(\"Discard\")\r\n          }}\r\n          id=\"discardbutton\"\r\n        >\r\n          <DiscardIcon src={DiscardSvgIcon}></DiscardIcon>\r\n        </IconButton>\r\n      </SaveDiscardContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DescriptionBoxTextArea\r\n","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\functions\\axios.tsx",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\LinearProgressBar.tsx",["99","100","101","102","103"],"import React, { Component } from \"react\"\r\nimport { TopHeaderStatusBar, TopHeaderStatusBarContainer } from \"./ConstantUi\"\r\nimport StatusBarIcon from \"../../static/svgicon/statusbar.svg\"\r\nimport styled from \"styled-components\"\r\nimport SmallPointer from \"../../static/svgicon/smallpointer.svg\"\r\nimport BigPointer from \"../../static/svgicon/bigpointer.svg\"\r\nimport MilestonePointer from \"../../static/svgicon/milestonepointer.svg\"\r\nimport {\r\n  calculateMilestonesPositioning,\r\n  ConvertDateFormat,\r\n  calculateDatesPositioning\r\n} from \"../../functions/cleaningData\"\r\nimport {\r\n  Convertpercentage,\r\n  LinearProgressBarCleaningData\r\n} from \"../../functions/cleaningData\"\r\nimport { Tooltip } from \"@material-ui/core\"\r\n\r\nexport interface LinearProgressBarProps {\r\n  smallSize?: boolean\r\n  value?: any[] | any\r\n  milestones: []\r\n}\r\nconst MainContainerBody = styled.div<{ small?: boolean }>`\r\n  display: flex;\r\n\r\n  flex-direction: row;\r\n  ${p =>\r\n    p.small\r\n      ? \"flex-basis: 20%; min-width: 20%;max-height: 12px;min-height: 12px;\"\r\n      : \"flex-basis: 100%; min-width: 100%;max-height: 23px;min-height: 23px;\"}\r\n\r\n  flex-grow: 0;\r\n  border-radius: 5px;\r\n`\r\nconst MainContainerGrayArea = styled.div<{ width: number }>`\r\n  background: ${p =>\r\n    `linear-gradient(to right, #636380 0%, #636380 ${p.width}%, transparent ${p.width}%, transparent 100%)`};\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 4.19px 7px 4.27px 7px;\r\n`\r\nconst MainContainerTop = styled.div<{ small?: boolean }>`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  position: relative;\r\n  flex-basis: 100%;\r\n  min-width: 100%;\r\n  flex-grow: 0;\r\n  ${p => !p.small && \"max-height: 23px;min-height: 23px;\"}\r\n  border-radius: 5px;\r\n  padding: 4.19px 0 4.27px 0;\r\n`\r\nconst MainContainerBottom = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: row;\r\n  position: relative;\r\n  flex-basis: 100%;\r\n  min-width: 100%;\r\n  flex-grow: 0;\r\n  max-height: 23px;\r\n  min-height: 23px;\r\n  border-radius: 5px;\r\n  padding: 4.19px 7px 4.27px 7px;\r\n`\r\nconst MilestonesIcon = styled.img<{ position: number }>`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  left: ${p => p.position + \"%\"};\r\n`\r\nconst FirstLine = styled.div<{ width: any }>`\r\n  display: flex;\r\n  flex-grow: 0;\r\n  cursor: pointer;\r\n\r\n  background: rgba(240, 240, 255, 0.7);\r\n  border-radius: 5px;\r\n  flex-basis: ${p => p.width + \"%\"};\r\n  min-width: ${p => p.width + \"%\"};\r\n`\r\nconst SecondLine = styled.div<{ width: any }>`\r\n  display: flex;\r\n  cursor: pointer;\r\n  flex-grow: 0;\r\n  background: rgba(228, 220, 0, 1);\r\n  border-radius: 5px;\r\n  flex-basis: ${p => p.width + \"%\"};\r\n  min-width: ${p => p.width + \"%\"};\r\n`\r\nconst SmallPointerIcon = styled.img<{ position?: number }>`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  z-index: 999;\r\n  left: ${p => p.position + \"%\"};\r\n`\r\nconst BigPointerIcon = styled.img<{ position?: number; small?: boolean }>`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  z-index: 0px;\r\n  left: ${p => p.position + \"%\"};\r\n  ${p => p.small && \"width:11px;height:11px;\"}\r\n`\r\nconst PlannedAndDatePointer = styled.img<{ position?: number }>`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  left: ${p => p.position + \"%\"};\r\n`\r\nconst LinearProgressBar: React.FC<LinearProgressBarProps> = props => {\r\n  // React.useEffect(() => {\r\n  //   // console.log(\r\n  //   //   calculateMilestonesPositioning(props.value[6]),\r\n  //   //   \"progress of project\",\r\n  //   //   props.value[4],\r\n  //   //   \"progress time of project\",\r\n  //   //   props.value[3],\r\n  //   //   props.value[6],\r\n  //   //   Convertpercentage(props.value[3]).converted,\r\n  //   //   LinearProgressBarCleaningData(props.value[0]).fullwithEndDate,\r\n  //   //   LinearProgressBarCleaningData(props.value[0]).percentageTimeDifference\r\n  //   // )\r\n  // })\r\n  const getLocationOnProgressBar = (expression: string) => {\r\n    switch (expression) {\r\n      case \"progressofproject\":\r\n        // code block\r\n        return calculateDatesPositioning(\r\n          props.value[5],\r\n          props.value[2],\r\n          props.value[1],\r\n          props.value[0],\r\n          props.value[4],\r\n          props.value[3]\r\n        ).progressofproject\r\n\r\n      case \"enddate\":\r\n        // code block\r\n        return (\r\n          calculateDatesPositioning(\r\n            props.value[5],\r\n            props.value[2],\r\n            props.value[1],\r\n            props.value[0],\r\n            props.value[4],\r\n            props.value[3]\r\n          ).fullWidth - 1\r\n        )\r\n      case \"GrayLine\":\r\n        return Math.round(\r\n          calculateDatesPositioning(\r\n            props.value[5],\r\n            props.value[2],\r\n            props.value[1],\r\n            props.value[0],\r\n            props.value[4],\r\n            props.value[3]\r\n          ).firstline\r\n        )\r\n      case \"YellowLine\":\r\n        return Math.round(\r\n          calculateDatesPositioning(\r\n            props.value[5],\r\n            props.value[2],\r\n            props.value[1],\r\n            props.value[0],\r\n            props.value[4],\r\n            props.value[3]\r\n          ).secondlineWidth\r\n        )\r\n      case \"FullWidth\":\r\n        return calculateDatesPositioning(\r\n          props.value[5],\r\n          props.value[2],\r\n          props.value[1],\r\n          props.value[0],\r\n          props.value[4],\r\n          props.value[3]\r\n        ).fullWidth\r\n      case \"Isexpired\":\r\n        return calculateDatesPositioning(\r\n          props.value[5],\r\n          props.value[2],\r\n          props.value[1],\r\n          props.value[0],\r\n          props.value[4],\r\n          props.value[3]\r\n        ).isexpired\r\n      case \"widthofGray\":\r\n        return calculateDatesPositioning(\r\n          props.value[5],\r\n          props.value[2],\r\n          props.value[1],\r\n          props.value[0],\r\n          props.value[4],\r\n          props.value[3]\r\n        ).fullWidthGray\r\n      case \"enddate-startdate\":\r\n        return calculateDatesPositioning(\r\n          props.value[5],\r\n          props.value[2],\r\n          props.value[1],\r\n          props.value[0],\r\n          props.value[4],\r\n          props.value[3]\r\n        ).diffstartdateenddate\r\n      case \"plannedenddate-startdate\":\r\n        return calculateDatesPositioning(\r\n          props.value[5],\r\n          props.value[2],\r\n          props.value[1],\r\n          props.value[0],\r\n          props.value[4],\r\n          props.value[3]\r\n        ).diffstartdateplannedenddate\r\n      default:\r\n        return 0\r\n      // code block\r\n    }\r\n  }\r\n  return (\r\n    <TopHeaderStatusBarContainer>\r\n      <MainContainerTop small={props.smallSize}>\r\n        {!props.smallSize && (\r\n          <>\r\n            <Tooltip title={`Start Date ${ConvertDateFormat(props.value[5])}`}>\r\n              <SmallPointerIcon\r\n                id=\"startdate\"\r\n                position={-1}\r\n                src={SmallPointer}\r\n              ></SmallPointerIcon>\r\n            </Tooltip>\r\n          </>\r\n        )}\r\n        <Tooltip\r\n          title={`Project Progress %${Math.round(\r\n            getLocationOnProgressBar(\"progressofproject\")\r\n          )}`}\r\n        >\r\n          <BigPointerIcon\r\n            small={props.smallSize}\r\n            id=\"progressofproject\"\r\n            position={getLocationOnProgressBar(\"progressofproject\") - 2}\r\n            src={BigPointer}\r\n          ></BigPointerIcon>\r\n        </Tooltip>\r\n        {!props.smallSize && (\r\n          <>\r\n            <Tooltip title={`End Date ${ConvertDateFormat(props.value[2])}`}>\r\n              <SmallPointerIcon\r\n                src={SmallPointer}\r\n                position={getLocationOnProgressBar(\"enddate\")}\r\n                id=\"enddate\"\r\n              ></SmallPointerIcon>\r\n            </Tooltip>\r\n\r\n            {\r\n              <Tooltip\r\n                title={`Planned End Date ${ConvertDateFormat(props.value[1])}`}\r\n              >\r\n                <PlannedAndDatePointer\r\n                  src={SmallPointer}\r\n                  position={getLocationOnProgressBar(\r\n                    \"plannedenddate-startdate\"\r\n                  )}\r\n                  id=\"plannedenddate\"\r\n                ></PlannedAndDatePointer>\r\n              </Tooltip>\r\n            }\r\n          </>\r\n        )}\r\n      </MainContainerTop>\r\n      <Tooltip title=\"100%\">\r\n        <MainContainerBody small={props.smallSize}>\r\n          {\r\n            <>\r\n              <MainContainerGrayArea\r\n                width={getLocationOnProgressBar(\"widthofGray\")}\r\n              >\r\n                {\" \"}\r\n                <Tooltip\r\n                  title={`${Math.round(getLocationOnProgressBar(\"GrayLine\"))}%`}\r\n                >\r\n                  <FirstLine\r\n                    width={getLocationOnProgressBar(\"GrayLine\")}\r\n                  ></FirstLine>\r\n                </Tooltip>\r\n                <Tooltip title={`${getLocationOnProgressBar(\"YellowLine\")}%`}>\r\n                  <SecondLine\r\n                    width={Math.round(getLocationOnProgressBar(\"YellowLine\"))}\r\n                  ></SecondLine>\r\n                </Tooltip>\r\n              </MainContainerGrayArea>\r\n            </>\r\n          }\r\n        </MainContainerBody>\r\n      </Tooltip>\r\n      {!props.smallSize && (\r\n        <>\r\n          <MainContainerBottom>\r\n            {calculateMilestonesPositioning(\r\n              props.milestones,\r\n              props.value[5],\r\n              getLocationOnProgressBar(\"FullWidth\"),\r\n              getLocationOnProgressBar(\"Isexpired\"),\r\n              getLocationOnProgressBar(\"widthofGray\"),\r\n              getLocationOnProgressBar(\"enddate-startdate\")\r\n            ).map((elm, index) => {\r\n              return (\r\n                <Tooltip title={`Milestone ${index + 1}`}>\r\n                  <MilestonesIcon\r\n                    position={elm}\r\n                    src={MilestonePointer}\r\n                  ></MilestonesIcon>\r\n                </Tooltip>\r\n              )\r\n            })}\r\n          </MainContainerBottom>\r\n        </>\r\n      )}\r\n    </TopHeaderStatusBarContainer>\r\n  )\r\n}\r\n\r\nexport default LinearProgressBar\r\n","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\RadioButtons.tsx",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\Draggable.tsx",["104","105","106","107","108","109","110","111","112","113","114"],"import UserLogo from \"../../static/svgicon/userDefault.svg\"\r\nimport IfLogo from \"../../static/svgicon/iflogo.svg\"\r\nimport StatusBarIcon from \"../../static/svgicon/statusbar.svg\"\r\nimport SearchButtonSvg from \"../../static/svgicon/searchbutton.svg\"\r\nimport MilestoneTabSvg from \"../../static/svgicon/milestonetab.svg\"\r\nimport AddIcon from \"../../static/svgicon/addicon.svg\"\r\nimport EditForm from \"../forms/editprojectnameform\"\r\nimport DatePickerForm from \"../forms/datepickerForm\"\r\nimport DescriptionBoxTextArea from \"../forms/descriptionProjectForm\"\r\nimport ClockIcon from \"../../static/svgicon/clock.svg\"\r\nimport threeDotImage from \"../../static/svgicon/threedot.svg\"\r\nimport BıgProgressIcon from \"../../static/svgicon/bigprogressicon.svg\"\r\nimport {\r\n  MilestonesWrapper,\r\n  MilestonesBodyRoot,\r\n  MilestonesDateContentRoot,\r\n  MilestoneDateContentContanier,\r\n  MilestoneDateContentLabel,\r\n  MilestoneLeftSide,\r\n  MilestoneGoalStatic,\r\n  MilestoneGoalContent,\r\n  MilestoneDateDataContent,\r\n  MilestoneStatusBarsContentContainer,\r\n  MilestoneEndThreeDotContainer,\r\n  ClockIconContainer,\r\n  MilestoneEndThreeDotImage,\r\n  MilestoneGoalStaticsContainer,\r\n  ClockIconImage,\r\n  MilestoneStatusBarContentItems\r\n} from \"../ui/ConstantUi\"\r\nimport CircleProgressContent from \"../ui/CircleProgressContent\"\r\nimport { ConvertDateFormat } from \"../../functions/cleaningData\"\r\nimport LinearProgressBar from \"../ui/LinearProgressBar\"\r\n\r\nimport React, { useState } from \"react\"\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\n\r\ninterface DragComponentProps {\r\n  goalachiveng: number\r\n  value: any\r\n  milestones: any\r\n}\r\nconst DragComponent: React.FC<DragComponentProps> = props => {\r\n  const [characters, updateCharacters] = useState(props.milestones)\r\n  // React.useEffect(() => {\r\n  //   console.log(props.data)\r\n  // }, [])\r\n  function handleOnDragEnd(result: any) {\r\n    if (!result.destination) return\r\n    const items = Array.from(characters)\r\n    const [reorderedItem] = items.splice(result.source.index, 1)\r\n    items.splice(result.destination.index, 0, reorderedItem)\r\n    updateCharacters(items)\r\n  }\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={handleOnDragEnd}>\r\n      <Droppable droppableId=\"characters\">\r\n        {provided => (\r\n          <MilestonesBodyRoot\r\n            className=\"characters\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {characters.map(\r\n              (\r\n                {\r\n                  id,\r\n                  duration,\r\n                  progress,\r\n                  relativeProgress,\r\n                  startDate,\r\n                  dueDate,\r\n                  is_main_project\r\n                },\r\n                index: number\r\n              ) => {\r\n                return (\r\n                  <Draggable key={id} draggableId={id} index={index}>\r\n                    {provided => (\r\n                      <>\r\n                        <MilestonesWrapper\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          key={index}\r\n                        >\r\n                          <MilestoneLeftSide>\r\n                            <ClockIconContainer>\r\n                              <ClockIconImage src={ClockIcon}></ClockIconImage>\r\n                            </ClockIconContainer>\r\n                            <MilestoneGoalStaticsContainer>\r\n                              {\" \"}\r\n                              <MilestoneGoalStatic>Goal</MilestoneGoalStatic>\r\n                              <MilestoneGoalContent>\r\n                                Type in the goal of the milestone here\r\n                              </MilestoneGoalContent>\r\n                            </MilestoneGoalStaticsContainer>\r\n                          </MilestoneLeftSide>\r\n                          <MilestonesDateContentRoot>\r\n                            <MilestoneDateContentContanier>\r\n                              <MilestoneDateContentLabel>\r\n                                Start Date\r\n                              </MilestoneDateContentLabel>\r\n                              <MilestoneDateDataContent>\r\n                                {ConvertDateFormat(startDate)}\r\n                              </MilestoneDateDataContent>\r\n                            </MilestoneDateContentContanier>\r\n                            <MilestoneDateContentContanier>\r\n                              <MilestoneDateContentLabel>\r\n                                End Date\r\n                              </MilestoneDateContentLabel>\r\n                              <MilestoneDateDataContent>\r\n                                {ConvertDateFormat(dueDate)}\r\n                              </MilestoneDateDataContent>\r\n                            </MilestoneDateContentContanier>\r\n                            <MilestoneDateContentContanier>\r\n                              <MilestoneDateContentLabel>\r\n                                Duration\r\n                              </MilestoneDateContentLabel>\r\n                              <MilestoneDateDataContent>\r\n                                {duration}\r\n                              </MilestoneDateDataContent>\r\n                            </MilestoneDateContentContanier>\r\n                          </MilestonesDateContentRoot>\r\n                          <MilestoneStatusBarsContentContainer>\r\n                            <CircleProgressContent\r\n                              progressvalue={props.goalachiveng}\r\n                              smallSize\r\n                            ></CircleProgressContent>\r\n                            <div style={{ display: \"flex\", width: \"50%\" }}>\r\n                              <LinearProgressBar\r\n                                milestones={props.milestones}\r\n                                value={props.value}\r\n                                smallSize\r\n                              ></LinearProgressBar>\r\n                            </div>\r\n                          </MilestoneStatusBarsContentContainer>\r\n                          <MilestoneEndThreeDotContainer>\r\n                            <MilestoneEndThreeDotImage\r\n                              src={threeDotImage}\r\n                            ></MilestoneEndThreeDotImage>\r\n                          </MilestoneEndThreeDotContainer>\r\n                        </MilestonesWrapper>\r\n                      </>\r\n                    )}\r\n                  </Draggable>\r\n                )\r\n              }\r\n            )}\r\n            {provided.placeholder}\r\n          </MilestonesBodyRoot>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  )\r\n}\r\n\r\nexport default DragComponent\r\n","C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\DatePicker.tsx",["115"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\functions\\cleaningData.tsx",["116"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\index.tsx",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\Navbar.tsx",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\screens\\ProjectDetails.tsx",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\ConstantUi.tsx",["143"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\CircleProgressContent.tsx",["144"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\createProjectForm.tsx",[],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\forms\\editprojectnameform.tsx",["145","146","147","148","149"],"C:\\Users\\Thermal Take\\Desktop\\deployeddjango\\deployedenv\\frontend\\src\\components\\ui\\Checkbox.tsx",[],{"ruleId":"150","severity":1,"message":"151","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":17},{"ruleId":"150","severity":1,"message":"154","line":7,"column":3,"nodeType":"152","messageId":"153","endLine":7,"endColumn":7},{"ruleId":"150","severity":1,"message":"155","line":8,"column":3,"nodeType":"152","messageId":"153","endLine":8,"endColumn":12},{"ruleId":"150","severity":1,"message":"156","line":15,"column":8,"nodeType":"152","messageId":"153","endLine":15,"endColumn":13},{"ruleId":"150","severity":1,"message":"157","line":16,"column":8,"nodeType":"152","messageId":"153","endLine":16,"endColumn":21},{"ruleId":"158","severity":1,"message":"159","line":36,"column":6,"nodeType":"160","endLine":36,"endColumn":40,"suggestions":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"150","severity":1,"message":"166","line":24,"column":7,"nodeType":"152","messageId":"153","endLine":24,"endColumn":28},{"ruleId":"162","replacedBy":"167"},{"ruleId":"164","replacedBy":"168"},{"ruleId":"150","severity":1,"message":"169","line":13,"column":10,"nodeType":"152","messageId":"153","endLine":13,"endColumn":19},{"ruleId":"170","severity":1,"message":"171","line":80,"column":31,"nodeType":"172","messageId":"173","endLine":80,"endColumn":33},{"ruleId":"158","severity":1,"message":"174","line":91,"column":6,"nodeType":"160","endLine":91,"endColumn":19,"suggestions":"175"},{"ruleId":"158","severity":1,"message":"176","line":99,"column":6,"nodeType":"160","endLine":99,"endColumn":8,"suggestions":"177"},{"ruleId":"150","severity":1,"message":"178","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"179","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":28},{"ruleId":"150","severity":1,"message":"180","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":21},{"ruleId":"150","severity":1,"message":"181","line":14,"column":3,"nodeType":"152","messageId":"153","endLine":14,"endColumn":20},{"ruleId":"150","severity":1,"message":"182","line":15,"column":3,"nodeType":"152","messageId":"153","endLine":15,"endColumn":32},{"ruleId":"150","severity":1,"message":"183","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":16},{"ruleId":"150","severity":1,"message":"184","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"180","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":21},{"ruleId":"150","severity":1,"message":"185","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":23},{"ruleId":"150","severity":1,"message":"186","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":23},{"ruleId":"150","severity":1,"message":"187","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":15},{"ruleId":"150","severity":1,"message":"188","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":16},{"ruleId":"150","severity":1,"message":"189","line":8,"column":8,"nodeType":"152","messageId":"153","endLine":8,"endColumn":22},{"ruleId":"150","severity":1,"message":"190","line":9,"column":8,"nodeType":"152","messageId":"153","endLine":9,"endColumn":30},{"ruleId":"150","severity":1,"message":"191","line":12,"column":8,"nodeType":"152","messageId":"153","endLine":12,"endColumn":23},{"ruleId":"150","severity":1,"message":"192","line":29,"column":3,"nodeType":"152","messageId":"153","endLine":29,"endColumn":33},{"ruleId":"150","severity":1,"message":"193","line":73,"column":9,"nodeType":"152","messageId":"153","endLine":73,"endColumn":30},{"ruleId":"150","severity":1,"message":"194","line":1,"column":10,"nodeType":"152","messageId":"153","endLine":1,"endColumn":34},{"ruleId":"150","severity":1,"message":"180","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":21},{"ruleId":"150","severity":1,"message":"195","line":13,"column":8,"nodeType":"152","messageId":"153","endLine":13,"endColumn":17},{"ruleId":"150","severity":1,"message":"196","line":14,"column":8,"nodeType":"152","messageId":"153","endLine":14,"endColumn":21},{"ruleId":"150","severity":1,"message":"191","line":15,"column":8,"nodeType":"152","messageId":"153","endLine":15,"endColumn":23},{"ruleId":"150","severity":1,"message":"197","line":33,"column":3,"nodeType":"152","messageId":"153","endLine":33,"endColumn":31},{"ruleId":"150","severity":1,"message":"179","line":35,"column":3,"nodeType":"152","messageId":"153","endLine":35,"endColumn":21},{"ruleId":"150","severity":1,"message":"198","line":36,"column":3,"nodeType":"152","messageId":"153","endLine":36,"endColumn":30},{"ruleId":"150","severity":1,"message":"199","line":46,"column":3,"nodeType":"152","messageId":"153","endLine":46,"endColumn":20},{"ruleId":"150","severity":1,"message":"200","line":47,"column":3,"nodeType":"152","messageId":"153","endLine":47,"endColumn":21},{"ruleId":"150","severity":1,"message":"201","line":48,"column":3,"nodeType":"152","messageId":"153","endLine":48,"endColumn":28},{"ruleId":"150","severity":1,"message":"202","line":49,"column":3,"nodeType":"152","messageId":"153","endLine":49,"endColumn":32},{"ruleId":"150","severity":1,"message":"203","line":50,"column":3,"nodeType":"152","messageId":"153","endLine":50,"endColumn":28},{"ruleId":"150","severity":1,"message":"204","line":51,"column":3,"nodeType":"152","messageId":"153","endLine":51,"endColumn":20},{"ruleId":"150","severity":1,"message":"205","line":52,"column":3,"nodeType":"152","messageId":"153","endLine":52,"endColumn":22},{"ruleId":"150","severity":1,"message":"206","line":53,"column":3,"nodeType":"152","messageId":"153","endLine":53,"endColumn":23},{"ruleId":"150","severity":1,"message":"207","line":54,"column":3,"nodeType":"152","messageId":"153","endLine":54,"endColumn":27},{"ruleId":"150","severity":1,"message":"208","line":55,"column":3,"nodeType":"152","messageId":"153","endLine":55,"endColumn":38},{"ruleId":"150","severity":1,"message":"209","line":56,"column":3,"nodeType":"152","messageId":"153","endLine":56,"endColumn":32},{"ruleId":"150","severity":1,"message":"210","line":57,"column":3,"nodeType":"152","messageId":"153","endLine":57,"endColumn":21},{"ruleId":"150","severity":1,"message":"211","line":58,"column":3,"nodeType":"152","messageId":"153","endLine":58,"endColumn":28},{"ruleId":"150","severity":1,"message":"212","line":59,"column":3,"nodeType":"152","messageId":"153","endLine":59,"endColumn":32},{"ruleId":"150","severity":1,"message":"213","line":60,"column":3,"nodeType":"152","messageId":"153","endLine":60,"endColumn":17},{"ruleId":"150","severity":1,"message":"192","line":61,"column":3,"nodeType":"152","messageId":"153","endLine":61,"endColumn":33},{"ruleId":"150","severity":1,"message":"214","line":65,"column":10,"nodeType":"152","messageId":"153","endLine":65,"endColumn":27},{"ruleId":"158","severity":1,"message":"215","line":231,"column":6,"nodeType":"160","endLine":231,"endColumn":27,"suggestions":"216"},{"ruleId":"158","severity":1,"message":"217","line":234,"column":6,"nodeType":"160","endLine":234,"endColumn":26,"suggestions":"218"},{"ruleId":"150","severity":1,"message":"219","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},{"ruleId":"150","severity":1,"message":"178","line":2,"column":17,"nodeType":"152","messageId":"153","endLine":2,"endColumn":26},{"ruleId":"150","severity":1,"message":"220","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":16},{"ruleId":"150","severity":1,"message":"221","line":35,"column":10,"nodeType":"152","messageId":"153","endLine":35,"endColumn":25},{"ruleId":"150","severity":1,"message":"222","line":35,"column":27,"nodeType":"152","messageId":"153","endLine":35,"endColumn":45},{"ruleId":"150","severity":1,"message":"223","line":38,"column":17,"nodeType":"152","messageId":"153","endLine":38,"endColumn":25},{"ruleId":"150","severity":1,"message":"224","line":40,"column":25,"nodeType":"152","messageId":"153","endLine":40,"endColumn":41},"@typescript-eslint/no-unused-vars","'getdata' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useParams' is defined but never used.","'axios' is defined but never used.","'DragComponent' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has an unnecessary dependency: 'window.location.href'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["225"],"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"'SubSubProjectGroupBox' is assigned a value but never used.",["226"],["227"],"'stringify' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook React.useEffect has missing dependencies: 'defaultValue', 'props.defaultValue', 'props.firstTimeChange', and 'withoutSave'. Either include them or remove the dependency array. If 'setActiveDescriptionText' needs the current value of 'props.defaultValue', you can also switch to useReducer instead of useState and read 'props.defaultValue' in the reducer.",["228"],"React Hook React.useEffect has missing dependencies: 'defaultValue', 'props.defaultValue', and 'props.firstTimeChange'. Either include them or remove the dependency array.",["229"],"'Component' is defined but never used.","'TopHeaderStatusBar' is defined but never used.","'StatusBarIcon' is defined but never used.","'Convertpercentage' is defined but never used.","'LinearProgressBarCleaningData' is defined but never used.","'UserLogo' is defined but never used.","'IfLogo' is defined but never used.","'SearchButtonSvg' is defined but never used.","'MilestoneTabSvg' is defined but never used.","'AddIcon' is defined but never used.","'EditForm' is defined but never used.","'DatePickerForm' is defined but never used.","'DescriptionBoxTextArea' is defined but never used.","'BıgProgressIcon' is defined but never used.","'MilestoneStatusBarContentItems' is defined but never used.","'handleStartDateChange' is assigned a value but never used.","'differenceInBusinessDays' is defined but never used.","'ClockIcon' is defined but never used.","'threeDotImage' is defined but never used.","'TopHeaderLeftBıgProgressIcon' is defined but never used.","'TopHeaderStatusBarContainer' is defined but never used.","'MilestonesWrapper' is defined but never used.","'MilestonesBodyRoot' is defined but never used.","'MilestonesDateContentRoot' is defined but never used.","'MilestoneDateContentContanier' is defined but never used.","'MilestoneDateContentLabel' is defined but never used.","'MilestoneLeftSide' is defined but never used.","'MilestoneGoalStatic' is defined but never used.","'MilestoneGoalContent' is defined but never used.","'MilestoneDateDataContent' is defined but never used.","'MilestoneStatusBarsContentContainer' is defined but never used.","'MilestoneEndThreeDotContainer' is defined but never used.","'ClockIconContainer' is defined but never used.","'MilestoneEndThreeDotImage' is defined but never used.","'MilestoneGoalStaticsContainer' is defined but never used.","'ClockIconImage' is defined but never used.","'ConvertDateFormat' is defined but never used.","React Hook React.useCallback has missing dependencies: 'addMilestoneFunction' and 'getdata'. Either include them or remove the dependency array.",["230"],"React Hook React.useEffect has a missing dependency: 'getdata'. Either include it or remove the dependency array.",["231"],"'React' is defined but never used.","'ReactDOM' is defined but never used.","'editActiveArray' is assigned a value but never used.","'seteditActiveArray' is assigned a value but never used.","'setLabel' is assigned a value but never used.","'setisNameChanged' is assigned a value but never used.",{"desc":"232","fix":"233"},"no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [detailPage]",{"range":"242","text":"243"},"Update the dependencies array to be: [defaultValue, processName, props.defaultValue, props.firstTimeChange, withoutSave]",{"range":"244","text":"245"},"Update the dependencies array to be: [defaultValue, props.defaultValue, props.firstTimeChange]",{"range":"246","text":"247"},"Update the dependencies array to be: [addMilestoneFunction, data, getdata, milestonesTab]",{"range":"248","text":"249"},"Update the dependencies array to be: [getdata, props.match.params]",{"range":"250","text":"251"},[1018,1052],"[detailPage]",[2778,2791],"[defaultValue, processName, props.defaultValue, props.firstTimeChange, withoutSave]",[3000,3002],"[defaultValue, props.defaultValue, props.firstTimeChange]",[8398,8419],"[addMilestoneFunction, data, getdata, milestonesTab]",[8469,8489],"[getdata, props.match.params]"]